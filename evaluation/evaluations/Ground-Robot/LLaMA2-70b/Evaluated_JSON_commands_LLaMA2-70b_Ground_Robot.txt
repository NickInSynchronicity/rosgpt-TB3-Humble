Move forward for 1 meter.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Proceed straight ahead covering a distance of 1 meter.,{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The given command perfectly matches with the JSON structure in terms of action and parameters. The action in the command "Proceed straight ahead" is the same as the "action" in the JSON: "move". The "distance" is stated as 1 meter in both the command and the JSON. Even though the linear speed is not specified in the command, it\'s okay as any reasonable value in the JSON is accepted if it\'s not specified in the natural language command. Overall, the keys in the JSON truly reflect the command given.']
Advance by 1 meter in the forward direction.,{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}};['4.5; The command matches with the JSON structure but the natural language command does not specify the "linear_speed" while in the JSON it is mentioned as 1.']
Take a step forward spanning 1 meter.,{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}};['4; The command corresponds correctly to the JSON and is largely conformant. The "linear_speed" value isn\'t specified in the command, but a reasonable value of 1 is provided in the JSON. However, the command specifies a stepping action, which may not be entirely equivalent to a linear move action.']
Move ahead for a length of 1 meter.,{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Rotate counterclockwise by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -90, "is_clockwise": false, "unit": "degrees"}};["4; The command somewhat conforms to the JSON. It correctly identifies the 'action' as 'rotate' and 'angle' as -90, to indicate counterclockwise rotation, and 'unit' as 'degrees'. However, 'angular_velocity' is not specified in the natural language command, but it is present in the JSON. Also, 'is_clockwise': false is added which correctly translates the 'counterclockwise' in the natural language command, but no specific 'is_clockwise' value is given in the sample ontology."]
Rotate in an anti-clockwise direction by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -90, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Turn left by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['5; The action "rotate" and all parameter keys match with the instruction. The angular_velocity is not mentioned in the command but it is given a reasonable value of null in JSON. The direction (left) matches with the false value of "is_clockwise" key. The value for the "angle" key(90) is also correct. The unit "degrees" is already provided in the ontology example.']
Rotate 90 degrees counterclockwise.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['4; The command matches the JSON structure and values perfectly except for one discrepancy. While the natural language command mentions a counterclockwise rotation, the value for "is_clockwise" in the JSON is set to false. However, this is still correct as not moving clockwise is the same as moving counterclockwise. The angular_velocity isn\'t specified in the command, but its given value in JSON is accepted according to the rules.']
Spin in the opposite direction by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": -90, "is_clockwise": false, "unit": "degrees"}};['4; The command and the JSON structure mostly match. However, the natural language command does not specify the angular velocity, so even though the value in the JSON is reasonable, it is not exactly conform. The direction and degree of rotation are specified correctly and match the command. The "unit" is also correct.']
Move backward for 2 seconds.,{"action": "move", "params": {"linear_speed": -1, "distance": 0, "is_forward": false, "unit": "meter"}};['2; The JSON structure contains the "move" action which is aligned with the command. However, the "linear_speed" as negative value may not be consistent as the command didn\'t specify speed. Also, the distance and time factors are contradicting between the command and the JSON structure. Additionally, time is not considered in the JSON structure. The \'unit\' as \'meter\' is also not specified but it\'s default understanding in cases.']
Go backwards for a duration of 2 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "duration": 2, "unit": "second"}};['1; There is no "duration" key in the sample JSON structure for the "move" action, only "linear_speed", "distance",  "is_forward" and "unit".']
Reverse your direction and travel for a span of 2 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The JSON does not match the command well. While there is an element of direction reversal present in both ("is_forward": false in the JSON should correspond to \'Reverse your direction\' in the language command), the JSON does not address the \'travel for a span of 2 seconds\' part of the command at all. Furthermore, the JSON includes "linear_speed": 0 and "distance": 0, both of which are misaligned with the natural language command\'s implication of movement.']
Retreat for a time frame of 2 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The JSON command provided does not match the natural language command well. It contains correct fields "action" and "is_forward": false, which corresponds to the \'retreat\' action in the natural language command. However, it fails to provide a matching for the \'time frame of 2 seconds\' part of the command. The fields \'linear_speed\' and \'distance\' are both given a value of 0, which would not result in any movement. The command does not mention any specific distance or speed for the retreat move, so any reasonable non-zero values for \'linear_speed\' and \'distance\' would have been acceptable. The command \'Retreat for a time frame of 2 seconds\' should translate to a backward motion for a certain distance at a certain speed for 2 seconds, but there\'s no key for setting the time in JSON structure.']
Take two seconds to move in the opposite direction.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "second"}};['2; Although there is a match in the action type ("move") and the parameter "is_forward", there is no conformity in the remaining parameters. The "unit" in the JSON structure is given as "second", while in the sample ontology it should be "meter". Furthermore, "linear_speed" and "distance" parameters mentioned in the JSON structure do not correspond to any information provided in the natural language command.']
Turn left and move forward for 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['1; The natural language command instructs to "turn left and move forward for 5 meters" - the operation describes two actions; rotation and movement. However, the JSON provided only pertains to the "move" operation and does not provide any information about the "rotate" action. The information given in the JSON structure is not fully conforming with the natural language command.']
Move forward for 5 meters, then turn left.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['2; The JSON structure provided matches with the "Move forward for 5 meters" part of the command, hence it only partially fits the natural language command. The action of \'turn left\' in the command is not reflected in the JSON structure provided.']
Proceed for 5 meters, then make a left turn.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};["1; The natural language command asks for two actions to be performed - moving for a certain distance and then making a left turn. The provided JSON structure only represents the 'move' action and does not include any command for turning left. Hence it is not a complete match with the command."]
Take a left turn and continue moving forward for 5 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['2; While the action "rotate" is represented in the JSON structure, it\'s parameters are not specified in the command and hence are assigned null. Furthermore, the command\'s instruction to move forward for 5 meters is not represented in the provided JSON structures.']
Make a leftward turn and advance for 5 meters.,{"action": "rotate", "params": {"angular_velocity": undef, "angle": undef, "is_clockwise": false, "unit": "degrees"}};['2; Partially conform. The \'rotate\' action in the JSON response is applicable for the "Make a leftward turn" part of the command however, there\'s no specific angular_velocity or angle given. Moreover the "advance for 5 meters" is not represented in the provided JSON structure at all. The structure provided doesn\'t cover the move action and distance required.']
Rotate clockwise by 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['4; Mostly conform. While the JSON structure does match the natural language command to rotate clockwise by 180 degrees, the "angular_velocity" parameter is not specified in the natural language command and is therefore null in the JSON. However, this doesn\'t affect the main action of rotating, so the conformity score is still high.']
Perform a 180-degree clockwise rotation.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform.']
Turn in a clockwise direction by 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};["5; The natural language command perfectly matches with the JSON structure command. The action 'rotate' is accurately depicted, along with the correct rotation direction (clockwise) and the 'angle' value (180). Though the 'angular_velocity' value is missing in the natural language command any reasonable value in the JSON is accepted. 'unit' of angle mentioned in the JSON is also not specified in the command, but since it's a common sense unit for angle measure, it can be accepted. So, it is a perfect match."]
Rotate by 180 degrees in a clockwise manner.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['4.5; The command almost exactly conforms to the JSON structure except for the missing angular velocity value, however considering the parameter as optional, the rest of the JSON matches the command perfectly.']
Execute a clockwise rotation of 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['4; The JSON structure correctly interprets the action to be performed (clockwise rotation) and specifies the correct angle for rotation in the right unit (degrees). While the angular velocity is not specified in the original command, it allows any reasonable value, thus the null here is acceptable. The point missing for a perfect score is due to the action key being "rotate" while in the sample ontology it is "move" and "go_to_goal".']
Move forward at a velocity of 0.5 meters per second for 10 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}};['2; While the "action" key matches and most of the "params" also match (specifically "linear_speed", "is_forward", and "unit"), the "distance" in the JSON does not match the information from the command. Distance was calculated based on time (10 seconds) which is not mentioned in the JSON.']
Proceed with a speed of 0.5 meters per second for a duration of 10 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}};['2; The speed matches with the command however, there is no time duration mentioned in the command. The command mentions linear_speed however it does not provide any information regarding the direction of the movement (is_forward).']
Advance at 0.5 meters per second for a total of 10 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}};['3; Partially conforms. The "linear_speed" and "is_forward" values match the natural language command but the "distance" value in the JSON doesn\'t match the command. The command suggests moving for a total of 10 seconds, not 5 meters. The command does not specify a distance to be moved, but a time duration for the action. Therefore, the JSON structure doesn\'t fully align with the command.']
Travel forward, maintaining a velocity of 0.5 meters per second, for 10 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}};["3; The action 'move' and parameter 'linear speed' match the command, and 'is_forward' is correctly inferred as true. However, the distance is incorrectly derived and the time for the movement is not mentioned in the JSON structure."]
Move ahead for a period of 10 seconds, with a speed of 0.5 meters per second.,{"action": "move", "params": {"linear_speed": 0.5, "distance": null, "is_forward": true, "duration": 10, "unit": "second"}};['2; The JSON structure partially matches the natural language command. The action "move" and linear speed match. However, the command specification for duration and is_forward are not available in the provided JSON template and therefore cannot be matched. The distance parameter is not mentioned in the command.']
Turn right and move forward for 3 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; The natural language command refers to a rotation and a movement action, but the JSON structure only covers the rotation part. Additionally, the "is_clockwise" parameter in the JSON structure is set to false, which doesn\'t match the "Turn right" instruction in the command. The "angle" parameter in the JSON structure does properly match the 90 degree part but the "angular_velocity" is set as null which should have had a reasonable value, hence the script does not fully conform to the command.']
Proceed forward for a distance of 3 meters after making a right turn.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}};['2; The natural language command combines two actions: rotation and movement. However, the provided JSON structure covers only the rotation part, thus partially conforming to the command. Movement related part is missing in the JSON.']
After turning right, continue straight for 3 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": true, "unit": "meter"}};['3; The command includes movement which is represented in the JSON. However, the rotation (turning right) part of the command is not reflected in the JSON structure. It misses the "rotate" action. Therefore, the match is partial.']
Make a right turn and advance for a distance of 3 meters.,{"action": "rotate", "params": {"angular_velocity": undef, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['4; The natural command matches with the "rotate" action, but not with the mentioned parameters. The clockwise direction isn\'t specified in the command, so it\'s hard to determine whether "right turn" refers to a accurate clockwise rotation. The "angular_velocity" key is not mentioned in the natural language command, so it\'s not clear if the undeclared value in JSON is acceptable. Thus, while the command and structure have a partial match, the lack of specificity results in less conformity.']
Execute a rightward turn and then travel straight ahead for 3 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};['1; The natural language command only partially matches with the JSON structure. The "rotate" action is mentioned in the command but the specific parameters like "angular_velocity" and "angle" are not given in the command. Furthermore, the movement straight for 3 meters is not reflected in any JSON structure.']
Move backward at a velocity of 1 meter per second for 4 seconds.,{"action": "go_to_goal", "params": {"location": {"type}};['0; The command given does not match with the JSON structure provided. The command is related to move action with linear_speed and time as parameters but the provided JSON structure represents go_to_goal action with location as parameter.']
Go in reverse, traveling at a speed of 1 meter per second for a duration of 4 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": -4, "is_forward": false, "unit": "meter"}};['4; The information in the command matches mostly with the JSON structure. "Go in reverse" corresponds to "is_forward": false. "Traveling at a speed of 1 meter per second" corresponds to "linear_speed": 1, and "unit": "meter". But "for a duration of 4 seconds" is not mapped correctly to "distance": -4. Duration cannot be directly translated into distance without knowing the speed, which is not specified in the JSON structure. The direction of distance is reversed (-4) presumably to represent the reverse direction, but this is not explicit in the provided ontology.']
Reverse direction and move at a speed of 1 meter per second for a period of 4 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meter"}};['2; The JSON structure matches the "move" command from the sample ontology and conforms to the parameters. However, the "distance" parameter in the JSON does not match the natural language command, where it refers to a period of time (seconds) rather than a distance. Besides, the concept of \'reverse\' in the natural language command could be interpreted differently in different context, a more accurate representation could be \'is_forward\': False.']
Travel backward for 4 seconds, maintaining a velocity of 1 meter per second.,{"action": "go_to_goal", "params": {"location": {"type}};['0; The natural language command specifies a backward movement, but there is no corresponding action in the JSON. Moreover, the presented JSON information refers to an action of going to a goal, specifically a location, which is not mentioned in the command.']
Move in the opposite direction at a constant speed of 1 meter per second for 4 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meter"}};['4; The command somewhat conforms to the JSON structure. The action and parameters match, but the duration of the movement is not specified in the JSON even though it is mentioned in the command. So, the interpretation of how the "distance" value is derived based on the duration of 4 seconds and speed of 1 meter/second may vary.']
Rotate counterclockwise by 270 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 270, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Rotate 270 degrees counterclockwise.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 270, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Turn left by 270 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Perform a counterclockwise rotation of 270 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform. The natural language command specifies a counterclockwise rotation action of 270 degrees, which is exactly matched in the JSON structure: the action is "rotate", the angle is 270, "is_clockwise" is false indicating counterclockwise rotation, and the unit is in "degrees". Although "angular_velocity" is not specified, any value here is acceptable as per instructions.']
Rotate in the opposite direction by 270 degrees.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": -270, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Move forward for 2 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Proceed ahead by a distance of 2 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}};['4.5; The natural language command exactly matches the JSON structure. Only the "linear_speed" doesn\'t match because its not provided in the command but the assistant has filled in a reasonable value.']
Advance for a span of 2 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}};['5; The command "Advance for a span of 2 meters" matches perfectly with the JSON structure. The action "move" and parameter "distance" with value 2 and unit "meter" are correctly reflected in the JSON. The unspecified linear speed and direction (is_forward) are reasonably populated.']
Travel forward, covering a distance of 2 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The natural language command corresponds perfectly with the provided JSON structure, fulfilling all keys as per the sample ontology. The action is "move", the distance is 2 and the direction is forward which is represented by "is_forward": true in the JSON structure. Furthermore, the cycle of movements would be in meters, which matches with the "unit" specified in the JSON structure.']
Move straight ahead, going 2 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}};["4; The JSON structure correctly represents the action of moving and the direction being forward. However, the specific linear speed isn't mentioned in the natural language command and so it might not be exactly 1 as in the JSON."]
Rotate clockwise by 45 degrees and move forward for 1 meter.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 45, "is_clockwise": true, "unit": "degrees"}};['2; The natural language command includes two actions: rotating and moving forward. However, the JSON structure only conforms to the "rotate" action. The \'move\' action is mentioned but isn\'t represented in the provided JSON. The "rotate" action\'s parameters are mostly matching except that the "angle" is mentioned as 45 in the command while represented as "40" in JSON.']
Move forward for 1 meter while rotating 45 degrees clockwise.,{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}};['2; The natural language command describes two actions: moving and rotating. However, the JSON provided only matches with the movement part of the command and does not include the rotation action. The move action in the JSON structure does conform to the move action in the command but missing the rotation action results in only partial conformity.']
Perform a 45-degree clockwise rotation, followed by a forward movement of 1 meter.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 45, "is_clockwise": true, "unit": "degrees"}};['4; The rotation action is exactly conforming with the sample keys, however the forward movement part is not present in the JSON structure.']
Rotate by 45 degrees in a clockwise direction and then proceed to move forward for 1 meter.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 45, "is_clockwise": true, "unit": "degrees"}};['2; Partially conforms. The first part of the statement matches correctly with the provided JSON structure (it specifies "rotate", "angle", "is_clockwise", and "unit"). However, the second part of the command "move forward for 1 meter" isn\'t reflected in the JSON.']
Combine a clockwise rotation of 45 degrees with a forward movement of 1 meter.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "}};['2; The natural language command mentions combining rotation and movement, but the given JSON structure only contains the "move" action with parameters not completely matching the natural language command (a distance of 1 meter vs 2 meters in the JSON). Also, there\'s no representation of the rotation action in the JSON structure.']
Turn left and move forward for 3 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": true, "unit": "second"}};['1; The "move" action in the JSON matches the "move forward" command, but the other parameters such as "turn left" don\'t match the sample ontology. In addition, "3 seconds" was converted to "distance": 3, while in the ontology, distance is not associated with time.']
Proceed straight for 3 seconds after taking a left turn.,{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "second"}};['1; The natural language command and the JSON structure does not match well. The command is about moving straight for a certain time after turning left but JSON structure is about moving straight for a certain distance, without specifying any actions about turning left. The unit of distance is also misrepresented in the JSON structure as "second", which is a unit of time not distance.']
Take a left turn and continue advancing for 3 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};["1; The JSON structure represents a 'rotate' action which matches with the 'Take a left turn' command, but the parameters' values 'angular_velocity', 'angle' and 'is_clockwise' are missing or not correctly represented in the JSON. Also, the command 'continue advancing for 3 seconds' is not represented at all in the JSON structure."]
Make a left turn and proceed forward for a duration of 3 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['0; The JSON does not conform to the natural language command as it does not include the instructions for the robot to proceed forward for a duration of 3 seconds. The action "rotate" and the associated parameters do not clearly have identifiable values specified in the natural language command.']
After turning left, move straight ahead for 3 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['1; The command indicates a "rotate" action and matches the rotate action\'s JSON structure, but there\'s no specified angular velocity or angle. However, the direction of rotation is specified as counter-clockwise (From \'turn left\'). The command also includes a "move" action but no JSON structure corresponds to it.']
Move backward for 1 meter.,{"action": "move", "params": {"linear_speed": -1, "distance": 1, "is_forward": false, "unit": "meter"}};['4; Almost conform. Although the command has been converted correctly to JSON, there is no provision for negative value on linear_speed parameter in the sample ontology. Parameters like distance and is_forward are used to define direction, not linear_speed.']
Reverse direction and travel 1 meter.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['1; The natural language command somewhat matches the JSON structure but not quite. The command calls for a reversal of direction and a certain travel distance, but the provided JSON structure indicates a rotation instead of a movement/reversal action (according to the sample keys). The json used for this command should have been the "move" action with "is_forward" set to False. Also the parameters for "angular_velocity" and "angle" are not specified in the command.']
Go back for a distance of 1 meter.,{"action": "move", "params": {"linear_speed": 0.5, "distance": -1, "is_forward": false, "unit": "meter"}};['4; The JSON structure conforms to the ontology and follows the action and parameters of the natural language command. However, the direction of the movement (backwards) is interpreted as a negative distance rather than changing the "is_forward" parameter to false.']
Retreat for 1 meter.,{"action": "move", "params": {"linear_speed": -1, "distance": 1, "is_forward": false, "unit": "meter"}};['1; The nature of the motion is captured correctly in the JSON because "retreat" implies moving backward which aligns with "is_forward": false. However, it isn\'t clear that the "linear_speed" should be -1 as the command does not specify a speed. The distance is correctly captured as 1 meter. The \'move\' action is also not present in the sample ontology, which has \'go_to_goal\' instead. Therefore the conformity is low.']
Take one step backward covering a distance of 1 meter.,{"action": "move", "params": {"linear_speed": -1, "distance": 1, "is_forward": false, "unit": "meter"}};['5; Exactly conform.']
Rotate counterclockwise by 120 degrees and move forward for 5 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 120, "is_clockwise": false, "unit": "degrees"}};['2; The natural language command fits partially with the JSON structure provided. It correctly maps to the "rotate" action, with 120 degrees and counterclockwise direction. However, the command also includes instruction to move forward for 5 meters, which cannot be represented in the given JSON structure, hence the command is not fully represented in the JSON.']
Perform a counterclockwise rotation of 120 degrees followed by a forward movement of 5 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 120, "is_clockwise": false, "unit": "degrees"}};["3; Only the 'rotate' action information is covered in the given JSON. The natural language command also includes a 'move' action, but the corresponding JSON is not available. Therefore, the command and the JSON partially match."]
Rotate in the counterclockwise direction by 120 degrees and proceed forward for a distance of 5 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 120, "is_clockwise": false, "unit": "degrees"}};['2; The natural language command partially matches with the JSON structures. The "rotate" action with a 120-degree angle in a counter-clockwise (false "is_clockwise") direction is correct. This JSON also does not specify the "angular_velocity" which is acceptable. However, the natural language command also includes the instruction to "proceed forward for a distance of 5 meters" which is not represented as a "move" action in JSON format.']
Turn to the left by an angle of 120 degrees and then move forward for 5 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 120, "is_clockwise": false, "unit": "degrees"}};["3; Partially conform. The natural language command partially matches with the 'rotate' JSON structure but it doesn't match with the 'move' JSON structure. There is also an indication to move forward for 5 meters in the command but that information is not represented in the provided JSON. The 'angular_velocity' is undefined in the JSON which is accepted as per the instruction so it doesn't affect the score."]
Execute a 120-degree counterclockwise rotation and proceed ahead for a distance of 5 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 120, "is_clockwise": false, "unit": "degrees"}};['4; The natural language command partially matches the JSON structure. The rotation action and parameters are correctly mapped, however the \'move\' action is not represented in the JSON. The \'move\' action, specified as "proceed ahead for a distance of 5 meters" in the command, is missing from the JSON structure.']
Move forward at full speed for 20 seconds.,}};["0; The natural language command does not conform to any of the example JSON structures, as it gives a measure of time ('seconds'), not velocity or distance as required in the 'move' structure. The 'full speed' command does not correspond to any of the JSON parameters either."]
Proceed ahead at maximum velocity for a duration of 20 seconds.,{"action": "move", "params": {"linear_speed": maximum_speed, "distance": null, "is_forward": true, "duration": 20, "unit": "second"}};['3; The command and the JSON structure partially match. The command talks about moving ahead, which matches with the "move" action in the JSON. Parameters like "is_forward" and "duration" match. However, "maximum speed" is mentioned in the command, while a specific speed (0.5) is provided in the JSON. Also, the distance parameter is null in the JSON but it is not mentioned in the command.']
Travel straight ahead at top speed for a duration of 20 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": null, "is_forward": true, "duration": 20, "unit": "second"}};['1; The JSON structure partially matches with the natural language command, as the action is "move" and one of the parameters is correct - "is_forward". However, several parameters in the JSON structure such as "linear_speed", "distance" and "unit" don\'t match with the command. "duration" is not defined in the sample ontology keys.']
Advance forward with utmost speed for a period of 20 seconds.,{"action": "move", "params": {"linear_speed": null, "distance": null, "is_forward": true, "duration": 20, "unit": "second"}};['1; The natural language command is partially matching the JSON structure. The action of moving forward is captured, but the "utmost speed" and "period of 20 seconds" is not represented in the JSON structure as it should be. The sample keys do not include a "duration" field under the "move" action, hence lowering the conformity score.']
Go straight ahead at full throttle for a duration of 20 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": null, "is_forward": true, "duration": 20, "unit": "second"}};["2; The action 'move' in the provided JSON matches with the 'Go straight ahead' command. The parameter 'is_forward' is correctly specified as true. However, 'linear_speed' in the JSON should be interpreted as speed rather than the 'full throttle' since no exact value is provided. The 'duration' (also unit-second) parameter does not exist in the sample ontology. The 'distance' parameter should not have a null value, it could have been any reasonable value."]
Rotate clockwise by 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": true, "unit": "degrees"}};['4; Mostly conform. The command "Rotate clockwise by 60 degrees" accurately matches the provided JSON structure. The "action" and "unit" keys are correct, and the value of the "angle" key is correct. However, the "angular_velocity" is null whereas in the natural language command this velocity is not specified, so any reasonable value is accepted. Specifically, null is showing as a possible acceptable value, hence the score is 4.']
Turn right by 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['4; The JSON structure correctly captures the action and the angle of rotation from the natural language command, but it incorrectly states that the rotation should be counter-clockwise. The natural language command specifies a right turn, which would be a clockwise rotation.']
Perform a clockwise rotation of 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform.']
Rotate in a clockwise direction, making a 60-degree turn.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": true, "unit": "degrees"}};['4.5; Mostly conform. The natural language command matches the JSON information, however the angular_velocity is left as null which may cause issues with the functionality.']
Rotate to the right, making a 60-degree angle.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": true, "unit": "degrees"}};['4; The natural language command matches the "rotate" action in the JSON structure which is correct but the angular_velocity is not specified hence it is considered null which is reasonable. The rotation direction of the action is not written literally in the natural language command but assumed as a clockwise direction which makes sense because usually angles are measured in the mathematical direction and the angle of rotation provided equals to the natural language command. Thus, the command is missing one detail ("angular_velocity"), so it does not conform exactly.']
Move backward at a velocity of 0.75 meters per second for 8 seconds.,NoneThe prompt does not contain any action in the ontology, so it should be ignored.Now give the JSON corresponding to this prompt}};["0; The command is related to movement, but neither the specified 'velocity' nor the 'time duration' conform to the provided JSON structures which defines movement in terms of 'linear_speed' and 'distance'. Additionally, the direction 'backward' is not acknowledged in the JSON structure, which only includes a boolean for moving 'forward'."]
Reverse at 0.75 meters per second for a duration of 8 seconds.,{"action": "move", "params": {"linear_speed": 0.75, "distance": -8, "is_forward": false, "unit": "meter"}};['2; Although the JSON structure is closely aligned with the natural language command, the action is not accurately captured. The natural language command is about reversing movement (implying a negative distance direction) but the distance is calculated incorrectly as the product of speed and time which is not represented in the sample ontology. The "is_forward" key is correctly given the value of \'false\', conveying the backward movement and the "linear_speed" key is correctly assigned as 0.75. However, it is not matching completely with the provided ontology.']
Go in the opposite direction with a speed of 0.75 meters per second for 8 seconds.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 90, "is_clockwise": false, "unit": "degrees"}};["1; The natural language command instructs the system to move, not rotate; therefore the JSON structure doesn't conform to the command. Another issue is the discrepancy in values from those mentioned in the natural language command and those in the JSON."]
Travel backwards with a velocity of 0.75 meters per second for a period of 8 seconds.,{"action": "move", "params": {"linear_speed": 0.75, "distance": null, "is_forward": false, "unit": "meter"}};['2; The command in the natural language refers to a move action but the distance is expressed in terms of time (8 seconds) rather than distance, so the "distance" key is mismatched. Furthermore, the "linear_speed" value matches but the "is_forward" key is not explicitly stated in the command, although it can be inferred from "Travel backwards". The "unit" key does match with "meters".']
Move in reverse at a rate of 0.75 meters per second for the next 8 seconds.,{"action": "move", "params": {"linear_speed": 0.75, "distance": null, "is_forward": false, "duration": 8, "unit": "meter"}};['2; Partially conform. The "linear_speed" and "is_forward" values provided in the JSON structure match with those in the natural command. However, the "distance" key is not mentioned in the natural language command and also the \'duration\' key is not in the JSON structure. The \'duration\' key itself is not in the sample ontology. The unit is correctly provided as \'meter\'.']
Turn right and move forward for 4 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};["3; The action 'rotate' and 'params' such as 'angle' and 'unit' conform to the sample keys. But the 'is_clockwise' key does not perfectly match because the command asks to turn right, which means 'is_clockwise' should be 'true'. Also, the command includes moving forward for 4 meters, which is not presented in the JSON structure."]
Take a right turn and proceed straight ahead for a distance of 4 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['0; The natural language command involves two actions (turning and moving straight ahead), but the given JSON structure only corresponds to one action (rotating). The parameters of the "rotate" action in the JSON structure also do not fully match with the natural language command. For instance, the "is_clockwise" key is set to false in the JSON, which does not match with the command to "Take a right turn". Furthermore, the natural language command\'s instruction to "proceed straight ahead for a distance of 4 meters" is not represented in the JSON at all.']
Make a right turn and continue moving forward for 4 meters.,{"action": "rotate", "params": {"angular_velocity": undef, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; The JSON structure partially matches with the natural language command. The "rotate" action is addressed, with the angle suggested and "is_clockwise" correctly interpreted from "right turn". However, a critical part of the command - "continue moving forward for 4 meters" - is not represented in the JSON structure. Additionally, the "angular_velocity" is undefined, which is not acceptable because the natural language command does not provide information to infer a reasonable value.']
Rotate to the right and advance ahead for a distance of 4 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};['2; The natural language command includes two actions, rotation and movement. However, the provided JSON structure only contains information about the rotation (although incomplete). The portion related to moving ahead for a distance of 4 meters is not included in the provided JSON structure and the parameters for the rotation action ("angular_velocity" and "angle") are not defined in the natural language command.']
Go to the right and keep moving straight for 4 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 4, "is_forward": true, "unit": "meter"}};['4; The command "Go to the right and keep moving straight for 4 meters" partially conforms with the given JSON structure. While it correctly matches with the "move" action and accurately describes distance, the direction ("Go to the right") is not captured.']
Move forward for 3 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The given command matches exactly with the JSON structure. The action is "move", the direction is forward (is_forward: true), and the distance is specified as 3 metres, which all are correctly transcribed in the JSON structure.']
Proceed straight ahead for a distance of 3 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The natural language command accurately matches the JSON structure. The "move" action and all parameters ("linear_speed", "distance", "is_forward", and "unit") are exactly in line with the natural language command "Proceed straight ahead for a distance of 3 meters.". Hence, it\'s perfectly reflected in the given JSON structure, thus the score of 5.']
Advance ahead 3 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The command "Advance ahead 3 meters" matches the provided JSON structure perfectly, where action is to \'move\', the movement is forward (\'is_forward\': true), and the distance is specified to be 3 units (metres). The linear speed is not specified in the given natural language command, but it has been given a reasonable value in the JSON structure.']
Go forward a total of 3 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": true, "unit": "meter"}};['5; The natural language command precisely corresponds with the JSON structure. It properly specifies the action as "move" and includes the appropriate parameters: a distance of 3, moving forward, and the unit as meters.']
Travel straight for a distance of 3 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}};["5; Exactly conform. The command asks for the action of moving forward for a certain distance, and these details are precisely captured in the JSON structure mentioning the action as 'move' and distance as '3' in the mentioned unit 'meter'."]
Rotate counterclockwise by 90 degrees and move forward for 2 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['4; The natural language command corresponds with the JSON structure in terms of the "rotate" action, the "angle", the "is_clockwise" parameter and the "unit". However, it doesn\'t specify an "angular_velocity", and the command to move forward for 2 seconds is not represented in the provided JSON.']
Turn left 90 degrees and proceed forward for a duration of 2 seconds.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; Partly conform. The \'rotate\' action matches well with the natural language command with right parameters such as \'angular_velocity\', \'angle\' and \'is_clockwise\'. However, there is mention of the \'move\' action in the command ("proceed forward for a duration of 2 seconds") which is not represented in the provided JSON structure.']
Perform a counterclockwise rotation of 90 degrees, followed by a 2-second forward movement.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};["2; The JSON structure partially matches the first part of the command, however, the 'angular_velocity' key does not have a value, and the second part of the command does not match with the provided JSON structures."]
Rotate anti-clockwise by 90 degrees and continue moving forward for 2 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; Although the natural language command correctly corresponds to the "rotate" action in JSON, there are missing parameters in the JSON structure ("angular_velocity" is null) and the command includes an extra action ("continue moving forward for 2 seconds") that is not represented in the given JSON sample ontology.']
Make a left turn of 90 degrees and proceed forward for 2 seconds.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; Partial match. The first part of the command ("Make a left turn of 90 degrees") is accurately represented in JSON. But the second part of the command ("proceed forward for 2 seconds") is not represented in the provided JSON information. Furthermore, the "angular_velocity" parameter value is not specified in the command, so we can\'t confirm its accuracy.']
Move forward for 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['5; The natural language command and the JSON structure match exactly. The action "move" is correctly represented in the JSON and the parameters "linear_speed", "distance", "is_forward", and "unit" are properly linked with the corresponding elements in the natural language command.']
Proceed ahead a distance of 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The natural language command \'Proceed ahead a distance of 5 meters.\' matches perfectly with the provided JSON structure. The action "move" is correctly identified. Parameters "distance": 5, "is_forward": true, and "unit": "meter" are also appropriately matched. Although the "linear_speed": 1 is not explicitly stated in the command, it\'s a reasonable value.']
Advance for a total of 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['4; The command "Advance for a total of 5 meters" matches well with the given "move" action JSON structure. All parameters from the natural language command is understandable, and the "linear_speed" parameter not specified in the command is given a reasonable value of 1 in the JSON. However, the term "Advance" is not precisely the same as "move" hence a score of 4 is given.']
Travel straight ahead covering a distance of 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Go forward a length of 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};["4; Partially conform. The natural language command and JSON structure match in terms of action type 'move' and its parameters 'distance', 'is_forward' and 'unit'. However, 'linear_speed' value in the JSON structure is not mentioned in the natural language command."]
Turn left and continue for 10 seconds.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 360, "is_clockwise": false, "unit": "degrees"}};['1; The JSON structure represents a \'rotate\' action in anticlockwise direction with certain parameters. However, the natural language command does not specify the angle nor the speed of rotation but rather commands to turn left and continue for a specified time. Although the "turn left" command matches with the "is_clockwise": false in JSON, the rotation angle and duration specified in the JSON do not match the natural command of continuing for 10 seconds, hence the low match score.']
Make a left turn and keep going for 10 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['1; The natural language command matches with some keys of the "rotate" action in JSON, however, the "angle" parameter is missing. Also, the command mentions a time duration which is not represented in the given JSON structures.']
Go left and continue for 10 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 10, "is_forward": false, "unit": "meter"}};["2; The given command instructs to move left, but the JSON indicates a move in a non-specified direction with a distance of 10 meters. The direction 'left' does not equate to the parameter 'is_forward'. Additionally, the command requests the duration of the movement in seconds, which is not represented in the JSON structure."]
Take a left turn and continue for a duration of 10 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['2; The "rotate" action in the JSON structure somewhat matches the "Take a left turn" instruction in the command. However, "continue for a duration of 10 seconds" is not included nor reflected in the given JSON. Furthermore, the JSON schema does not include a duration or time parameter. Additionally, "angular_velocity" and "angle" values are null, which does not completely conform to the instruction.']
Proceed by turning left and maintaining that direction for 10 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['3; The natural command is being translated into a rotation action, which is correct. Although, "is_clockwise": false seems to be based on an assumption and the natural command doesn\'t specify the clockwise direction. The natural command also specifies a time ("for 10 seconds") but the JSON structure does not represent this, instead, it provides angular velocity and angle keys that have been left as null. These mismatches cause the command not to be fully conformant with the JSON.']
Rotate counterclockwise by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -90, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Turn 90 degrees counterclockwise.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Rotate in the opposite direction by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": -90, "is_clockwise": false, "unit": "degrees"}};["4.5; The natural language command is translated correctly into JSON structure, it matches the keys in the sample ontology. However, the angular velocity value doesn't necessarily correlate with the given command. The command doesn't specify the velocity, so any reasonable value would be acceptable. The provided value (10) seems arbitrarily large but it is not explicitly contradicted by the command."]
Perform a counterclockwise rotation of 90 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['4; JSON structure accurately represents the natural language command of performing a counterclockwise rotation by 90 degrees. However, a default value could be provided for "angular_velocity" instead of null to be entirely conforming to the given example structure.']
Move in a counterclockwise direction, turning by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Back up 2 meters and stop.,{"action": "move", "params": {"linear_speed": 0, "distance": -2, "is_forward": false, "unit": "meter"}};['2; The action value in JSON and the command instructions partially conform. The command describes the action of moving backward, which is represented through the inversion of the "distance" and "is_forward" values in the JSON. However, the JSON structure does not account for the stopping portion of the command. Furthermore, the "linear_speed" parameter in JSON doesn\'t match with the natural language command as it doesn\'t specify any speed.']
Move back a distance of 2 meters and come to a halt.,{"action": "move", "params": {"linear_speed": 0, "distance": -2, "is_forward": false, "unit": "meter"}};['4; Structure of JSON matches command, but numerical and boolean values do not exactly conform since they are not given in the command. The direction of movement and halt is assumed.']
Reverse by 2 meters and come to a stop.,{"action": "move", "params": {"linear_speed": -2, "distance": 0, "is_forward": false, "unit": "meter"}};['3; The natural language command partially conforms to the JSON structure. The action matches as "move" and the "distance" as 2 meters is also correct. However, there\'s no provision in the JSON to indicate coming to a stop. Additionally, "linear_speed" is not equivalent to "distance", so setting "linear_speed" to -2 is incorrect. The "is_forward" key correctly matches to "false" indicating a reverse.']
Retreat 2 meters and bring yourself to a standstill.,{"action": "move", "params": {"linear_speed": 0, "distance": -2, "is_forward": false, "unit": "meter"}};["4; The JSON structure correctly represents the action 'move' and it contains all the necessary parameter keys as mentioned in the command. But there is a discrepancy in the 'is_forward' value. Though not explicitly mentioned in the command, retreating implies moving backward, hence 'is_forward' should be 'false'. Also, it's assumed speed would not be 0 to perform move, so linear_speed value does not match with the provided natural language command."]
Step backward 2 meters and cease movement.,{"action": "move", "params": {"linear_speed": 0, "distance": -2, "is_forward": false, "unit": "meter"}};['4; The JSON command generally matches with the natural language command, but it only covers a part of it. The JSON command "move" accurately reflects "Step backward 2 meters," but doesn\'t cover "cease movement."']
Move forward at a speed of 0.5 meters per second for 6 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 6, "is_forward": true, "unit": "meter"}};['3; The natural language command mostly matches the JSON structure. However, the command asks to move for a certain time (6 seconds), rather than a specific distance. The JSON structure requires a "distance" which does not directly correlate with the time given in the command.']
Proceed ahead for a duration of 6 seconds at a velocity of 0.5 meters per second.,{"action": "move", "params": {"linear_speed": 0.5, "distance": null, "is_forward": true, "duration": 6, "unit": "meter"}};["3; The action 'move' and 'linear_speed' match, but the natural language command is asking for duration, but the sample doesn't include a duration parameter and distance value is not mentioned in the command. However, 'is_forward' key matches perfectly with 'Proceed ahead'."]
Advance for 6 seconds while maintaining a speed of 0.5 meters per second.,{"action": "move", "params": {"linear_speed": 0.5, "distance": null, "is_forward": true, "duration": 6, "unit": "second"}};['2; The natural language command partially matches the JSON information. The "linear_speed" and "is_forward" keys correctly match with the command\'s mention of maintaining a speed of 0.5 meters per second and advancing (moving forward). However, the command mentions a duration of 6 seconds, but there is no corresponding key in the provided JSON structure. The distance is specified as null while it\'s not mentioned in the command.']
Travel forward for a period of 6 seconds, covering a distance of 0.5 meters in each second.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 6, "is_forward": true, "unit": "meter"}};["4; The command asks to move forward with a total distance of approximately 3 meters calculated from (0.5m/s * 6s). However, the JSON indicates moving forward a distance of 6 meters at a speed of 0.5 m/s. The 'is_forward' key and value accurately matches the command. ", "The 'unit' also conforms to the given command."]
Execute a movement in the forward direction, achieving a velocity of 0.5 meters per second for a duration of 6 seconds.,{"action": "go_to_goal", "params": {"location": "Kitchen"}};["0; The command given has the action 'move' with parameters linear_speed, distance and is_forward which is not conforming with the given JSON structure that has the action 'go_to_goal' and parameter location."]
Turn right and move forward for 1 meter.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['4; The command indicates an action of rotation "turn right", and it matches the "rotate" action in the JSON structure. Parameters "angle": 90 and "is_clockwise": false are inferred correctly from the command "turn right". The parameter "angular_velocity" however doesn\'t have a specific value defined in the command, the null value is accepted. But, there\'s no mention of the "move" command and the associated parameters in the JSON structure. hence, the score is 4.']
Make a right turn and proceed ahead for a distance of 1 meter.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['3; The natural language command is partially matched with the JSON structure. The rotate action is represented correctly in JSON along with its parameters except for the "angular_velocity". The command "proceed ahead for a distance of 1 meter" is not represented in the JSON at all.']
Take a right turn and continue moving straight for a distance of 1 meter.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['4; The JSON command accurately captures the \'right turn\' aspect of the natural language command using "rotate" and "is_clockwise": false. However, it does not include the "move" action to address the "continue moving straight for a distance of 1 meter" aspect of the natural language command. Therefore, it partially matches. The angular_velocity is not specified in the natural language command, so a null value is acceptable. The angle is set to 90, assuming a right turn means a 90-degree turn, which is also acceptable.']
Head to the right and advance forward for 1 meter.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "right"}};["1; The command requests two separate actions (rotate and move), however the provided JSON structure only reflects one action (go to_goal) which only loosely matches the command. Also, the move action with a specific distance isn't reflected in the provided JSON."]
Rotate right and proceed ahead for a length of 1 meter.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};["3; Although the natural command dictates to rotate, it doesn't mention the angle and angular_velocity, but the JSON structure specifies the direction to the right, aligning with the command. Though, the command also includes moving forward for 1 meter, however, that is not reflected in the provided JSON.", '']
Rotate clockwise by 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['4; The natural language command matches with JSON but "angular_velocity" value is not specified in natural language command, however a null value is accepted.']
Turn in a clockwise direction until you have rotated 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['4; The action command ("rotate") and parameters closely match the natural language command but the "angular_velocity" has not been specified in the language command, hence, it\'s null in the JSON structure.']
Perform a 180-degree clockwise rotation.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; The JSON command perfectly matches the natural language command. The action "rotate" properly responds to the demand of a "180-degree clockwise rotation." The parameters including angle, \'is_clockwise\', and unit also align. The angular_velocity is not specified in the natural language command, but it doesn\'t affect the overall conformity given the instructions.']
Rotate 180 degrees in the clockwise direction.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['4.5; The rotation command is perfectly matched, including the angle and direction. However, the value for "angular_velocity" is not specified in the command, yet it\'s marked as null in the JSON. According to the guidelines, any reasonable value should be accepted if it\'s not specified in the command.']
Turn to the right until you are facing the opposite direction.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 180, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform. The natural language command directs an action of rotation which aligns perfectly with the action and parameters described in the JSON structure. The specification of "to the right" and "opposite direction" adequately suggests an angle of 180 degrees and a clockwise rotation.']
Move backward for 3 seconds.,{"action": "move", "params": {"linear_speed": -1, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The natural language command talks about moving backward for 3 seconds, but in JSON structure, it tells to move with a negative linear speed and distance parameter is zero with unit mentioned as meters, which does not match with natural language command.']
Go in reverse for a duration of 3 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "duration": 3, "unit": "second"}};['2; Although the action of moving is referenced in the command and JSON, the specific parameters called in the command and the JSON structure do not match up in terms of keys mentioned in the command and in the JSON structure. The JSON structure does not contain a key for "duration", and the command does not specify a "linear_speed", "distance", or "unit", while these keys are present in the JSON structure. Moreover, "is_forward": false indirectly matches with the move in reverse direction in the command but the actual "is_forward" keyword is not mentioned in the command.']
Reverse your movement for a total of 3 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "duration": 3, "unit": "second"}};["1; The JSON command partially matches the natural language command. However, the parameters 'linear_speed' and 'distance' are contained in the JSON command but not mentioned in the natural language command. Additionally, the 'duration' parameter is used in JSON, which is not mentioned in the ontology. Also, 'is_forward' value in JSON is false which is correct as command is to reverse but it doesn't mention moving in reverse, it's more of a time duration."]
Backtrack for a period of 3 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The natural language command asks for a \'backtrack\' action, which is not covered in any of the JSON structures, however, they attempt to convert it into the "move" command, which is one of the known actions from the sample ontology. But parameters are not well matched. The "linear_speed" and "distance" are set to 0, which doesn\'t imply any movement. Moreover, the unit and the duration (here implied as \'period of 3 seconds\') are missing in the JSON structure.']
Take a 3-second step backwards.,{"action": "move", "params": {"linear_speed": -1, "distance": 3, "is_forward": false, "unit": "second"}};['1; Partial matching is observed in the JSON provided where the action “move” correlates with the command indicating motion. However, the rest of the parameters and values don\'t match between the two. The command speaks of a 3-second step backwards, but there\'s no relation to the JSON\'s parameters, such as linear_speed, distance, is_forward (should have been false, but both are different in format,true/false and forward/backward) and unit (should have been "seconds" but here it\'s "meter"). So, the overall conformity is poor.']
Turn left and continue for 7 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 7, "is_forward": false, "unit": "meter"}};['1; The JSON partially conforms with the command. The command asks for a left turn before moving forward, which should involve the "rotate" action from the provided ontology. However, this isn\'t present in the JSON. The "move" action is represented correctly with respect to distance and unit. The "is_forward" parameter should have been true (because the command involves moving forward after a left turn) rather than false.']
Take a left turn and proceed straight ahead for a distance of 7 meters.,{"action": "rotate", "params": {"angular_velocity": undef, "angle": undef, "is_clockwise": false, "unit": "degrees"}};['2; The JSON structure\'s action key matches with the command as both denote movement. However, most of the parameters are missing or incorrectly listed. "angular_velocity" and "angle" are undefined in the JSON structure, although in principle, taking a left turn translates to certain angular movement. Also, command indicates a certain distance to be traversed, for which JSON lacks information.']
Make a left turn and keep going for 7 meters.,{"action": "rotate", "params": {"angular_velocity": undef, "angle": undef, "is_clockwise": false, "unit": "degrees"}};['1; The JSON structure provided partially refers to the command, but only covers the \'make a left turn\' part. The \'keep going for 7 meters\' part of the command is missing in the JSON structure. Also, the values for "angular_velocity" and "angle" are undefined, which does not match with the command.']
Go left and carry on for a distance of 7 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 7, "is_forward": false, "unit": "meter"}};["2.5; The direction 'left' is not captured in the JSON representation, though the distance of 7 meters is correctly represented. The command 'is_forward' in JSON does not correspond to 'go left' in the command. The 'action' field has been represented correctly."]
Head to the left and continue for a length of 7 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 7, "is_forward": false, "unit": "meter"}};["2; The provided JSON structure partially matches the natural language command. The command initiates a movement, 'move' action is correct. The 'distance' value of 7 is correct in the JSON structure. However, the direction in the command (head to the left) does not have a matching key in the JSON structure. Also, 'is_forward' field in the JSON is false, which is not mentioned in the command. Hence, the match is partial not exact."]
Move forward at a speed of 1 meter per second for 4 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}};['4; The command almost perfectly aligns with the JSON structure. The action "move" matches and all the parameters are present in the command. However, the "distance" parameter is expected to be in meters but in the command, it\'s considered as "time" that\'s why a perfect score isn\'t given.']
Proceed ahead for a duration of 4 seconds with a velocity of 1 meter per second.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}};["4; The natural language command asked for a specific duration of movement, however, the JSON contains a distance for the action. Given that distance is speed times time, it seems reasonable to assume that the command wanted the robot to move a specific distance (in this case, 4 meters at 1 meter per second). As such, the JSON appropriately matches the nature of the command. However, due to the lack of explicit mention of distance in the command, and instead mentioning time, there's a minor mismatch between the command and the JSON structure."]
Advance for 4 seconds, maintaining a speed of 1 meter per second.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}};['4; The JSON structure mostly matches the command with the correct action and most parameters, but the "distance" parameter in the JSON structure should represent the actual distance rather than the time duration for the movement.']
Travel forward for 4 seconds, moving at a rate of 1 meter per second.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}};['4; While the natural language command does specify a forward movement, it mentions the distance as time duration which does not conform perfectly with the JSON structure where the distance is not given in terms of time but length. However, all other parameters & action types match nicely and are clear.']
For a period of 4 seconds, move ahead at a speed of 1 meter per second.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The natural language command perfectly matches the JSON structure, with the action being "move", specifying the direction as "is_forward": true, the "linear_speed" as 1, and the distance as 4.']
Rotate counterclockwise by 45 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Change the orientation by 45 degrees in a counterclockwise direction.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -45, "is_clockwise": false, "unit": "degrees"}};['4; The command matches with the "rotate" action, angular velocity is not specified in the natural language command, so any reasonable value given is accepted. The value of "angle" in JSON is in line with the command. However, the value of "is_clockwise" should be \'false\' as the command specifies a \'counterclockwise\' direction, the JSON given has it as \'false\' which is correct but in the command \'counterclockwise\' is not mentioned as negative, which usually denotes counterclockwise rotation.']
Turn left by 45 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 45, "is_clockwise": false, "unit": "degrees"}};["4; The action in the JSON structure is correct and the parameters 'angle', 'is_clockwise', and 'unit' also perfectly match the command. However, the command does not provide value for 'angular_velocity' and it's set as null in JSON, though this is reasonable but not specific, hence a score of 4."]
Rotate anticlockwise by an angle of 45 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 45, "is_clockwise": false, "unit": "degrees"}};["5; Exactly conform. The natural language command exactly matches the JSON command for rotation with the correct parameters, including the direction of rotation (anticlockwise), the angle of rotation (45 degrees), and the unit of the angle (degrees). Although 'angular_velocity' is not specified in the natural language command, any reasonable value in the JSON is accepted."]
Adjust the position by rotating in the counterclockwise direction with an angle of 45 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform. The natural language command specifies an action of rotation in the counterclockwise direction at an angle of 45 degrees. This is accurately captured in the JSON with the "action" as "rotate", "angle" as 45, "is_clockwise" as false (indicating counterclockwise rotation), all of which are existing keys in the ontology. Though the "angular_velocity" is not specified in the natural language command, a reasonable value of 1 is given in the JSON.']
Go straight for 8 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "meter"}};["4; It mostly conforms to the command, however, the 'linear speed' value is assumed to be 1 in the JSON structure as it's not specified in the command."]
Proceed in a straight line for a distance of 8 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "meter"}};['5; The command exactly matches with the JSON structure. The action "move" is specified, and all the necessary parameters ("linear_speed", "distance", "is_forward" and "unit") are included and correctly filled in. Therefore, it perfectly complies with the keys in the sample ontology.']
Continue in a straight direction for a span of 8 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 8, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The natural language command perfectly matches the JSON structure as it correctly specifies all the parameters required for the move action.']
Maintain a straight path for a duration of 8 meters.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};["1; The natural language command gives an action of maintaining a straight path for a particular distance which does not directly match any of the JSON actions but is more associated with the second JSON command 'move'. Moreover, the command does not specify any parameters or a location such as the 'Kitchen' as shown in the JSON structure."]
Stay on course for a distance of 8 meters ahead.,{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The natural language command "Stay on course for a distance of 8 meters ahead" is perfectly represented in the JSON structure, where action is "move", linear_speed of 1 (reasonable unspecified value), specified distance of 8, is_forward is true (interpreted from "ahead"), and unit is "meter".']
Turn right and move forward for 2 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};["1; The JSON structure loosely matches the command, as there's rotation to the 'right', which could be represented by 'is_clockwise': true if we consider right as clockwise. However, 'move forward for 2 seconds' doesn't match with any actions or parameters. The parameters 'angular_velocity' and 'angle' are also not specified in the command."]
Proceed straight for 2 seconds after making a right turn.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "second"}};['3; Partially conform. The action \'move\' and parameters \'linear_speed\' and \'is_forward\' match the natural language command. However, the natural language command mentions "2 seconds" which is a duration, not a \'distance\'. Also, the command mentions a \'right turn\' which aligns with the action \'rotate\', but this action content is missing in the provided JSON.']
Take a right turn and continue moving ahead for a duration of 2 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": null}, "duration": 2}{"action": "move", "params": {"linear_speed": null, "distance": null, "is_forward": true, "unit": null}, "duration": 2};['1; The JSON does not conform to the command because of multiple deviations. For instance, the command mentions "Take a right turn" which implies that rotation should be clockwise, but \'is_clockwise\' is set as false. Secondly, the duration is mentioned within the command and should not be present in JSON params of each action.']
Make a right turn and advance forward for 2 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};['2; Some parameters like "is_clockwise" in the JSON structure match with the command "Make a right turn." However, the command to "advance forward for 2 seconds" is not represented in the JSON structure, and the "angular_velocity" and "angle" parameters are unspecified, leading to a partial match.']
After turning right, keep moving forward for a period of 2 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};["2; The JSON structure only partially matches the command. The 'rotate' action matches 'turning right' in the command, but the 'is_clockwise' parameter does not specify an angle, so we don't know how much to turn. The 'keep moving forward for a period of 2 seconds' part of the command is not represented in the JSON structure at all."]
Move backward for 4 meters and stop.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living Room"}};["0; The provided JSON structure does not match the natural language command in any respect. The command refers to moving backward for a certain distance, which is not reflected in the JSON structure where the action is 'go_to_goal' and location is set as 'Living Room'. There is also no mention of stopping in the JSON, which forms part of the command requirement."]
Reverse for a distance of 4 meters and come to a halt.,{"action": "move", "params": {"linear_speed": 0, "distance": 4, "is_forward": false, "unit": "meter"}};["4; The JSON structure reflects the intent of the command - to move a certain distance in reverse, the parameters: linear_speed, distance, is_forward, and unit fit the requirements of the command. However, it does not fully capture the 'come to a halt' part of the command, but it assumes the robot will stop after it has moved the specified distance."]
Go back for 4 meters and then come to a stop.,{"action": "move", "params": {"linear_speed": null, "distance": -4, "is_forward": false, "unit": "meter"}};['4; The natural language command matches the JSON information but lacks specification of linear_speed which is acceptable but brings the conformity score down to 4 instead of a perfect score. The direction is implicitly mentioned in "Go back" which is correctly reflected in "is_forward": false in the JSON structure. However, the command to "come to a stop" doesn\'t have a corresponding JSON in the provided structures.']
Take 4 meters in reverse and cease movement.,{"action": "move", "params": {"linear_speed": 0, "distance": -4, "is_forward": false, "unit": "meter"}};["1; The natural language command instructs a backward movement for a certain distance and then to stop. Looking at the JSON structure given, correct keys are used to represent movement (such as 'action': 'move', 'is_forward', 'distance', 'unit'). But 'linear_speed' is implemented but not mentioned in the command."]
Travel in the opposite direction for a distance of 4 meters and then pause.,{"action": "move", "params": {"linear_speed": 0, "distance": 4, "is_forward": false, "unit": "meter"}};['3; While the JSON correctly identifies the action "move" and the parameter "distance", it inaccurately sets "linear_speed" to 0, which contradicts with the directive "Travel in the opposite direction". The parameter "is_forward" is correctly set to false as per the "opposite direction" command. However, "pause" action isn\'t represented in the JSON structure.']
Rotate clockwise by 270 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform. The natural language command perfectly corresponds to the provided JSON structure in the "rotate" action, even though the "angular_velocity" is null.']
Turn to the right by 270 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": false, "unit": "degrees"}};['4; The JSON structure almost perfectly matches the command, the only discrepancy is "is_clockwise" parameter. It is stated to be "false" in the JSON whereas the command specifies a clockwise turn.']
Move in a clockwise direction, rotating 270 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['5; The natural language command matches perfectly with the given JSON information. The action specified is "rotate", which is correctly reflected in the JSON structure. Additionally, the parameter values in the command ("clockwise" direction and 270 degrees) are also accurately represented in the JSON structure. The "angular_velocity" is not specified in the command, but as per the instructions, any reasonable value is accepted. Therefore, the conformity score is 5.']
Spin in a clockwise manner, completing a 270 degree rotation.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['4.5; The natural language command and the JSON structure match for the most part correctly, with action as "rotate", angle as 270, is_clockwise as true, and unit as degrees. The angular_velocity is not specified in the natural command, which is excellent under the provided guidelines as any reasonable value in the JSON structure is accepted when the value is not specified in the command. However, a score of 5 cannot be granted as the "null" value for the angular_velocity is not a "reasonable" placeholder.']
Rotate by 270 degrees in a clockwise fashion.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['5; The JSON structure correctly captures the action ("rotate"), angle (270), direction (clockwise) and units (degrees). Although the natural language command does not specify the angular velocity, a null value is accepted as per the instructions.']
Turn left and continue for 3 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": false, "unit": "meter"}};['3; The natural language command talks about a movement and turning, hence it aligns partially with the "move" action but "rotate" action is missing. The distance matches but the "is_forward" is incorrectly set to false where it should be true after a left turn. The command does not mention about the direction of movement (forward or backward), but movement after a turn usually implies moving forward. Linear_speed, though not mentioned in the command, is a reasonable value. The left turn isn\'t addressed in the JSON.']
Make a left turn and keep going for a distance of 3 meters.,{"action": "rotate", "params": {"angular_velocity": ?, "angle": ?, "is_clockwise": false, "unit": "degrees"}};['2; Partial conformity. The natural language command instructs a left turn which is conveyed by the "action" of rotate and "is_clockwise" as false in the JSON structure. However, the command also asks for moving a specific distance which is not part of the provided JSON structure.']
Proceed straight for 3 meters after making a left turn.,{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}};['1; The natural language command also includes an action of rotation which is not represented in the JSON. The action "move" matches with the JSON structure but the rest of the command ("making a left turn") is not represented.']
After turning left, travel straight for 3 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['2; The natural language command is not entirely represented in the JSON format provided. Only the "turning left" part of the command is depicted, indicating a counter-clockwise rotation (assuming standard directional orientations). However, the rotation\'s velocity and angle are not provided in the command, thus they remain null in the JSON. Additionally, the command\'s second part - "travel straight for 3 meters" has not been converted to JSON at all.']
Take a left and continue on for a distance of 3 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": false, "unit": "meter"}};["1; The natural language command 'Take a left and continue on for a distance of 3 meters' is not directly compatible with the JSON structure. The provided JSON structure represents forward movement, whereas the command includes a direction (left). However, the distance aspect is correctly represented in the JSON."]
Move forward at a speed of 0.3 meters per second for 5 seconds.,{"action": "move", "params": {"linear_speed": 0.3, "distance": 1.5, "is_forward": true, "unit": "meter"}};['3; Partially conform. The JSON structure correctly represents the action to move and the direction to go forward with a specific speed, but the calculation of distance is incorrect. The command did not specify a distance but a duration of 5 seconds, which is not represented in the JSON.']
Proceed ahead for a duration of 5 seconds at a velocity of 0.3 meters per second.,{"action": "move", "params": {"linear_speed": 0.3, "distance": null, "is_forward": true, "duration": 5, "unit": "meter"}};['2; While the natural language command includes instructions to move at a certain speed, the corresponding JSON structure does contain the correct action ("move") and "linear_speed" param sub-key. However, the command introduces the parameter "duration" which doesn\'t exist in the ontology\'s sample keys, and lacks the "distance" and "is_forward" parameters. Besides, the use of "duration" is not entirely correct as the JSON expects the input of a distance, not time.']
Advance at a rate of 0.3 meters per second for a period of 5 seconds.,{"action": "move", "params": {"linear_speed": 0.3, "distance": 1.5, "is_forward": true, "unit": "meter"}};['4; The values in natural language commands and in the JSON structure are matching. However, there is a slight inconsistency how distance is computed in the command and in the JSON structure. In the command, it implicitly mentions a distance value of 1.5 meters (computed by multiplying speed and time) but in the JSON structure, the same value is represented explicitly, introducing slightly small ambiguity.']
Travel forward at a speed of 0.3 meters per second, maintaining it for 5 seconds.,{"action": "move", "params": {"linear_speed": 0.3, "distance": 1.5, "is_forward": true, "unit": "meter"}};["4; The command somewhat matches the JSON, as it refers to moving forward at a certain speed which is implied in the JSON structure. However, the duration of this action is defined in the command but not reflected in the JSON. Instead of duration, the JSON structure uses 'distance' as a measure."]
Go straight ahead for 5 seconds while maintaining a velocity of 0.3 meters per second.,{"action": "move", "params": {"linear_speed": 0.3, "distance": null, "is_forward": true, "duration": 5, "unit": "meter"}};["2; The natural language command partially matches with the JSON structure. The 'go straight ahead' corresponds with the 'is_forward' key in the motion JSON. The 'velocity' should be 'linear_speed' in the JSON, that matches. However, the command mentions a specific duration which is not accounted for in the provided JSON structure, and the command does not specify a distance which is required in the JSON structure. Thus, it is incompletely conforming the provided ontology."]
Rotate counterclockwise by 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};["5; Exactly conform. The command corresponds directly with the JSON structure, including the correct action verb, the 'rotate' parameters have been conformed with the keys followed by the correct values. The conversion has been done efficiently as per the given sample ontology."]
Turn 60 degrees counterclockwise.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};["5; Exactly conform. The natural language command specifies an action 'Turn' which matches to 'rotate' action in JSON. Parameter '60 degrees' maps correctly to 'angle' and 'unit' in JSON. It additionally specifies direction as 'counterclockwise' which conforms to 'is_clockwise': false in JSON. Angular velocity wasn't specified in the command thus null is correctly used in JSON."]
Rotate in the opposite direction by 60 degrees.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": -60, "is_clockwise": false, "unit": "degrees"}};['4; The natural language command matches with the JSON in terms of the action ("rotate") and units ("degrees"). However, the "angular_velocity" is specified in JSON but not in the command. Also, it is hard to determine if "opposite direction" means "is_clockwise" should be false, but it seems a reasonable interpretation.']
Rotate to the left by 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['4; The rotation action and parameters match quite well. However, the "angular_velocity" parameter is not provided in the natural language command so it is null in the JSON, decreasing the conformity score slightly.']
Make a counterclockwise rotation of 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Go straight for 6 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "second"}};['2; Although the desired action in the natural language command is accurately depicted in the JSON structure, the parameters in the command and the JSON do not match. First, the command specifies a duration, not a distance, whereas the "distance" parameter in the JSON indicates a distance measurement. Additionally, the given JSON structure has a "unit" of "second" when the provided ontology does not specify "second" as an acceptable unit for the "move" action.']
Proceed in a straight line for a duration of 6 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 6, "is_forward": true, "unit": "second"}};['4; The command "Proceed in a straight line for a duration of 6 seconds." matches the JSON structure in the action "move" with parameters of linear speed and forward direction, but it\'s slightly inconsistent with the structure. The command refers to a time duration (6 seconds), while the JSON structure indicates a distance parameter. However, given the absence of a time parameter in the JSON, it\'s interpreted that the distance units could be in time, making it reasonably conform.']
Keep moving forward in a straight path for 6 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 6, "is_forward": true, "unit": "second"}};['2; The action "move" and the parameters "linear_speed" and "is_forward" match, but "distance" is incorrectly interpreted as time (seconds), it should be a measure of length (meters) according to the ontology. The \'unit\' value does not match the \'unit\' key in the JSON structure since time is used instead of distance. Hence, the conformity is partial.']
Maintain a straight course for 6 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": true, "unit": "meter"}};['1; The command talks about maintaining a course for specific time ("6 seconds") but does not provide sufficient detail such as speed or direction (forward or reverse), also the time unit is not represented in the JSON. The JSON structure does not use a "time" attribute in the move action but instead, it consists linear_speed and distance. Therefore, the instruction in natural language and the JSON structure partially match.']
Continue in a straight direction for a period of 6 seconds.,{"action": "rotate", "params": {"angular_velocity": 180, "angle": 360, "is_clockwise": false, "unit": "degrees"}};['1; The command is asking to continue in a straight direction, which suggests some form of movement action. However, the provided JSON structure represents a rotation action, which does not align with the given command. The parameters in the JSON structure also do not match any information provided in the natural language command. Hence, there is only a slight match between the command and the JSON information.']
Turn right and move forward for 7 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['3; The JSON partially matches the command. The "rotate" action with "is_clockwise": false is implicit in the "Turn right" of the command. But there is no corresponding "move" action in the given JSON as it fails to capture "move forward for 7 meters" in the command.']
Take a right turn and proceed straight ahead for a distance of 7 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};ERROR: Request timed out: HTTPSConnectionPool(host='api.openai.com', port=443): Read timed out. (read timeout=600)

Make a right-hand turn and continue moving forward for a length of 7 meters.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['3; The given JSON structure partly corresponds to the natural language command. The command "Make a right-hand turn" is correctly reflected in the JSON command"rotate" and "is_clockwise": false matches it. However, The "angle" and "angular_velocity" values in the JSON don\'t match to the natural language command because the command does not specify these parameters, but the values provided are reasonable. The second part of the command "continue moving forward for a length of 7 meters" is not reflected in the JSON.']
Head to the right side and advance for a distance of 7 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}};['3; The JSON structure does correctly execute an action of moving a specific distance, which matches part of the command. However, the command specifies the direction as "to the right side", which is not reflected in the JSON structure.']
Rotate to the right and travel straight for 7 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};["2; The JSON contains the 'rotate' action but the 'angle' and 'angular_velocity' are not specifically provided in the command, also 'unit' being 'degrees' is not mentioned. Moreover, the portion of the command asking to travel straight for 7 meters isn't represented in the JSON at all."]
Move 2 meters forward.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The natural language command "Move 2 meters forward" directly matches with the JSON structure. All keys from the command language (linear_speed, distance, is_forward, unit) are present and with correct value assignment.']
Proceed straight ahead by a distance of 2 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}};['4; The natural language command matches perfectly with the JSON command, except for the "linear_speed" parameter not being specified in the command, so the JSON structure\'s value is accepted.']
Advance 2 meters in the forward direction.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The natural language command matches the JSON structure accurately. The command is asking for a forward movement, matching "is_forward": true in the JSON structure. A distance of 2 is correctly indicated by "distance": 2, and "unit": "meter" conforms with "2 meters". The unspecified linear speed is reasonably filled with 1 in the JSON, which makes sense in the command context.']
Take a step forward for a distance of 2 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Move straight ahead, covering a distance of 2 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}};['5; The command matches exactly with the provided JSON structure. All the parameters: action (move), distance (2), is_forward (true), and unit (meter) are specified in the command. The linear speed is not specified in the command but since any reasonable value is accepted, the score is 5.']
Turn left and move forward for 5 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};["3; The command partially converts into JSON. The 'rotate' action is correct and the 'is_clockwise' parameter with a 'false' value suggests a left turn. However, 'angular_velocity' and 'angle' parameters are null, they should be assigned reasonable values. The 'move' part of the command is not covered in the JSON structure."]
Move forward for 5 seconds after turning left.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "second"}};["1; The JSON structure depicts an action of moving forward for a certain distance at a certain linear speed, not moving for a certain number of seconds. Also, there's no mention of turning left in the JSON structure."]
After making a left turn, proceed forward for 5 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['1; There are two commands suggested in the natural language command - a rotation ("making a left turn") and a movement ("proceed forward for 5 seconds"). However, the JSON only accounts for the rotation and leaves out the "move" command entirely. Additionally, it doesn\'t specify the angle or angular_velocity for the rotation, which are critical for execution. Hence, the JSON does not effectively represent the original command.', '']
Take a left turn and continue moving forward for 5 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['0; The JSON structure does not match with the command. Natural language command tells to rotate and move forward, but the JSON structure only involves rotation. Also, the parameters in the JSON structure are not accurately represented in the natural language command. For example, "angle" and "angular_velocity" are null in the JSON, but it\'s not indicated in the command whether the rotation is in degrees or any other units.']
Start moving forward for 5 seconds after making a left turn.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};["2; The natural language command includes rotation, which aligns with the JSON script. But the command also includes moving forward, which isn't represented in the JSON. The 'go_to_goal' action might've been suitable, but there's no 'Kitchen' location mentioned in the command."]
Rotate counterclockwise by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -90, "is_clockwise": false, "unit": "degrees"}};['4; Almost conform. The \'angular_velocity\' parameter in the JSON structure is 1, which is a reasonable value but was not explicitly specified in the natural language command. The \'angle\' parameter value was specified and converted correctly, as well as the direction of rotation. The \'unit\' parameter was assumed to be "degrees" in the JSON structure since the command did not specify the unit, which is also correct.']
Rotate 90 degrees counterclockwise.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Perform a counterclockwise rotation of 90 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['4; The command roughly matches the JSON command structure but angular_velocity is given null value in JSON whereas it is not specified in natural language command.']
Rotate by 90 degrees in the counterclockwise direction.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -90, "is_clockwise": false, "unit": "degrees"}};['4; The command correctly matches the "action" and "params" keys. The "rotate" action, "angle", "is_clockwise", and "unit" keys match perfectly with the command. The "angular_velocity" key is not mentioned in the command, thus any reasonable value in the JSON, like 1 in this case, is accepted. The value for "is_clockwise" is inferred as false, although the command says "counterclockwise". The "angle" value is acceptable but doesn\'t exactly match the command\'s "90 degrees" because it is given as -90, meaning a clockwise rotation in programming, though the sentence refers to a counterclockwise motion.']
Turn left by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform. The natural language command perfectly matches with the JSON structure in which the action is to rotate, the angle is specified as 90 with the unit in degrees, and the direction is counter-clockwise signified by "is_clockwise": false.']
Move 3 meters backward.,{"action": "move", "params": {"linear_speed": -3, "distance": 3, "is_forward": false, "unit": "meter"}};['3; The action in the command and the JSON structure match. However, the command calls for backwards motion while the "is_forward" key in the JSON structure is false, which doesn\'t match. Also, the "linear_speed" key in the JSON structure is set to -3, which is different from the unspecified value in the command. However, the negative speed is presumably used to represent backwards motion, which aligns with the command. Furthermore, the "distance" key correctly matches the command.']
Go back 3 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": -3, "is_forward": false, "unit": "meter"}};['4; The natural language command is almost entirely conform to the JSON structure. However, the linear speed is not specified in the command and thus a score of 5 cannot be given. The is_forward parameter being set to false accurately reflects the command to "go back" instead of forward. The distance is correctly set to 3 to reflect "3 meters". The action is correctly set to "move". The unit being "meter" is correct. But, due to the undefined speed, a point is deducted.']
Retreat 3 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": -3, "is_forward": false, "unit": "meter"}};['2; Partially conform. The action "move" and the "unit" and "distance" parameters match with the natural language command. However, the "linear_speed" has a incorrect value stated in the JSON format (it should not be zero for the robot to move) and "is_forward" is false instead of true as implied by "retreat" in the command.']
Step 3 meters in reverse.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": false, "unit": "meter"}};['5; Exactly conform.']
Travel in the opposite direction for 3 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": false, "unit": "meter"}};['4; The JSON matches the natural language command fairly well in terms of conveying the action of moving a certain distance in the reverse direction. However, the linear speed is not mentioned in the command but is specified in the JSON, causing a minor discrepancy. However, JSON structure is correct and the unspecified value is reasonable.']
Turn right and move forward for 1 meter.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['1; The JSON structure has the correct action of "rotate", however, the direction of turning is incorrect. The command specifies to "Turn right", which would require the "is_clockwise" parameter to be true. The distance for the move portion of the command is not represented in the JSON.']
Take a right turn and proceed straight ahead for a distance of 1 meter.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['4; The natural language command partially matches with the JSON command. The robot is instructed to turn and this matches with the "rotate" action in the JSON. However, the difference lies in the direction of the turn - the natural language command mentions a \'right turn\' which suggests a clockwise rotation, but the JSON structure indicates the rotation as counter-clockwise. The JSON structure doesn\'t include the command of moving straight ahead for a certain distance. The angle of rotation matches perfectly. The angular velocity is not specified in natural language command, hence null is acceptable.']
Make a right turn and advance ahead for a distance of 1 meter.,{"action": "rotate", "params": {"angular_velocity": undef, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; The natural language command partially matches the JSON structure. The \'action\' and \'unit\' keys fit, and the \'angle\' key of \'90\' degrees also matches the right turn command. However, the \'angular_velocity\' key is undefined in the JSON whereas it should have a value, and \'is_clockwise\' is set to \'false\', which contradicts to \'right turn\' in the natural language command, it should be \'true\'. The second part of the command ("advance ahead for a distance of 1 meter") is not represented in the JSON structure at all.']
Head to the right and continue moving forward for 1 meter.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['0; The natural language command asks for a specific movement, however, the provided JSON structure describes an action of going towards a specific location (Kitchen) which does not match the command.']
Rotate to the right and proceed in a forward motion covering a distance of 1 meter.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};['2; Part of the natural language command matches with the JSON structure namely the "rotate" action and "is_clockwise": true. The JSON structure for the "move" action is missing. Further information like "angular_velocity" and "angle" are not specified in the natural language command.']
Go to the living room and stop.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 30, "is_clockwise": false, "unit": "degrees"}};['0; The JSON structure does not conform to the natural language command. The command is to "Go to the living room", but the JSON structure specifies a rotation action. Also the "go_to_goal" action with a "location" parameter is missing in the JSON structure.']
Please proceed to the living room and come to a halt.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living Room"}};['4; Although the natural language command and the JSON structure contains the same action "go_to_goal", the parameters slightly differ. The command refers to the \'Living Room\' whereas the JSON structure indicates \'Kitchen\'. It\'s a close match but not exactly the same. Also, the command to halt is not represented in the JSON.']
Make your way to the living room and cease moving.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['1; The action "go_to_goal" is used correctly in the JSON but the location parameter value in the natural language command and the JSON information do not match. The command mentions "living room" while the JSON data refers to "Kitchen".']
Head to the living room and stand still.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living Room"}};['5; Exactly conform. The natural language command instructs to move to a certain location, which is encapsulated correctly in the JSON structure. The location ("Living Room") in the command corresponds with the "value" field in the JSON. The action "go_to_goal" is also correctly represented in the JSON structure.']
Move towards the living room and come to a stop.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}};["0; The natural language command instructs the system to move to a specific location, which should correspond to a 'go_to_goal' action in the JSON ontology. However, the provided JSON structure corresponds to a 'move' action and does not provide the correct parameters to fulfill the command."]
Move 4 meters forward at a speed of 2 meters per second.,{"action": "move", "params": {"linear_speed": 2, "distance": 4, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Proceed ahead by a distance of 4 meters while maintaining a velocity of 2 meters per second.,{"action": "move", "params": {"linear_speed": 2, "distance": 4, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Travel in the forward direction for 4 meters with a constant speed of 2 meters per second.,{"action": "move", "params": {"linear_speed": 2, "distance": 4, "is_forward": true, "unit": "meter"}};['4; The natural language command matches the JSON data, however, the value of "linear_speed" parameter in the JSON command is 0.5, whereas the natural language command specifies a speed of 2 meters per second.']
Advance 4 meters in the forward direction while maintaining a velocity of 2 meters per second.,{"action": "move", "params": {"linear_speed": 2, "distance": 4, "is_forward": true, "unit": "meter"}};['Score: 5; Justification: The natural language command exactly describes the action "move" with specified parameters such as "linear_speed", "distance", "is_forward" and "unit" in the JSON structure.']
Propel oneself forward at a rate of 2 meters per second, covering a distance of 4 meters.,{"action": "move", "params": {"linear_speed": 2, "distance": 4, "is_forward": true, "unit": "meter"}};["4; Almost conforming. The JSON correctly represents the action and parameters from the natural language command. However, the 'linear_speed' value in the JSON structure is 2, while in the natural language command the robot is instructed to move at a rate of 2 meters per 'second', but the given unit in the JSON structure is 'meter', not 'second'."]
Rotate clockwise by 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform.']
Turn 180 degrees in a clockwise direction.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; The command "turn 180 degrees in a clockwise direction" perfectly matches the JSON structure for the action "rotate", with the parameters: "angle" set to 180, "is_clockwise" set to true, and "unit" set to "degrees". The "angular_velocity" isn\'t specified in the command, but its presence in the JSON doesn\'t compromise conformity since it accepts null or any reasonable value.']
Perform a 180-degree clockwise rotation.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform. The JSON structue matches with the natural language command stating a clockwise rotation of 180 degrees. Although angular_velocity is not specified in the command, it is accepted as per guidelines provided.']
Rotate by 180 degrees in the clockwise direction.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};["5; The JSON structure exactly conforms to the natural language command. The action 'rotate' is correctly identified. Parameters such as 'angle', 'is_clockwise' and 'unit' are also correctly identified with appropriate values. 'Angular_velocity' is not mentioned in the command but its null value in JSON is acceptable as per the instruction."]
Turn in a clockwise fashion, rotating 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['4; Almost conform. The given JSON structure correctly represents the command \'Turn in a clockwise fashion, rotating 180 degrees.\' However, in the JSON structure "angular_velocity" is null, while it should have a reasonable value.']
Turn left and move forward for 3 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}};['2; The JSON structure partially matches the command, with parameters such as "move", "distance", "is_forward". However, "linear_speed" is not specified in the command and the "rotate" command is completely missing in the JSON structure.']
Make a left turn and proceed straight ahead for a distance of 3 meters.,{"action": "rotate", "params": {"angular_velocity": ?, "angle": ?, "is_clockwise": false, "unit": "degrees"}};['2; The natural language command is partly matched to the JSON command since it includes a rotation (Make a left turn) which is conveyed in JSON as "is_clockwise": false in the action "rotate". However, proceeding straight for 3 meters isn\'t represented in the JSON command, hence, it doesn\'t fully match the natural language command. The parameters "angular_velocity" and "angle" are also not specified in the natural language command.']
Take a left and continue moving forward, covering a span of 3 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": true, "unit": "meter"}};['4; Mostly conform. The JSON structure corresponds to command "continue moving forward, covering a span of 3 meters", but it doesn\'t cover the "Take a left" part of the command, which would require rotation object in JSON.']
Rotate to the left and advance for 3 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['3; Natural language command specifies two actions which are \'rotate\' and \'move\'. However, JSON provided only refers to action \'rotate\' with given parameters. But there is no \'move\' action details are given in JSON, and the values for "angular_velocity" and "angle" are missing in the JSON structure. Therefore, it is a partial match, but it does match the general structure and keys used in the ontology sample.']
Shift towards the left and travel straight for a distance of 3 meters.,{"action": "move", "params": {"linear_speed": , "distance": 3, "is_forward": true, "unit": "meter"}};['2; The natural language command partially aligns with the JSON command. The action of moving is mentioned and the unit and distance parameters are correctly identified. However, the linear speed parameter is not specified in the natural language command, but it appears in the JSON command without a value. Additionally, there is a "shift towards the left" action in the natural language command that does not conform with the provided JSON commands.']
Move 2 meters backward at a speed of 0.5 meters per second.,{"action": "move", "params": {"linear_speed": -0.5, "distance": 2, "is_forward": false, "unit": "meter"}};['3; Partial match. The action in the command correctly corresponds to the "move" action in the JSON structure. However, the direction of movement is "backward" in the command and "is_forward" is true in the JSON, which doesn\'t align. The "linear_speed" and "unit" parameters match, but "distance" is not directly specified in the JSON, making it a partial match.']
Back up 2 meters with a velocity of 0.5 meters per second.,{"action": "move", "params": {"linear_speed": 0.5, "distance": -2, "is_forward": false, "unit": "meter"}};['4; The natural language command and the JSON structure have high conformity. The natural language command informs the action of "move", the linear speed of 0.5, and the distance of 2 meters which perfectly match with the JSON structure. However, the direction of movement indicated by "back up" is not considered in the JSON. The JSON structure interprets "back up" as "is_forward": false, which is reasonable but not exactly specified in the command. As such, a score of 4 is suitable.']
Go in reverse for a distance of 2 meters at a rate of 0.5 meters per second.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['0; The natural language command instructs the bot to move in reverse for a specific distance and speed. This loosely maps to the "move" structure with proper tuning of parameters, but given the provided JSON information, it does not match with going to the "Kitchen", which is specified in the provided JSON structure. Therefore, the score is 0.']
Retreat at a speed of 0.5 meters per second for a duration that covers a distance of 2 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": false, "unit": "meter"}};['5; The natural language command requests a specific action (moving backwards), with a specified speed (0.5 m/s) and distance (2 meters). All these details are accurately reflected in the JSON structure, matching the keys of the sample ontology, which makes the command and the JSON exactly conform to each other.']
Travel backwards at 0.5 meters per second, covering a distance of 2 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": false, "unit": "meter"}};['4; The natural language command instructs for a backward movement, which correctly matches with the "move" action in JSON structure, as well as the "linear_speed", "distance" and "unit" parameters. However, the parameter "is_forward" is specifically mentioned as false, which conforms to the command but not listed in the JSON command provided initially.']
Go to the bedroom and stop.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 45, "is_clockwise": false, "unit": "degrees"}};["0; The JSON structure does not match the natural language command. The command is asking to 'go to the bedroom and stop' but the JSON structure is about rotating with certain parameters."]
Please proceed to the bedroom and come to a halt.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}};['3; The action "go_to_goal" and the parameter "location" are matching with the given JSON, but there is an extra command to \'come to a halt\' which is not represented in the JSON.']
Make your way to the bedroom and cease your movement.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}};['2; The natural language command partially matches with the "go_to_goal" action in the JSON structure as the robot is being asked to go to a specific location (the bedroom). However, the command also includes a stop action ("cease your movement") which doesn\'t match any of the actions provided in the JSON structures.']
Head to the bedroom and pause.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}};['2; The natural language command matches partially with the JSON structure. The "go_to_goal" action matches with the command of heading to a specific location. However, the "pause" command doesn\'t have a corresponding JSON structure in the sample provided, thus it is not fully conformant.']
Go to the bedroom and stand still.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}};["4; The command 'Go to the bedroom and stand still' partially matches with the JSON structure. The 'go_to_goal' action and 'location' parameter are correctly mapped to the bedroom. However, the command to 'stand still' doesn't exist in the sample keys and has not been converted to JSON, hence the score isn't a full 5."]
Rotate counterclockwise by 45 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform. The natural language command "Rotate counterclockwise by 45 degrees" matches perfectly with the given JSON structure. The action is "rotate", the rotation angle is 45 clearly defined in the command, and the direction "counterclockwise" corresponds to "is_clockwise": false in JSON. Although the angular velocity value isn\'t provided in command, the specified value in JSON is accepted.']
Turn 45 degrees in the counterclockwise direction.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['5; The command "Turn 45 degrees in the counterclockwise direction." is perfectly mirrored in the given JSON structure. The "action" of "rotate", the param "angle" of 45, and the direction "is_clockwise" being false (indicating counterclockwise), all accurately reflect the command.']
Rotate anticlockwise at an angle of 45 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['4; The command matches the JSON structure well, but the value for "angular_velocity" is null because it is not specified in the natural language command. However, as per the provided instruction, any reasonable value in the JSON is accepted if a parameter\'s value is not specified in the natural language command. Thus, it mostly conforms to the sample keys and structure.']
Rotate left by 45 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['4; Nearly conforms. The values for "angular_velocity" and "is_clockwise" are correctly specified, the "angle" is correctly specified as 45. However, the JSON includes a rotation direction ("is_clockwise": false) which matches the command\'s \'left\' instruction but isn\'t explicitly defined in the command.']
Perform a 45-degree counterclockwise rotation.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['4; Mostly conform. The action and parameters are accurate in relation to the command, but the "angular_velocity" value is null instead of a numerical value. As per the given information, it could be any reasonable value, not necessarily null.']
Turn right and move forward for 4 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['4; The command mentions turning right and moving forward for 4 meters. The JSON statement includes an action to rotate, which could correspond to turning right, and the parameters include angle and direction (clockwise), but there is no specification for the angular_velocity in the command. The command does not mention anything about moving forward after the rotation which is missing in the JSON. Therefore, the command and the JSON partly conform to each other.']
Proceed forward for a distance of 4 meters after making a right turn.,{"action": "move", "params": {"linear_speed": 0.25, "distance": 2, "is_forward": false, "unit": "meter"}};['1; The JSON structure partially matches the command. The direction of movement, distance, and unit have been correctly identified. However, the linear speed set in the JSON does not match any information provided in the command, and the is_forward property is set to false, contradicting the command to proceed forward.']
Take a right and continue moving ahead for 4 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 4, "is_forward": true, "unit": "meter"}};['2; The command includes a "rotate" action ("take a right") and a "move" action ("continue moving ahead for 4 meters"). The given JSON represents only the "move" action, which matches with the second part of the command. However, it does not cover the "rotate" action, hence the partial conformity. Also, the rotation direction ("right") and value are not taken into consideration in the JSON structure.']
After making a right turn, advance straight for a distance of 4 meters.,{"action": "move", "params": {"linear_speed": 0.25, "distance": 2, "is}};['1; The natural language command includes a rotation action ("making a right turn") that is not represented in the JSON structure at all. Moreover, the "move" action is only partially represented in the JSON, since the movement distance mentioned in the command (4 meters) is different from the one in the JSON (2 meters). However, the general action of moving forward is represented, thus the score is not 0.']
Make a right-hand turn and proceed forward for 4 meters.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['3; The natural language command is asking for a rotation and then a movement forward. The provided JSON only covers the rotation part of the command ("right-hand turn"), and it is partially incorrect due to "is_clockwise" should be true for a right-hand turn. Thus, only part of the command is correctly represented in the JSON structure.']
Move 1 meter forward at a speed of 1 meter per second.,{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Proceed ahead by 1 meter with a velocity of 1 meter per second.,{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}};["4; The JSON structure correctly represents the action as 'move', and the parameters 'distance', 'linear_speed' and 'unit' match as well. However, the 'is_forward' parameter in the JSON is not mentioned in the natural language command, hence slightly reducing conformity."]
Advance forward by a distance of 1 meter, maintaining a speed of 1 meter per second.,{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}};['5; This natural language command and JSON structure both depict an action of moving forward at a certain speed for a certain distance, with all the necessary parameters provided and conforming to the sample ontology keys.']
Go one meter ahead, moving at a rate of one meter per second.,{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Travel forward for 1 meter while maintaining a speed of 1 meter per second.,{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The JSON correctly maps the instruction to move forward in a straight direction with a specified speed and distance.']
Rotate clockwise by 270 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['5; The JSON and the natural language command are exactly matched. The action "rotate" is clearly specified as well as the parameters "angle", "is_clockwise", and "unit" which correspond with the natural language command "Rotate clockwise by 270 degrees."']
Turn 270 degrees in a clockwise direction.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['4; The action in the command matches correctly with the JSON structure. The parameters “angle” and “is_clockwise” also match perfectly, however, the "angular_velocity" value is missing in the natural language command but it is present in the JSON which leads to a slightly lower score.']
Rotate by 270 degrees in a clockwise manner.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};["5; The JSON structure perfectly matches the command. 'Rotate' is a valid action according to the provided keys, 'angle' parameter value corresponds to '270 degrees' mentioned in the command, 'is_clockwise' is confirmed by 'in a clockwise manner', and 'unit' is suitable as 'degrees'. 'Angular_velocity' is not specified in the command but a null value is accepted as per the guidelines."]
Execute a clockwise rotation of 270 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform. The command asks for a specific action (rotation), direction (clockwise), and units (degrees), and all of these variables are present and correctly filled in the JSON. The "angular_velocity" isn\'t specified in the command, but is correctly left as null in the JSON.']
Shift the orientation by 270 degrees in a clockwise fashion.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform. The natural language command \'Shift the orientation by 270 degrees in a clockwise fashion.\' exactly matches with the JSON command by specifying action as "rotate", angle as "270", the direction as "clockwise" and unit as "degrees". Angular_velocity is not specified but is accepted as a reasonable value for rotation.']
Turn left and move forward for 2 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "second"}};['1; The natural language command says "Turn left and move forward for 2 seconds." which does specify a move action, but it also specifies a rotation (turning left) which is not represented in the JSON. The "distance" value in the JSON is assigned as 2 but in the natural language command, \'2 seconds\' doesn\'t necessarily pertain to distance. As such, it doesn\'t conform well to the sample ontology.']
Proceed forward for 2 seconds, then make a left turn.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "second"}};["2; The natural language command refers to a 'move' action, which is correctly represented in the JSON structure. However, the 'rotate' action for the left turn is missing. Furthermore, 'distance' is given in time units (seconds), whereas the ontology assumes a spatial unit (meters)."]
Take a left turn and continue moving straight ahead for 2 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['1; The command does match the "rotate" action in the provided JSON structure, but missing information like "angular_velocity" and "angle", and also the command is not matched with other provided structures in the sample.']
Make a left turn and drive forward for 2 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['1; The command involves a two-part action - a rotation (left turn) and a forward movement. The JSON structure provided only represents the rotation part partially. There are null values for "angular_velocity" and "angle" parameters which should have been given some values. The "is_clockwise": false corresponds to a left turn. However, the forward movement mentioned in the command is not represented in the JSON structure. Hence, the JSON structure is non-compliant to a large extent.']
After turning left, continue moving straight for 2 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "second"}};['1; The natural language command requests the action of moving straight for two seconds, which is partially reflected in the JSON structure. However, the key "unit" in the JSON is wrong. It should be \'time\' instead of \'second\'. The command also includes the action of turning left, but this is not represented in the JSON at all.']
Move 3 meters backward at a speed of 1.5 meters per second.,{"action": "move", "params": {"linear_speed": -1.5, "distance": 3, "is_forward": false, "unit": "meter"}};['5; The natural language command perfectly matches with the JSON structure, both the action and parameters, like the linear speed, distance, moving direction (interpreted as is_forward key) are appropriately provided.']
Go backwards for a distance of 3 meters at a velocity of 1.5 meters per second.,{"action": "move", "params": {"linear_speed": 0.2, "distance": 2, "is_forward":}};["1; The action 'move' and the parameters' keys 'linear_speed', 'distance' and 'is_forward' are matching. However, the values of these parameters from the natural language command do not match the ones from the JSON structure. The 'unit' parameter is missing in the JSON which is essential considering the command specifies the velocity and distance in meters."]
Reverse direction and travel a distance of 3 meters at a speed of 1.5 meters per second.,{"action": "move", "params": {"linear_speed": 1.5, "distance": 3, "is_forward": false, "unit": "meter"}};['5; Exactly conform.']
Retreat by 3 meters, maintaining a constant speed of 1.5 meters per second.,{"action": "move", "params": {"linear_speed": 1.5, "distance": -3, "is_forward": false, "unit": "meter"}};['4; The natural language command matches well with the JSON structure, as both indicate a moving action. However, instead of a retreat action, the JSON action is "move" and the parameter "is_forward" is not explicitly mentioned in the natural language command but assumed from the context (retreat). The "linear_speed" and "distance" values match perfectly between the command and JSON.']
Travel backwards for 3 meters, maintaining a velocity of 1.5 meters per second.,{"action": "move", "params": {"linear_speed": 0, "distance": 2, "is_forward": true, "unit}};['1; The command dictates a backwards movement but the JSON structure indicates a forwards motion ("is_forward" = true). The distances given don\'t match (3 versus 2) and the command specifies a speed which isn\'t included in the JSON structure. Despite these issues, the command can still be generally categorized under the "move" action.']
Go to the dining room and stop.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 30, "is_clockwise": false, "unit": "degrees"}};["0; The natural language command 'Go to the dining room and stop.' does not match with the provided JSON command for rotation. The JSON command of 'go_to_goal' would have been more appropriate."]
Proceed to the dining room and come to a halt.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Dining Room"}};['2; The natural language command matches with the "go_to_goal" action in terms of the Robot\'s movement, but the location provided ("Dining Room") does not match with the value ("Kitchen") specified in the JSON structure. Therefore, partial conformity.']
Head over to the dining room and pause.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Dining Room"}};['4; The action "go_to_goal" and parameter "location" with value "Dining Room" in the JSON perfectly match the command "head over to the dining room". However, the command also specifies "pause", which does not have an equivalent in the provided JSON structure. This does not fully conform, so it loses a point.']
Make your way to the dining room and bring yourself to a stop.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Dining Room"}};['3; The action "go_to_goal" is used and the location "Dining Room" aligns with the natural language command. However, there\'s no JSON instruction that corresponds to "bring yourself to a stop".']
Move towards the dining room and cease your motion.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": true, "unit": "meter"}};['1; The natural language command asks for motion towards the dining room which corresponds to the action "move", but the direction is not accurately specified. Furthermore, it asks to cease the motion which is not clearly represented in the JSON as all \'move\' parameters are set to 0. There\'s no reference to \'dining room\' in JSON. The action "go_to_goal" which would correspond to moving towards a specific location like the dining room is entirely missing.']
Rotate counterclockwise by 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['4; While all keys match and the action correctly corresponds to the natural language command, angular velocity is not prompted for in the natural language command and cannot be presumed as a null value. It should have been assigned with a reasonable value since the natural language command did not specify a value for it.']
Turn left by 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['4; The command matches overall with the JSON structure, particularity it is a rotate action, angle and unit are correctly provided. But it doesn\'t specify the angular_velocity, and it also doesn\'t specify the rotation direction as "left", the JSON presumes the rotation is not clockwise, which is correct for most standard conventions, but is not explicitly mentioned in the command.']
Rotate in the opposite direction by 60 degrees.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": -60, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform. The natural language command perfectly matches with the JSON information. The action "rotate" is correctly identified, as well as all the parameters like "angle", "is_clockwise", and "unit". The "angular_velocity" parameter isn\'t specified in the command but its value in the JSON is reasonable.']
Execute a 60-degree counterclockwise rotation.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['5; The natural language command precisely matches the JSON structure. The \'rotate\' action is used correctly and the angle to rotate is accurately converted from natural language to the JSON file. The rotation direction (counterclockwise) is correctly reflected in the "is_clockwise": false JSON parameter.']
Rotate anticlockwise by 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform. The natural language command "Rotate anticlockwise by 60 degrees" matches perfectly with the provided JSON structure. The action "rotate" is confirmed, the "angle" value of 60 degrees, the direction interpreted as "is_clockwise" set to false, and "unit" as degrees are all accurate. "angular_velocity" is not mentioned in the text command but is admissible as it can assume any reasonable value.']
Move forward for 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['4; The JSON structure matches the natural language command to move forward for 5 meters. However, the "linear_speed" parameter value is presumed to be 1, which is not specified in the natural language command.']
Proceed ahead for a distance of 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Advance straight ahead for 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};ERROR: Request timed out: HTTPSConnectionPool(host='api.openai.com', port=443): Read timed out. (read timeout=600)

Travel forward for a distance of 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};["4; The JSON has correct action and parameters such as 'distance', 'is_forward' and 'unit'. However, the 'linear_speed' is not specified in the natural language command but assigned a value in the JSON, which is accepted but not exact."]
Go in the forward direction for 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Rotate counterclockwise by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -90, "is_clockwise": false, "unit": "degrees"}};['4; The JSON structure correctly represents the action "rotate" and the direction of rotation (counterclockwise, denoted by "is_clockwise": false), but the specific angular_velocity value is not mentioned in the command -- however, it is accepting any reasonable value. Also, the angle in JSON is represented as "-90" as it denotes counterclockwise rotation which is not clearly mentioned in natural language command but understood. There is minor inconsistency, but overall meaning is preserved.']
Turn 90 degrees counterclockwise.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Rotate anticlockwise by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -90, "is_clockwise": false, "unit": "degrees"}};['4; The JSON structure properly denotes the action of rotation to be performed as indicated in the natural language command. It also accurately captures the direction of the rotation (anticlockwise) and the angle (90 degrees). However, the angular_velocity is not specified in the natural language command, so the value of 1 in the JSON is assumed, which is acceptable but not exactly conforming.']
Rotate to the left by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform. The natural language command specifies an action of rotation, an angle of 90 degrees, and indicates that the rotation should be to the left (which translates to counter-clockwise, or "is_clockwise": false in the JSON. The unit is given in degrees, matching the command, and the angular_velocity is not specified in the command but is given a reasonable value in the JSON. Therefore, the JSON perfectly matches the command.']
Change the orientation to the left by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -90, "is_clockwise": false, "unit": "degrees"}};['4; The command \'Change the orientation to the left by 90 degrees.\' matches correctly with the JSON structure. However, the "angular_velocity" value is arbitrarily set to 1, not provided or indicated by the command, therefore is a minor mismatch between the command and the JSON. As per the given criteria if a parameter\'s value is not specified in the natural language command, any reasonable value in the JSON is accepted, hence, the reduction in score.']
Move backward for 3 seconds.,{"action": "move", "params": {"linear_speed": -1, "distance": 0, "is_forward": false, "unit": "meter"}};['2; The action "move" matches, but the "is_forward" parameter should be False for moving backward. The "linear_speed" and "distance" parameters do not match. The "unit" parameter is fulfilled correctly, and the natural language command does not specify a value for the distance, hence it is accepted as correct.']
Reverse for a duration of 3 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};["2; While the action 'move' and parameter 'is_forward' are correctly translated in the JSON structure, the parameters 'linear_speed' and 'distance' don't match with the natural language command. The command asks for a specific amount of time (3 seconds), however, this is not reflected in the JSON structure. The natural language commands seems to require a time parameter not duration, but this key doesn't exist in provided ontology."]
Go in reverse for a period of 3 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};["2; Partial Conform. The action 'move' and parameter 'is_forward' match correctly with false indicating reverse motion. However, 'linear_speed' and 'distance' values shouldn't be zero since it specifies movement, also in the command time mentioned where in JSON, time parameter is not specified."]
Travel backwards for a total of 3 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "duration": 3, "unit": "second"}};['2; The action verb "move" is present in the JSON and the ontology, but some of the parameters such as "linear_speed" and "distance" do not exactly conform to the natural language command. In the command, it\'s not specified how far to move, but rather how long to move for (3 seconds). The JSON includes parameters for duration and "is_forward": false" which indicates a backward motion. Note that "duration" is not included in the sample ontology, therefore this lowers the conformity score.']
Move in the opposite direction for 3 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "second"}};['1; Parameters such as "linear_speed", "distance" corresponding to the action "move" are misaligned in the JSON structure with respect to the natural language command. Therefore, this leads to a poor matching score.']
Turn left and move forward for 2 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}};['2; The JSON structure partially matches the natural language command. The command involves turning left before moving forward, but the JSON structure only represents the movement part. There is no JSON provided for the turning action.']
Proceed forward for 2 meters after making a left turn.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['4; The command to rotate is fully matched and conform to the provided JSON. However, the command to go forward for a certain distance has not included in the JSON.']
Make a left turn and advance for 2 meters.,{"action": "rotate", "params": {"angular_velocity": undef, "angle": undef, "is_clockwise": false, "unit": "degrees"}};['2; The JSON structure matches with regards to "action" being "rotate" and the unit, but there is no specific value for angular velocity and angle in the command. Even though not explicitly phrased as "turn left", it can be reasonably interpreted as a counter clockwise rotation. The "advance for 2 meters" part of the command is not represented in the JSON at all.']
Take a left and continue forward for a distance of 2 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}};['1; The natural language command includes the action of rotation (take a left) and moving forward which is not perfectly represented in the provided JSON structure. The JSON only reflects the "move" action. The "rotate" action and its parameters are not included in the JSON structure. Hence, the match is not perfect.']
Move ahead for 2 meters after making a leftward turn.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['3; The JSON structure correctly reflects the "making a leftward turn" part of the command but doesn\'t cover the "Move ahead for 2 meters" part of the command. Therefore, it is not fully conform with the command.']
Make a U-turn and move in the opposite direction for 10 seconds.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": false, "unit": "degrees"}};['2; The first part of the command (Make a U-turn and move in the opposite direction) almost matches with the JSON structure provided (angular_velocity is given as 0.35 but the user didn\'t specify the speed), the second part of the command "for 10 seconds" doesn\'t match any part or structure in the JSON command.']
Perform a U-turn and proceed in the opposite direction for a duration of 10 seconds.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": false, "unit": "degrees"}};['1; The natural language command does suggest a rotation action, and translating it into "perform a 180 turn" is reasonable, as a U-turn typically means a 180 degree turn. This somewhat conforms to the "rotate" action in the JSON example. However, the speed of the rotation "angular_velocity" is not accurately represented in the natural language command, it suggests a duration of 10 seconds which is not equivalent to an angular velocity of "10". The conformity is therefore quite low.']
Execute a U-turn and travel in the opposite direction for a time span of 10 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The action of the JSON command shows "move" and includes parameters such as "linear_speed", "distance", "is_forward" and "unit". However, the natural language command suggests a turn (rotation), and a time-based movement rather than distance-based which doesn\'t completely match with the provided JSON command. Therefore, the conformity is very low.']
Turn around and travel in the opposite direction for a duration of 10 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "duration": 10, "unit": "second"}};['1; There are several mismatches between the natural language command and the JSON structure. The "rotate" action is missing in the JSON structure, which is needed for the robot to turn around. The "duration" parameter is also not part of the sample keys in the ontology. The "is_forward" is correctly set to false, matching the "travel in the opposite direction" command. However, the "linear_speed" and "distance" parameters are set to 0, which is not in line with the "travel" command.']
Perform a U-turn and move in the opposite direction for 10 seconds.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": false, "unit": "degrees"}};['3; The action and unit match with the JSON structure, the angular_velocity value is not specified but 10 is a reasonable value. However, the "angle" value in the command (180 degrees in the case of a U-turn) is correctly doubled from the original 180 degrees, but there is no parameter in the JSON structure to indicate duration of movement or \'for 10 seconds\', so the JSON form partially matches the command.']
Rotate clockwise by 180 degrees and stop.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['4; The JSON structure correctly implements the action and parameters described in the command. However, it does not specify an "angular_velocity" value while the command implies that there should be one.']
Perform a 180-degree clockwise rotation and then come to a halt.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; The natural language command exactly conforms to the provided JSON. All necessary information, such as action (rotate), angle (180), is_clockwise (true), unit (degrees) is correctly provided. Angular velocity is not specified in the command but any reasonable value in JSON is accepted, so null value is also fine.']
Execute a clockwise rotation of 180 degrees and then cease movement.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['3; The JSON structure partially matches the command. It correctly interprets the rotation action, direction, angle and unit. However, it does not provide a value for the "angular_velocity" which is mentioned in the sample keys but not specified in the natural language command. Therefore, it\'s allowed to have any reasonable value, including null. Also, the command "cease movement" is not represented in the JSON.']
Turn right by 180 degrees and then stop.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": false, "unit": "degrees"}};["3; While the rotate command and the numeric value of the angle match, there are two significant deviations from the natural language command: The movement direction is incorrect (it should be clockwise), and there is no 'stop' command in the JSON."]
Rotate in a clockwise direction by 180 degrees and then come to a stop.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};["4; The command match the rotation action but the angular_velocity parameter is not specified in the command, which results in a null value in the JSON structure. The stop action should be reflected in a separate JSON structure, which is not provided here, hence it can't fully conform."]
Move diagonally to the right for 4 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meter"}};["1; The natural language command involves moving, but the direction 'diagonally to the right' specifically is not supported in the given JSON structure, so it does not fully conform. The distance is correct, but the 'is_forward' in the JSON structure should be True for moving, not False. The linear_speed value does not have to match the command but it is a reasonable value."]
Go right at an angle for a distance of 4 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meter"}};['1; The command in natural language indicates a rotation and movement at a certain angle for a distance of 4 meters, which would involve both moving in a specific direction and rotating to it. But the provided JSON structure represents a simple forward or backward linear movement, not taking into account the angular aspect. Moreover, the key "is_forward" in JSON has value false which contradicts the command. The "linear_speed" value of 1, although reasonable, is not stated in the natural language command.']
Travel in a diagonal direction to the right covering a distance of 4 meters.,{"action": "move", "params": {"linear_speed": , "distance": 4, "is_forward": false, "unit": "meter"}};["1; Although the command mentions moving and a certain distance (both available in the specified JSON keys), direction and the parameter 'is_forward' has been set to 'false' in the JSON which does not satisfy the diagonal movement mentioned in the command. The 'linear_speed' is also left empty in the JSON."]
Proceed at a diagonal towards the right, moving 4 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meter"}};['1; The natural language command instructs about moving in a specific direction, with a specified distance but the conversion to JSON does not respect the direction specified and there is no key in the JSON structure that can represent "diagonal" or "right" movement. Also, the "is_forward" parameter contradicts the instruction since proceeding diagonally towards the right would infer forward motion. Therefore, the matching between the natural language command and the JSON structure is poor.']
Move to the right diagonally, covering a distance of 4 meters.,{"action": "move", "params": {"linear_speed": , "distance": 4, "is_forward": false, "unit": "meter"}};['1; The command asks to move diagonally to the right but there is no mention of moving diagonally in the JSON structure. Although the "distance" parameter matches, the JSON\'s "is_forward" key set as false contradict the forward movement implied in the command. The linear speed also is not given a value.']
Turn right and move forward for 1 meter.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['3; Although the instructions "Turn right" are correctly translated to "rotate" action in the JSON, the "move forward for 1 meter" command is missing in the JSON provided. Therefore, the JSON command does not fully match the natural language command. Also, the "is_clockwise" parameter is false, which may not correspond to the "turn right" instruction.']
Make a right turn and proceed one meter forward.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['3; Partially conform. The "rotate" action matches with the natural language command, and the direction of rotation (right means clockwise) matches as well. However, the "angle" and "is_clockwise" parameters do not match the specification (deg=90, is_clockwise=True). The movement part from the natural language command ("proceed one meter forward") is not reflected in the JSON at all.']
Take a right and continue moving ahead for a distance of 1 meter.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};['4; The command mostly matches with the JSON structure. The action move and its parameters like distance, is_forward and unit match correctly. However, the command "Take a right" is not represented in the JSON structure provided.']
Rotate to the right and advance straight ahead for 1 meter.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};['2; Partial conformity. The command includes both rotation and moving actions. The given JSON structure corresponds only to the rotating action and even for this action, two parameters (angular_velocity and angle) have null as value which doesn\'t provide any useful information. Moving action and the "1 meter" parameter are not represented in JSON at all.']
Facing towards the right, progress forward for a distance of 1 meter.,{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}};['4; The command correctly matches the move action, as well as the parameters for linear_speed, distance, is_forward, and unit. However, the part of the command specifying "Facing towards right" isn\'t directly translated to the JSON structure, which may suggest need for rotation action which is not included in the given JSON.']
Move in a zigzag pattern for 8 seconds.,{"}};['0; The natural language command does not match any of the provided JSON structures. The command mentioning moving in a zigzag pattern, whereas none of the available actions in the JSON structures support this pattern. There are no keys pertaining to time or seconds as well.']
Perform a zigzag movement continuously for a duration of 8 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};['0; The natural language command involves a "zigzag" movement, which doesn\'t have a corresponding action in the sample ontology. The JSON structure presented involves a simple forward motion, not a zigzag movement, so it doesn\'t align with the command at all.']
Traverse in a serpentine motion for 8 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};['1; The JSON structure describes a straight move action, whereas the command specifies a "serpentine" motion which isn\'t detected anywhere in the JSON. The time of the motion, indicated as 8 seconds in the command, is not reflected in the JSON. Some parameters (\'is_forward\', \'linear_speed\', \'unit\') match the natural language command\'s vague information, therefore a score of 1 is given but the overall conformity is very low.']
Alternate your path in a zigzagging pattern for the next 8 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};["0; The natural language command suggests alternating the path in a zigzag pattern while the JSON structure depicts a forward movement, they don't conform. Additionally, the time parameter mentioned in the command is not represented in the JSON."]
Execute a back-and-forth motion resembling a zigzag for a total of 8 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};['1; The action in the JSON structure is "move", which aligns with the nature of a zigzag motion in the command. However, the command doesn\'t specify a distance or other aspects of the parameters and the idea of a "back-and-forth" motion isn\'t represented in the JSON structure.']
Rotate counterclockwise by 45 degrees and move forward for 3 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['4; While the rotation command is correctly interpreted in the JSON structure with correct values for "angle" and "unit" properties, and correct use of "is_clockwise" corresponding to the "rotate counterclockwise" command in the natural language command, "angular_velocity" value not specified in the command and the forward movement command is not represented in the JSON structure.']
Turn left by 45 degrees and advance for a distance of 3 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['3; The JSON command partially corresponds with the natural language command, but there is no JSON command accounting for the movement part of the sentence "advance for a distance of 3 meters."']
Rotate anti-clockwise at an angle of 45 degrees and proceed ahead for a span of 3 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['3; The rotation part of the command completely conforms to the JSON structure, but the second part of the command (proceed ahead for a span of 3 meters) is not represented in the given JSON.']
Pivot in a counterclockwise direction by 45 degrees and travel a distance of 3 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['3; The command matches well with the "rotate" action in the JSON structure and the direction and angle parameters are correctly interpreted. However, the JSON for action "move" and its parameters "distance" is not provided as specified in the command. The "angular_velocity" parameter is also not specified in the command but is correctly marked as null in the JSON.']
Shift to the left by 45 degrees and continue moving forward, covering a distance of 3 meters.,{"action": "move", "params": {"linear_speed": , "distance": 3, "is_forward": true, "unit": "meter"}};["2; The natural language command partially matches with the JSON structures. The movement action and parameters such as 'is_forward' and 'distance' match correctly. However, the rotation to the left by 45 degrees is missing in the JSON command, and the 'linear_speed' doesn't have a value."]
Move backward and stop at the nearest obstacle.,{"action": "move", "params": {"linear_speed": -1, "distance": null, "is_forward": false, "unit": "meter"}};['2; The natural language command partially matches with the JSON structure. While the action corresponds to "move", the "is_forward" key set to false also correctly indicates moving backward as stated in the command. However, the command\'s mention of stopping at the nearest obstacle is not represented in the given JSON. Moreover, the "distance" and "linear_speed" keys are inaccurately filled. The "distance" is not mentioned in the command and the "linear_speed" is negatively set, which is not specified in the command.']
Reverse and come to a halt once you reach the closest object in your path.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The JSON command does carry out a reverse motion as indicated in the text command, but does not specify halting at the closest object. Therefore, it partially matches with the text command.']
Back up and cease movement upon reaching the nearest obstruction.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The JSON representation is generally correct, but not entirely accurate according to the natural language command. The natural language command mentions "back up" and "cease movement upon reaching the nearest obstruction" which implies backward movement hence rightly represented by the "is_forward": false. However, the natural language command does not specify anything about the "linear_speed" or the "distance", hence they cannot be accurately determined. The "linear_speed" and "distance" both being 0 would mean that there is no movement, contrary to the "back up" command.']
Retreat and come to a stop when you encounter the closest barrier.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['0; The given JSON does not match the command. The command refers to moving backwards until an obstacle is met, implying a negative linear speed and nonzero distance, which is not what the given JSON indicates. The given JSON shows a stop command, which is not mentioned in the natural language command.']
Go in reverse and stop once you reach the nearest obstacle.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The natural language command talks about moving in reverse until an obstacle is reached, while the JSON structure just depicts a halt because both linear speed and distance are set to 0. The "is_forward" condition matches as false refers to going in reverse, but the other parameters do not match the command.']
Turn left and move in a curved path for 6 meters.,{"action": "move", "params": {"linear_speed": , "distance": 6, "is_forward": false, "unit": "meter"}};['1; The JSON structure does somewhat match the natural language command as it involves moving a certain distance. However, it does not account for the action of turning left or moving in a curved path, nor the linear speed required for this action.']
Take a left turn and travel in a curved trajectory covering a distance of 6 meters.,{"action": "move", "params": {"linear_speed": , "distance": 6, "is_forward": false, "unit": "meter"}};['1; The natural language command talks about taking a left turn and then moving hence the action should be "rotate" and not "move". Also, the JSON structure has "is_forward" as false, whereas it is not mentioned in the natural language command. Without this specification, we should accept any reasonable value in the JSON.']
Make a leftward turn and proceed along a curving route spanning 6 meters.,{"action": "rotate", "params": {"angular_velocity": ?, "angle": ?, "is_clockwise": false, "unit": "degrees"}};["1; The natural language command includes a 'rotate' action which matches the JSON structure, but the command also includes a 'proceed along a curving route' which is not included in the JSON structure. Additionally, the parameters 'angular_velocity' and 'angle' are not fully defined in the natural language command."]
Go left and follow a curved path for a distance of 6 meters.,{"action": "move", "params": {"linear_speed": , "distance": 6, "is_forward": false, "unit": "meter"}};["1; The natural language command asks for a specific movement (going left) and following a curved path, which is not clearly supported by the given JSON structures. The movement direction and the shape of the path are not parameters in the JSON structure. On the other hand, distance and unit conform with the JSON. However, the direction of the movement i.e., if it is forward or not, is wrongly inferred in the JSON. The command doesn't specify about the direction."]
Regulate your movement to the left and travel in a curved trajectory for 6 meters.,{"action": "move", "params": {"linear_speed": , "distance": 6, "is_forward": false, "unit": "meter"}};['1; The command states a movement to the left in a curved trajectory but given JSON structures do not support this type of movement. The JSON script provided doesn\'t match the command fully. There is a value for the distance parameter but there is no linear_speed value in the command. Also "is_forward": false doesn\'t correspond with the natural language command.']
Move forward at a speed of 1 meter per second for 10 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}};['4; The command matches the "move" action but the "distance" key value is ambiguous, in the command it\'s specified as time ("10 seconds"), not an actual distance. The "unit" also does not match, the command asks for speed, not distance.']
Proceed ahead at a velocity of 1 meter per second for a duration of 10 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}};['3; The natural language command does align with the "move" action in the JSON instructions structure. However, the natural language command provides "duration" as the parameter, whereas the JSON structure requires "distance". Therefore, it is not a perfect match.']
Advance at a rate of 1 meter per second for 10 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}};["4; The natural language command is mostly according to the JSON structure, but there's a slight mismatch in terms of the 'distance' value. Here, in the natural language command, it is mentioned 'for 10 seconds' which might be interpreted as time, on the other side, in the provided JSON it's having 'distance' which refers to the distance to be covered not the time duration which is expected according to the natural language command."]
Go straight ahead, maintaining a speed of 1 meter per second for a period of 10 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}};['4; The command and JSON structure are matching except for the minor discrepancy in the distance parameter. In the command, the distance is not directly mentioned but instead a time duration for the move action is given which can be translated into distance considering speed (as distance = speed * time), but this conversion is not directly provided in the command. Otherwise, all the other parameters in JSON structure matches with the command.']
Travel forward for 10 seconds, covering a distance of 1 meter per second.,{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}};['4; The JSON structure corresponds to the action of moving forward described in the natural language command. However, the given command specifies "time" (10 seconds) to cover a certain distance with a certain speed (1 m/s), yet the JSON structure presents "distance" (10 meters) with a certain speed, slightly differing from the original intent of the command. Still, the JSON structure\'s adherence to the overall \'move\' action and its parameters is satisfactory.']
Rotate clockwise by 30 degrees and continue moving forward for 4 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 30, "is_clockwise": true, "unit": "degrees"}};['3; The given command corresponds partially to the JSON structures. The command "Rotate clockwise by 30 degrees" matches with the JSON action "rotate" and parameters "angle", "is_clockwise", and "unit". However, "angular_velocity" parameter is not addressed in the command, so its null value is accepted. As for the second part of the command, "continue moving forward for 4 meters", it would necessitate another JSON structure associated with "action": "move", but no such structure is given. Therefore, the command only partially conforms to the provided JSON structures.']
Move forward for 4 meters and rotate in a clockwise direction by 30 degrees.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['1; The natural language command specifies two actions - moving forward and rotating. But the given JSON structure is about the "go_to_goal" action to a location "Kitchen", which doesn\'t match with the command. Although elements of the "move" action and the "rotate" action are present in the command, they\'re not encapsulated in the provided JSON structure.']
Rotate 30 degrees clockwise and then proceed to move forward for 4 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 30, "is_clockwise": true, "unit": "degrees"}};['4; The natural language command partially matches with the JSON structures. Specifically, it matches the "rotate" action in the ontology with some parameters provided (angle, is_clockwise). However, the command to move forward for 4 meters does not match any of the JSON structures as there isn\'t any provided JSON for the "move" action in the given JSON structures.']
After rotating 30 degrees clockwise, continue moving forward for 4 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 30, "is_clockwise": true, "unit": "degrees"}};['4; The natural language command fits the provided JSON structure with some missing details. The rotation action and the parameters angle, is_clockwise and unit are correctly interpreted. However, the angular_velocity value is not specified in the natural language command so it is accepted as null. The command also includes an action for moving forward a certain distance, however, there is no corresponding JSON structure provided.']
Rotate to the right by 30 degrees and then proceed with a forward movement of 4 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 30, "is_clockwise": false, "unit": "degrees"}};['3; The format of the second JSON structure is matching but there\'s no JSON structure for the mentioned action in the command, "proceed with a forward movement of 4 meters." The clause "rotate to the right" specified in the command, suggests a clockwise rotation however in the JSON structure it is set to false which is incorrect. The parameter "angular_velocity" is null in the JSON structure but this is still acceptable as any reasonable value is accepted when it is not specifically mentioned in the command.']
Move in a circular path with a radius of 2 meters for 7 seconds.,{"action": "move", "params": {"linear_speed": null, "distance": null, "is_forward": null, "unit": null}};['1; The command refers to a type of movement, but the details given ("circular path with a radius of 2 meters for 7 seconds") do not correspond to any of the parameters listed in the JSON structure ("linear_speed", "distance", "is_forward").']
Circle around with a radius of 2 meters for a duration of 7 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": null, "unit": null}};['1; The JSON structure provided corresponds to a rotation action. However, the specific parameters such as "angular_velocity", "angle", "is_clockwise", and "unit" are not specified in the natural language command. While "rotate" might be inferred from "circle around", the parameters don\'t match with the command given (i.e., radius and duration are not valid parameters for the sample ontology). The natural language command seems to refer more to a circular movement rather than a straightforward rotation in place.']
Perform circular movement with a radius of 2 meters for 7 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": null, "unit": null}};['1; The natural language command suggests a type of rotation, however, the specific parameters of rotation such as angular_velocity, angle, is_clockwise, and unit are not mentioned in the command and therefore null in the JSON.']
Rotate along a circular trajectory with a 2-meter radius for 7 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": null, "unit": null}};['0; The natural language command does not provide any parameters that match with the provided JSON structure. No angular velocity, angle, is_clockwise or unit parameters are provided in the command.']
Traverse a circular path, covering a distance of 2 meters, for a duration of 7 seconds.,{"action": "move", "params": {"linear_speed": null, "distance": 2, "is_forward": null, "unit": "meter"}};["2; The natural language command partially matches with the JSON command. The action 'move' and the parameter 'distance' in 'params' match with the values in the JSON command. But, the 'duration' or the 'circular path' part of the command is not specified in JSON structure and the 'linear_speed' and 'is_forward' fields are omitted in the natural language command. Hence, it doesn't completely conform to the JSON structure."]
Turn right and move forward for 5 seconds, then revert back.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['1; The natural language command asks for a sequence of actions, which include rotation, move forward for a certain amount of time, and then presumably reverting back to the original position. However, the JSON structure only represents one \'rotate\' action, with incorrect values for "is_clockwise" and missing angular_velocity and angle values. The command in natural language is not sufficiently matched by the provided JSON structure, thus the score is relatively low.']
Make a right turn and proceed forward for 5 seconds, then return back.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};["1; The provided JSON represents only the 'rotate' action of the command and lacks the details for 'move' action. Furthermore, 'is_clockwise' parameter in JSON structure is false, which doesn't match with the command 'Make a right turn'. Also, 'angular_velocity' is set to null in the JSON, while no clear specification is given in the instruction."]
Take a right turn and advance ahead for 5 seconds, then go back in reverse.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};["0; The natural language command includes both rotation and forward movement, which the JSON format does not support at the same time. Besides, the parameters 'angular_velocity' and 'angle' have null values in the JSON structure and are not specified in the command. Furthermore, the unit in the JSON structure is 'degrees', while the command mentions 'seconds'. Therefore, there is no conformity."]
Rotate to the right and move straight ahead for 5 seconds, then reverse the direction.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};['2.5; The rotate action partially matches the command, but the command contains a movement direction that is not represented in the JSON. Additionally, the JSON lacks values for "angular_velocity" and "angle". Furthermore, the command mentions a duration ("5 seconds"), but this is not represented in the JSON. Finally, the command specifies reversing direction, but this is not reflected in the JSON.']
Change direction to the right and go forward for 5 seconds, then reverse back.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "second"}};['2; The JSON structure partially matches the natural language command. However, key elements of the natural language command, such as "change direction to the right" and "reverse back", are not captured at all within the JSON structure. Additionally, the "distance" parameter in the JSON structure is not specified in seconds, which doesn\'t match the units given in the natural language command.']
Move along the perimeter of the room for 1 minute.,{"action": "move", "params": {"linear_speed": 0.1, "distance": 10, "is_forward": true, "unit": "meter"}};["2; The natural language command refers to moving along the perimeter of the room, while the JSON structure indicates a forward movement for a certain distance. The exact shape of the move (along the perimeter, in a straight line, etc.) is not represented in the JSON structure. Moreover, time is not represented in the JSON structure while it's mentioned in the command."]
Walk around the edges of the room for 1 minute.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The natural language command instructs to "walk around the edges of the room for 1 minute", which isn\'t completely in accordance with the JSON action "move", and there isn\'t any time or direction parameter in the JSON structure given to align with the instructions of the command. Only the movement is vaguely captured by the "move" action.']
Circulate along the boundary of the room for 1 minute.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 360, "is_clockwise": true, "unit": "degrees"}};['1; The JSON structure reflects an action of rotating, however, the natural language command does not specify any rotation but rather a circular movement along the boundary of the room. The circular movement could involve not only rotation but also linear movement, which is not represented in the JSON. Additionally, the time duration in the command ("for 1 minute") is not represented in the JSON structure.']
Patrol the perimeter of the room for 1 minute.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 10, "is_forward": true, "unit": "meter"}};["1; The instruction 'Patrol the perimeter of the room for 1 minute' is not correctly translated into the provided JSON. The action in the JSON is 'move', which might be a part of patrolling but does not capture the entire sense of 'patrol'. Moreover, the JSON mentions specific parameters like 'linear_speed', 'distance', 'is_forward', and 'unit' – none of which are implied in the original instruction. Also, the duration of one minute specified in the command is not represented in the JSON at all."]
Traverse the outer edges of the room for 1 minute.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 10, "is_forward": true, "unit": "meter"}};['1; The command mentions traversing the outer edges of the room which likely involves movement, however, the specific parameters "linear_speed", "distance", "is_forward" and "unit" in the JSON structure do not match the unspecified parameters in the natural language command. The command also mentions for "1 minute" which is not addressed in the JSON structure at all. Thus, there\'s very low conformity.']
Rotate counterclockwise by 60 degrees and move forward for 3 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['2.5; The command mentions two actions - rotate and move but only the JSON structure for rotation action is provided, the move action is not reflected in the JSON structure which is why it doesn\'t match completely. Missing part: {"action": "move", "params": {"linear_speed": null, "distance": 3, "is_forward": true, "unit": "meter"}}.']
Turn left by 60 degrees and proceed ahead for a distance of 3 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['3.5; The JSON structure corresponds to half of the command: the rotation aspect. However, there isn\'t a corresponding JSON structure provided for the "proceed ahead for a distance of 3 meters" part of the command. The JSON structures should include "move" action for complete conformity.']
Rotate anticlockwise by 60 degrees and advance 3 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['3; The JSON structure matches the initial part of the command, which is about rotation, perfectly. However, the second part of the command about moving forward for 3 meters does not have a corresponding JSON structure in the answer.  Therefore, it’s an incomplete match.']
Face left and travel straight for 3 meters after rotating 60 degrees counter-clockwise.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['2; The JSON contains the rotation action as it was said in the natural language command, however, the part that said "Face left and travel straight for 3 meters" was not represented in the JSON. Therefore, full matching wasn\'t achieved.']
Make a 60-degree left turn and move forward 3 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['5; The command matches the "rotate" action, but does not provide a value for "angular_velocity", which is accepted as per the instructions. The "is_clockwise" value is correctly inferred as false for a left turn. The "angle" parameter is correctly set as 60 degrees. However, the command to move forward 3 meters should also be represented in a separate JSON for "move" action, which hasn\'t been provided.']
Move forward at a variable speed for 10 seconds.,{"action": "move", "params": {"linear_speed": variable, "distance": 0, "is_forward": true, "unit": "meter"}};['2; The natural language command semi-aligns with the JSON structure. Although the "action" : "move" and "is_forward" : true is correct, the command specifies a duration to move rather than a linear speed or distance. The unit also does not match because it describes time, not distance.']
Proceed ahead for a duration of 10 seconds, adjusting the speed as necessary.,{"action": "move", "params": {"linear_speed": null, "distance": null, "is_forward": true, "duration": 10, "unit": "second"}};["1; The JSON command includes 'move' action which is present in the ontology. The 'is_forward' field is correct. However, 'linear_speed' and 'distance' fields cannot be null according to the given ontology. Also, the duration is not within the sample keys of ontology."]
Advance for a period of 10 seconds, with variable speed.,{"action": "rotate", "params": {"angular_velocity": -1 * math.pi, "angle": 180, "is_clockwise": false, "unit": "radian"}};['0; The natural language command is asking to move forward for a certain period with a variable speed, however the JSON structure represents a rotation command with specific angular velocity and angle parameters. There is no match between the command and the JSON structure.']
Travel forward, varying the speed, for a total of 10 seconds.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['0; The natural language command specifies a linear movement action with varying speed for a given time, however the JSON structure represents a rotation action. The parameters in the natural language command and the JSON structure do not correspond.']
Move ahead for 10 seconds, adjusting the speed accordingly.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 10, "is_forward": true, "unit": "meter"}};['1; The command refers to a time period rather than a distance to travel as well as indicating a possible speed adjustment, neither of these elements are represented in the JSON structure. However, the general action of moving forward is present within the JSON, hence the score of 1.']
Move backward and stop 1 meter away from the designated target.,{"action": "move", "params": {"linear_speed": -0.5, "distance": 1, "is_forward": false, "unit": "meter"}};["1; The JSON structure matches the 'move' action from the ontology, however, in the natural language command, there's no information about 'linear_speed' and 'is_forward'."]
Reverse direction and come to a halt at a distance of 1 meter from the specified target.,{"action": "move", "params": {"linear_speed": 0, "distance": 1, "is_forward": false, "unit": "meter"}};["3; The natural language command is partially matched with the JSON structure. The 'action' in JSON corresponds to 'move' which is represented as 'reverse direction' in the command and the 'distance' parameter is mentioned as 1 meter. However, 'is_forward' property is set to be false which is not clearly communicated in command. Also, linear_speed is set as 0 which means halt but it's not clear from JSON whether the halt is before or after moving (reverse direction) to specified distance. It could have been clearer if there were two different actions - one for reverse and one for halt - in two different JSON segments."]
Go in the opposite direction and pause when you are 1 meter away from the assigned target.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": false, "unit": "meter"}};["2; The natural language command partially conforms to the JSON structure. The command refers to moving in the opposite direction which matches the 'move' action in the JSON but the command to 'pause' when a certain distance from an 'assigned target' is not reflected in the JSON structure. The distance parameter in the JSON structure also refers to how far to move, but not how far to stop from a target. Furthermore, the 'assigned target' in the command doesn't match with any keys in the JSON structure."]
Retreat and come to a stop, maintaining a distance of 1 meter from the designated target.,{"action": "move", "params": {"linear_speed": 0, "distance": 1, "is_forward": false, "unit": "meter"}};['2; The natural language command partially matches with the JSON command. It involved movement and a specific distance just like in the JSON command. But the "retreat" in the command indicates a backward direction of movement, while "is_forward" in the JSON command is set to false. Additionally, there is no specified linear speed in the natural language command, incompatible with the JSON structure where linear speed is set to 0. However, it could be inferred that coming to a stop could mean a speed of 0. Finally, the "maintaining a distance" part of the command doesn\'t correspond to the "move" action in the JSON command, nor is there an action for maintaining distance in the JSON structures provided.']
Move in a reverse motion and cease motion once you are 1 meter away from the specified target.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['0; The natural language command suggests a backward movement towards a goal, but the provided JSON structure represents going towards a goal in a forward motion. Also, the JSON does not suggest a stopping condition based on a distance from the destination.']
Move forward for 1 meter.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};['4.5; The command is well matched with the JSON. However, "linear_speed" value in JSON is 0.5 but not specified in the command. Although any reasonable value is accepted, for a full score it should be perfectly matched.']
Proceed ahead by 1 meter.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Advance for a distance of 1 meter.,{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Travel in a forward direction for 1 meter.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};['5; The command "Travel in a forward direction for 1 meter" perfectly matches with the provided JSON command structure. The action "move" and parameter "is_forward" : true corresponds to "Travel in a forward direction", while "distance" : 1 and "unit": "meter" corresponds to "for 1 meter". The parameter "linear_speed" was not specified so its value in the JSON is accepted.']
Go straight for a span of 1 meter.,{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The natural language command corresponds entirely with the provided JSON structure. The action "move" is correctly utilized with all necessary parameters specified, including linear speed, distance, direction (forward), and unit (meter). The command\'s requested actions and parameters are entirely compatible with the provided ontology.']
Rotate counterclockwise by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -90, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform. The command "Rotate counterclockwise by 90 degrees" exactly fits the provided JSON structure. The action is correctly identified as "rotate", the angle and unit are explicitly given as -90 and degrees respectively, the fact that it\'s a counterclockwise rotation is correctly translates to a \'false\' value for "is_clockwise", and although the angular_velocity isn\'t specified in the command, the given value of 1 is a reasonable assumption.']
Turn left by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['4; The natural language command mostly conforms to the JSON structure. The action "rotate" and the "degrees" unit are perfectly matched. The angle 90 and is_clockwise=false are also correct for left rotation. However, the natural language command does not specify the angular velocity, so the null value is accepted. The score is not 5 because of the unspecified angular velocity.']
Rotate anticlockwise by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -90, "is_clockwise": false, "unit": "degrees"}};['4; Even though the command matches the JSON structure, the angular_velocity is not mentioned in the command, hence the values may not accurately represent the command.']
Rotate to the left by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['4; The angular_velocity value in the natural language command is not specified, but it is given a reasonable value in the JSON structure. All other keys in the JSON structure do match up with the natural language command.']
Spin counterclockwise by 90 degrees.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['0; The command given is to rotate counterclockwise by 90 degrees but the JSON structure represents an action to go to a specified location (Kitchen). There is no match.']
Move backward for 2 seconds.,{"action": "move", "params": {"linear_speed": -1, "distance": 0, "is_forward": false, "unit": "meter"}};["2; The command asks for a time-dependent movement, while the JSON structure deals with a distance-dependent movement. While 'move' action and 'is_forward' param match, 'linear_speed' and 'distance' do not directly conform to the time request in the command."]
Go backward for a duration of 2 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "duration": 2, "unit": "second"}};["1; The command matches the 'move' action but none of the guideline-provided parameter keys match with the keys provided in the JSON. Therefore, the match is low."]
Reverse direction and continue for 2 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": false, "unit": "second"}};["4; The JSON structure has the correct action (move) and the correct parameters (linear_speed, distance, is_forward, unit) and the parameter value for is_forward (false) matches the command to reverse direction however, the command specifies duration (2 seconds) while the JSON implies distance, not time. Also, linear_speed parameter doesn't have a direct reference in the command."]
Retreat for a period of 2 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};["1; The natural language command indicates a backwards movement for a period of 2 seconds but still involves motion which does align with the 'move' action in the JSON. However, the duration ('2 seconds') is not translated into any parameter in the JSON, and factors like 'linear_speed', 'distance' and 'unit' in the JSON structure are not mentioned in the command. 'is_forward' parameter in the JSON is correctly set to 'false' given the 'retreat' command."]
Take a step back and hold for 2 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": -0.1, "is_forward": false, "unit": "meter"}};['2; The action in the JSON structure is correct as it matches with the command of taking a step which involves movement. However, the parameters such as the linear speed and distance don\'t perfectly match with the natural language command. The "hold for 2 seconds" part of the command is not represented in the JSON at all.']
Turn left and move forward for 3 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}};['2; The linear_speed value is arbitrarily selected as 1, which does not match the natural language command. The JSON structure also lacks corresponding commands/parameters for "Turn left".']
Take a left turn and proceed ahead for a distance of 3 meters.,{"action": "rotate", "params": {"angular_velocity": ?, "angle": ?, "is_clockwise": false, "unit": "degrees"}};['2; Partial conformity. The command indicates a move but specifics about the rotation element such "angular velocity" and "angle" are not provided in the natural language command. Only the direction of rotation is mentioned. It also contains an action (`move forward for 3 meters`) that corresponds to another JSON structure not provided in the example.']
Make a leftward turn and continue moving straight ahead covering a distance of 3 meters.,{"action": "rotate", "params": {"angular_velocity": ?, "angle": ?, "is_clockwise": false, "unit": "degrees"}};['4; The command instructs to make a left turn which is partially covered by the JSON structure since the direction (left side) theoretically corresponds to a counterclockwise rotation, denoted by "is_clockwise": False. But the angle and the angular_velocity for turning left are not mentioned in the command, hence the \'?\' in the JSON. The movement ahead is not covered in the JSON structure provided, thus not in complete conformity.']
Rotate to the left and proceed forward, covering a distance of 3 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['2; The natural language command partially matches with the JSON structure. It covers the rotate action correctly, indicating a counterclockwise rotation. However, it does not specify the angular_velocity and angle parameters which are necessary keys in the JSON structure. Additionally, the command asks for a forward movement over a distance of 3 meters, which is not reflected at all in the given JSON structure.']
Go left and move straight ahead for 3 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}};['2; The command and the JSON structure only partially match. There is no mention of a "go left" action in the JSON, hence no action for "rotate" could be implemented, but the "move" part of the command is correctly represented.']
Move at a speed of 2 meters per second for 5 seconds.,{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meter"}};['4; The JSON structure correctly represents the action "move" but the calculation of distance via speed*time is not specified in the original command which is why the distance "10" can lead to confusion.']
Travel with a velocity of 2 meters per second for a duration of 5 seconds.,{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meter"}};["3; The natural language command specifies a 'duration' of travel, but this is not reflected in the given JSON structure. In the JSON, distance has been calculated by assuming that the robot is intended to move at the given velocity for the given duration (distance = speed * time). However, this assumes that 'duration' and 'distance' are interchangeable, whereas the ontology does not support this. Therefore, while there is a general match in the type of action (movement) and some of the parameters (linear speed), the command does not fully conform to the sample ontology. Hence, the conformity score is 3."]
Maintain a pace of 2 meters per second for a period of 5 seconds.,{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meter"}};["4; The natural language command corresponds to the JSON structure of 'move' action. 'linear_speed' matches with the specified rate of 2 meters/sec, 'distance' can be calculated from the speed and time given so the value of 10 meters is reasonable, 'is_forward' is assumed true since forward direction was indicated by 'maintain a pace'. However, 'time' as a parameter was mentioned in the command but it does not exist in the JSON structure."]
Perform movement with a speed of 2 meters per second over a span of 5 seconds.,{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meter"}};['3; The linear speed and the direction of movement are correctly represented in JSON. However, the distance parameter is misrepresented. The command mentions the duration of the movement, not the distance. Therefore, the JSON provides different information (distance) than what was stated in the command.']
Cover a distance at 2 meters per second for a time period of 5 seconds.,{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meter"}};['4; The natural language command matches with the JSON structure in terms of action ("move") and parameters like "linear_speed" and its unit but it doesn\'t specify the "is_forward" and "distance" parameters which are assumed to be true and 10 respectively based on the command stipulation. The command also brings up a time period which is not represented in the JSON structure.']
Rotate clockwise by 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};["5; Exactly conform. The natural language command correctly maps to the JSON structure for rotation, including the fact that the rotation should be clockwise and the exact degrees of rotation (180). The angular_velocity's value is not specified in the command, and hence, a null value in the JSON is accepted."]
Rotate by 180 degrees in a clockwise direction.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['4; The JSON structure corresponds to the natural language command with the correct "action" value of "rotate" and the "is_clockwise" parameter correctly set as true. The angle (180) is also correctly captured in the JSON. But the "angular_velocity" is null in the JSON while it isn\'t specified in the command, it would be more appropriate to assume a reasonable value instead of null.']
Perform a clockwise rotation of 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform.']
Turn 180 degrees in a clockwise manner.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform.']
Rotate in a clockwise fashion, making a 180-degree turn.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform. The natural language command perfectly fits with the JSON structure, all the required parameters (is_clockwise, angle, unit) are present although the "angular_velocity" is not specified it is accepted as it is not specified in the natural language command.']
Move forward for 4 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Proceed straight ahead, covering a distance of 4 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The JSON structure accurately represents the command to move straight ahead for a distance of 4 meters. All needed parameters (distance, is_forward, unit) have been included and are correctly represented.']
Advance forward, spanning 4 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}};['4; The command is correctly converted into JSON, but the "linear_speed" value is not given in the natural language command and maintained as 1 in JSON, which is a reasonable value but not specifically mentioned.']
Take 4 steps in the forward direction.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "step"}};['2; The natural language command partially matches with the JSON structure. The "move" action is correct, and "is_forward" parameter aligns well. However, the "linear_speed" parameter doesn\'t have a corresponding value in the natural language command, in addition, "unit": "step" is not an acceptable unit in the given ontology. Moreover, the use of "steps" as a distance unit in command is not in conformity with the sample ontology which uses "meter".']
Travel a distance of 4 meters, moving in the forward direction.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The natural language command precisely instructs to move in a forward direction for a distance of 4 meters, fitting perfectly with the JSON structure. Irrespective of the linear speed value being different, it is considered acceptable as it is a reasonable value and is not specified in the natural language command.']
Turn right and move backward for 1 meter.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": false, "unit": "meter"}};['2; There is some matching between the natural language command and the JSON structure. The command is mainly about moving, which matches the "move" action in the JSON structure and the properties such as "linear_speed" and "distance" are also expressed in the command. However, the direction of the movement is backward, which should be indicated with "is_forward: false", but the JSON structure shows "is_forward: true". Furthermore, the command also includes "turn right" which should trigger the "rotate" action in the JSON structure, but this is missing. Thus, the matching is partial and not exact.', '']
Rotate to the right and travel in reverse for a distance of 1 meter.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['2; The JSON structure partially matches with the given command. The rotation action is somewhat referred to in the command, but the angle is not specified. Also, command refers to the action of moving (in reverse), which is absent in the JSON structure. Additionally, the "is_clockwise" parameter in the JSON structure is wrongly denoted as false. According to the command, it should be true as "rotate to the right" signifies a clockwise movement.']
Make a right turn and proceed backwards for a length of 1 meter.,{"action": "rotate", "params": {"angular_velocity": ?, "angle": ?, "is_clockwise": false, "unit": "degrees"}};['2; The "rotate" action is correct, and "is_clockwise" is specified as false corresponding to a right turn, however, there is no angle of rotation provided in the natural language command, therefore ? is an incorrect value for the "angle" field. Further, the command to move backwards also isn\'t converted, and we should have a second JSON corresponding to a "move" action with "is_forward" as false.']
Shift to the right and travel in the opposite direction, covering a distance of 1 meter.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": false, "unit": "meter"}};['4; The command and JSON structure match quite closely, but not perfectly. The "rotate" action is not specified in the command, so the shift to the right part of the command is not accounted for in the JSON. However, the "move" action with the parameters "distance": 1 and "is_forward": false (representing moving in the opposite direction) is correctly reflected in the JSON. The "linear_speed" value of 0.5 is not specified in the command but is a reasonable value.']
Face right and move backwards, covering a distance of 1 meter.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": false, "unit": "meter"}};["4; The JSON accurately represents the action of moving and the parameters of distance and direction from the command. However, the request to 'face right' in the command isn't represented in the JSON structure, causing a slight mismatch."]
Rotate counterclockwise by 45 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}};["5; Exactly conform. The 'rotate' action is correctly invoked and every parameter is defined properly, including 'angular_velocity', 'angle', 'is_clockwise', and 'unit'. The clockwise rotation is correctly identified as false for a counterclockwise movement."]
Rotate anti-clockwise by a 45-degree angle.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -45, "is_clockwise": false, "unit": "degrees"}};["4; The JSON structure matches well with the natural language command, but the angular_velocity given in the JSON structure is not mentioned in the command. Therefore, it's not fully conform."]
Turn left by 45 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Rotate in a counterclockwise direction by 45 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Rotate to the left by 45 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['5; The natural language command fully matches the JSON structure with respect to the action and parameters. The angular velocity is assumed to be 1, which is a reasonable value.']
Move forward for 10 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 10, "is_forward": true, "unit": "second"}};["2.5; The natural language command refers to a duration of movement (10 seconds), while the JSON structure represents the action 'move' correctly, but it uses 'distance' with value 10 instead of a duration. The 'unit' key is having value 'second' which doesn't have a corresponding element in the command. The keys are consistent with the ontology, but the values are not proper match of the command."]
Proceed straight ahead for a duration of 10 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "second"}};["0; The conformity is incorrect since the distance is given as time duration in the natural language command while in the JSON it is interpreted as distance. The unit parameter also doesn't match with the given command. Hence, the JSON is not reflecting the correct translation of the command."]
Advance continuously for a period of 10 seconds.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['0; The JSON structure does not match the natural language command. The command instructs to "advance continuously for a period of 10 seconds" but the JSON indicates a rotation action. The keys and values in the JSON structure are not relevant to the given command.']
Travel forwards for a span of 10 seconds.,{"action": "move", "params": {"linear_speed": null, "distance": null, "is_forward": true, "duration": 10, "unit": "second"}};["1; While the action 'move' matches with the action mentioned in the command and 'is_forward' is correctly set to True, the JSON structure proposes 'duration' as an attribute, which is not present in the sample ontology. Moreover, the attributes 'distance' and 'linear_speed' are set to null in the given JSON. While it is stated that unspecified parameters can take any reasonable value, null does not stand as a reasonable value for these parameters."]
Progress ahead for a time interval of 10 seconds.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['0; The JSON structure does not correspond to the given natural language command. The command talks about moving ahead for a certain time, but the JSON structure is about rotation, indicating an action and parameters completely unrelated to the command.']
Turn left and move at a speed of 1 meter per second for 2 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "meter"}};['2; Only the movement of the robot is reflected in the JSON. The command to turn left is not represented in the JSON.']
Proceed forward for 2 seconds at a speed of 1 meter per second after making a left turn.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}};['1; The natural language command does match in a general sense with the "move" action in the JSON structure(s), but the parameter "distance" is incorrectly used as time in the command and there is no mention or equivalent of "making a left turn" in the JSON structure(s).']
After making a left turn, travel at a velocity of 1 meter per second for a duration of 2 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}};['2; The natural language command has the "move" action which does match but the parameters provided do not match up directly with the JSON structure. There is no "duration" parameter and distance is calculated differently in the JSON. The mention of a "left turn" is also not reflected in the JSON provided.']
Make a left-hand turn and continue moving forward for 2 seconds with a speed of 1 meter per second.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};["2; The natural language command covers both a rotation (turning left) and a move action (moving forward for 2 seconds with a speed of 1 meter per second). However, the given JSON structure only represents the rotate action. There is a mismatch in the 'angular_velocity', therefore the score is 2."]
Rotate to the left and then proceed straight ahead for 2 seconds at a velocity of 1 meter per second.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['1; The natural language command partially matches with the JSON command sequence. It indicates a "rotate" action, which is correctly reflected in JSON. However, the natural language command specifies the direction ("left") but doesn\'t specify the "angular_velocity" and "angle". Moreover, the forward motion command, "proceed straight ahead for 2 seconds at a velocity of 1 meter per second" is not represented in the JSON commands at all.']
Move backward for 3 meters.,{"action": "move", "params": {"linear_speed": -3, "distance": 3, "is_forward": false, "unit": "meter"}};['4; The JSON structure is almost consistent with the natural language command. The keys are correct, however, the "linear_speed" has an absolute value in the JSON structure which might not necessarily represent "moving backward" as stated in the natural language command, as speed is commonly a scalar quantity, not a vector. Nonetheless, the "is_forward" parameter correctly represents the backward movement.']
Go back 3 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": -3, "is_forward": false, "unit": "meter"}};['5; The given command asks to move back 3 meters, and the given JSON structure represents the action "move" with a distance of -3 which technically signifies moving backward, the direction indicated by the parameter "is_forward" is false, and the unit of distance is "meter". The linear speed is not specified, so any value like 0 in this case is acceptable.  Thus, the JSON perfectly matches the given command.']
Reverse your direction and travel 3 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": false, "unit": "meter"}};['4; The natural language command and the JSON are similar, but the natural language command does not specify the linear speed to use in the movement, this is the only part that does not perfectly conform to the JSON structure.']
Retreat for a distance of 3 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": 3, "is_forward": false, "unit": "meter"}};['2; The command partially matches with the JSON structure. However, the "linear_speed" value in the JSON structure is not in conformity with the command "Retreat for a distance of 3 meters.".+', '']
Take 3 steps backwards.,{"action": "move", "params": {"linear_speed": -1, "distance": 3, "is_forward": false, "unit": "step"}};["0; The given JSON's keys do not match with the sample keys as in sample JSON 'linear_speed' is a float value(between 0 and 1), there is no 'is_forward' key and 'unit' of measurement is 'meter' which contrasts from the given 'step' value of unit.", '']
Rotate clockwise by 270 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['4; The JSON structure correctly translates the action to rotate and the direction to be clockwise from the command. It also correctly interprets the angle of rotation to be 270 degrees. However, the angular_velocity is left as null, while the command does not specify this parameter, it is expected to hold a value as per the sample JSON.']
Rotate 270 degrees in a clockwise direction.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['4.5; Almost everything matches. However, the "angular_velocity" value isn\'t specified in the natural language command nor the JSON.']
Perform a clockwise rotation of 270 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['4; The JSON structure generally conforms to the natural language command but the "angular_velocity" parameter is null, which is not explicitly specified in the natural language command. However, it is a reasonable assumption given that no specific velocity was mentioned.']
Turn right by 270 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": false, "unit": "degrees"}};['4; The natural language command somewhat matches the JSON structure. The action "rotate" matches, and the "angle" is specified correctly as 270 degrees. However, the "is_clockwise" value should be True for a right turn, and the "angular_velocity" is not specified in the natural language command, hence its value is accepted as null although it could have been any reasonable value.']
Rotate by 270 degrees in the clockwise direction.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['4; The JSON structure correctly represents the rotation action and the angle of 270 degrees. However, the "angular_velocity" is null which should be any reasonable value as per the command.']
Move forward for 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['4.5; The natural language command corresponds mostly to the JSON structure with the correct action, parameters and unit. The only difference is that in JSON structure the "linear_speed" is given as 1, while it\'s not specified in the natural language command. This is acceptable as per the guidelines, thus it\'s almost exactly conformed but not completely.']
Proceed ahead for a distance of 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['4; Although the exact speed isn\'t provided in the command, the JSON structure could reasonably accept any value for "linear_speed". The command prompts to move forward a certain distance which matches the "move", "distance", "is_forward", and "unit" keys in JSON. However, the action "proceed" isn\'t mentioned in the initial JSON, so this assumption could lower the score.']
Advance 5 meters in the forward direction.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};["3; Partially conform. The action and most parameters match. However, the 'linear_speed' and its value in the JSON format do not correlate with the natural language command as the speed is not mentioned in the command."]
Take 5 meter steps forward.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living Room"}};["0; The natural language command instructs a movement forward for a specific distance but the JSON structure corresponds to a 'go to goal' action for a specified location. The two don't conform."]
Go ahead and travel a distance of 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['4.5; The command describes an action that matches the "move" action in the JSON structures. However, the provided "linear_speed" value in the JSON structure is not specified in the natural language command, hence a minor deduction. The rest of the parameters (distance, is_forward, unit) match perfectly with the command.']
Turn right and move at a speed of 1.5 meters per second for 4 seconds.,{"action": "move", "params": {"linear_speed": 1.5, "distance": 6, "is_forward": false, "unit": "meter"}};["2; The natural language command instructs the addition of 'rotating' & 'moving' actions, but the JSON only covers moving at '1.5 m/s' for '6 meters' and not the turning activity. The 'is_forward' key is 'false' which doesn't conform to the natural language command because 'moving forward' wasn't negated in the command."]
Make a right turn and proceed at a velocity of 1.5 meters per second for a duration of 4 seconds.,{"action": "move", "params": {"linear_speed": 1.5, "distance": 4, "is_forward": false, "unit": "meter"}};['1; The JSON structure does match an action of movement, but the natural language command asked for a rotation (turn) in addition to the movement, this action isn\'t represented in the JSON. Moreover, the "is_forward" parameter is set to false, while the command does not specify whether the motion should be forward or backward. Also, the "distance" is not quite correct as the command mentions duration rather than distance.']
Rotate to the right and advance with a velocity of 1.5 meters per second for a total of 4 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};['3; The natural language command specifies a rotation, which corresponds to the rotate action in the JSON. The direction of the rotation is specified as to the right, which corresponds to the clockwise direction in the JSON. However, the command does not provide enough information to determine the angular_velocity or angle parameters. Additionally, the command also specifies to advance with a velocity, which corresponds to the move action in the JSON. However, this action is not included in the provided JSON, which only contains the rotate action.']
Take a rightward turn and travel at a speed of 1.5 meters per second for a period of 4 seconds.,{"action": "move", "params": {"linear_speed": 1.5, "distance": 4, "is_forward": false, "unit": "meter"}};['1; The natural language command instructs to take a rightward turn and then travel a certain speed and distance. However, the corresponding JSON structure only covers the travel part without any information about turning or rotation. In addition, the "distance" parameter in the JSON should not be the time ("period of 4 seconds"). Therefore, the command and JSON structure only partially match.']
Go right and maintain a speed of 1.5 meters per second for a time span of 4 seconds.,{"action": "move", "params": {"linear_speed": 1.5, "distance": null, "is_forward": true, "unit": "meter"}};['1; The command requests a specific action (turn right), but this action is not reflected in the provided JSON. The JSON structure reflects moving forward at a specified speed rather than turning. The specification about maintaining a speed for a certain time period does not match any parameter in the JSON structure. It should ideally translate to a "rotate" action based on the sample ontology, but no such addition is made in the JSON.']
Rotate counterclockwise by 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform. The natural language command clearly specifies an action of rotation, the direction as counterclockwise  (represented as "is_clockwise": false in the JSON), and the angle of rotation. Although the angular velocity is not specified in the command, it remains a reasonable parameter within the JSON structure.']
Turn left by 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['3; The "rotate" action and the parameter "angle" are matching exactly with the values. However, the natural language command does not specify "angular_velocity" and "is_clockwise" parameters, and the system considered them as null and false respectively which may not be accurate.']
Move in an anti-clockwise direction by 60 degrees.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living Room"}};['1; The JSON structure refers to the action "go_to_goal" and moving to a specific location, namely "Living Room". The natural language command however refers to rotation ("Move in an anti-clockwise direction by 60 degrees") which would correspond to the action "rotate" in the sample JSON keys. Hence, the given JSON does not match the natural language command.']
Rotate in the opposite direction by 60 degrees.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": -60, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform. The "rotate" action is clearly matched, and all parameters are correlated to an aspect of the natural language command. The opposite direction indicates "is_clockwise" is false and the angle is correctly translated to -60 degrees. Although the "angular_velocity" is not specified in the command, the provided velocity of 10 is a reasonable value thus keeping the overall conformity score at 5.']
Perform a counterclockwise rotation of 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['4; There is a strong match between the natural language command and the JSON information. However, "angular_velocity" value is missing in the natural command, therefore the perfect score cannot be achieved.']
Move forward for 2 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The natural language command "Move forward for 2 meters" perfectly aligns with the provided JSON structure, including the "move" action, the "is_forward" parameter set to true and the "distance" as 2 meters. The "linear_speed" value is not specified in the command, but the value in the JSON is accepted as reasonable.']
Proceed straight ahead for a distance of 2 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}};['4.5; The natural language command does match with the JSON in terms of action and parameters like "distance", "is_forward" and "unit". However, the linear speed is not specified in the command and hence the conformity isn\'t exact.']
Advance onward by 2 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}};["4; The command partially conforms to the JSON structure. The natural language command specifies a forward movement and distance, and these are present and correctly assigned in the provided structure. However, the command doesn't specify the linear_speed value."]
Travel straight ahead, covering a distance of 2 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The command corresponds correctly with the provided JSON structure. The intended action of moving, parameters for linear speed, distance, direction and unit all match perfectly.']
Take 2 meters forward.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}};["5; Exactly conform. The natural language command is perfectly represented in the JSON structure. All keys match and the parameter's values from the natural language command are correctly filled in the JSON structure."]
Turn left and move at a speed of 0.5 meters per second for 10 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": false, "unit": "meter"}};["0; The command mentions 'turn left' and 'move at a speed of 0.5m/s for 10 seconds' while the JSON structure only includes the 'move' action. Moreover, the 'distance' value in the JSON does not match the stipulated linear_speed for 10 seconds in the command. Also, there is no orientation or turning action represented in JSON structure, that could represent turning left. Hence, the JSON does not correspond to the command at all."]
Make a left turn and travel at a velocity of 0.5 meters per second for a duration of 10 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": null, "is_forward": false, "unit": "meter"}};['2; The command partially matches the JSON structures. The "action" key in the command corresponds with "move", but the "params" values aren\'t completely matched; \'is_forward\' value is not mentioned, and \'distance\' is available in the command but is mentioned as \'null\' in the JSON while it\'s given indirectly by the speed and duration values in the command. Also, the command instructs to \'make a left turn\' which implies to a "rotate" action, but it\'s not addressed in the given JSON.']
Rotate to the left and proceed forward at a rate of 0.5 meters per second for a period of 10 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};["2; The JSON structure represents the 'rotate' action of the command correctly, but the parameters 'angular_velocity' and 'angle' are not specified. Furthermore, the second part of the command, which is to 'proceed forward at a rate of 0.5 meters per second for a period of 10 seconds', is not represented in the JSON at all. So, the JSON structure only partially matches the natural language command."]
Take a leftward turn and travel with a speed of 0.5 meters per second for 10 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": false, "unit": "meter"}};['1; The natural language command is partially matching with the JSON structure. The direction "leftward" and time for travel "10 seconds" mentioned in the command do not match with any structure keys and values. Also, the direction command cannot be represented in the provided JSON structures. The "linear_speed" parameter matches but "distance" is incorrectly given since the command refers to time, not distance. Moreover, there\'s a mismatch with the "is_forward" parameter as the command suggests moving leftwards, not backwards.']
Face left and advance at a pace of 0.5 meters per second for 10 seconds.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};["1; The natural language command instructs to move in a certain direction at a specified speed for a certain amount of time, but the provided JSON structure has 'go_to_goal' action which instructs to go to a particular location, in this case, kitchen which doesn't match the natural language command.", 'Moreover, there is no JSON structure provided for the "move" action with "time" parameter. The natural language command doesn\'t match perfectly with the given JSON structures.']
Move backward for 6 meters.,{"action": "go_to_}};["0; The natural language command refers to a 'move' action with specific parameters (distance, direction), however the provided JSON structure is related to the 'go_to_goal' action without any relevant parameters present. Therefore, there's no conformity between the command and the JSON."]
Go back 6 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": -6, "is_forward": false, "unit": "meter"}};['4; The JSON structure mostly matches the natural language command, but a value of 0 for "linear_speed" does not correlate with the command to "Go back 6 meters". A value of 0 implies that there is no movement taking place.']
Reverse direction and move 6 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": 6, "is_forward": false, "unit": "meter"}};["4; The JSON structure mostly matches with the command. The action and the parameters 'distance', 'is_forward', and 'unit' are consistent with the command. However, the 'linear_speed' value doesn't match since it's not mentioned in the command and reasons can't be assumed to make it 0."]
Retreat for a distance of 6 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": 6, "is_forward": false, "unit": "meter"}};['4; The JSON structure aligns with the command, as it involves the action "move" and the parameters "distance", "is_forward", and "unit" are correctly specified. However, the "linear_speed" key is set to 0, which is not described in the natural language command. The command also does not specify the bot\'s speed of retreat, so this key should not be considered non-conforming.']
Travel in the opposite direction and cover a distance of 6 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 6, "is_forward": false, "unit": "meter"}};['5; The natural language command exactly corresponds to the JSON structure information, follows the command and parameters keys in the sample ontology and all necessary information (action, is_forward, distance, unit) is present. The only unspecified value in the command - linear speed - is filled with a reasonable value (0.5) in the JSON.']
Move forward for 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['4; The JSON structure correctly represents the command for moving forward for a certain distance, which in the natural language command is 5 meters. However, the "linear_speed" parameter value is not specified in the natural language command. The JSON structure assumes a linear speed of 1 which can be considered a reasonable value. Therefore, it\'s almost a perfect match but we cannot confirm the \'linear_speed\' value from the command so a point is deduced.']
Proceed straight ahead for a distance of 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['5; The JSON structure matches the natural language command correctly: the action "move" is specified, a forward movement is implied, and a distance of 5 meters is stated. The provided linear speed is a reasonable value.']
Advance by 5 meters in a forward direction.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['4; The naturals language command matches the "move" action in the JSON structure, but the "linear_speed" value does not match because it was not specified in the command and the score is based on the assumption that any reasonable value in the JSON is accepted.']
Go ahead for a span of 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['4; The natural language command matches with the JSON structure in the context of moving forward for a certain distance. However, the "linear_speed" doesn\'t match since it\'s not provided in the natural language command, so a score of 4 is given.']
Cover a distance of 5 meters by moving forward.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Rotate counterclockwise by 90 degrees.,Consider the following ontology:{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};["0; The command calls for a rotation, but the provided ontology only includes actions relating to 'go_to_goal' and doesn't include 'rotate'. Therefore, the command does not conform to the JSON structure."]
Turn 90 degrees counterclockwise.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Rotate in a counterclockwise direction by 90 degrees.,Consider the following ontology:{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['0; The provided command is related to the "rotate" action which is not provided in the JSON structure. Hence, the given command can not be converted into the provided JSON information']
Rotate anti-clockwise by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -90, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform. The command \'Rotate anti-clockwise by 90 degrees.\' is perfectly represented in the provided JSON structure. The action "rotate" corresponds to the action. The rotation angle of 90 degrees is represented. The direction of rotation is represented through "is_clockwise" key with its value false indicating the anti-clockwise direction. The "unit" of the angle is correctly converted into \'degrees\'. Therefore, the natural language command perfectly conforms to the provided JSON structure.']
Make a 90-degree counterclockwise rotation.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};["4; Command partially conforms. The given natural language command and the JSON structure both include a rotation as the action to be performed. Therefore, the parameter `is_clockwise` is correctly interpreted from the command as `false`. The `angle` parameter is also consistent at 90 degrees. However, the parameter `angular_velocity` is null in the JSON structure but not specified in the natural language command. While this could be a reasonable value, without explicit command for it, we cannot be sure it's correct."]
Stop.,Consider the following ontology:{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['0; The natural language command \'Stop\' does not match any of the JSON structures provided - neither "go_to_goal", "move", nor "rotate". The given commands in the JSON structures involve navigating or moving in some way, but no JSON structure for the \'stop\' action is defined in the given ontology.']
Cease.,Consider the following ontology:{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['0; The natural language command "Cease." does not match with any of the provided JSON structures. The action specified in the command does not exist in any of the sample keys in the JSON structures.']
Halt.,Consider the following ontology:{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['0; The command "Halt." doesn\'t match any of the JSON structure(s). Any recognizable action or parameters mentioned in the command do not align with the existing keys in the sample ontology.']
Pause.,{"action": "rotate", "params": {"angular_velocity": 0, "angle": 0, "is_clockwise": false, "unit": "degrees"}};["1; The command 'Pause' does not conform at all to the given JSON. Although it's somewhat represented in JSON as 'rotate' action with all values nullifying any movement, there is no 'pause' action in the JSON structure. The Natural Language Command and the JSON don't match."]
Terminate.,Consider the following ontology:{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['0; The natural language command "Terminate" does not match nor conform with any of the provided JSON structures in the sample ontology.']
Reverse for 2 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The provided JSON structure does align to the "move" action in the ontology but the parameter "is_forward" has been rightly set to \'false\' as the command refers to reversing. However, the command doesn\'t provide any information on \'linear_speed\' nor \'distance\' but it does mention a time frame for the move, which is not reflected in the given JSON structure.']
Reverse for a duration of 2 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The natural language command implies a reverse action, the "move" action is correct, and "is_forward" is also correctly flagged as false to indicate a backwards movement. However, the command indicates a time duration but the JSON structure has no key related to time. Furthermore, "linear_speed" and "distance" in the JSON parameters are 0 which does not represent movement.']
Go back for 2 seconds.,{"action": "move", "params": {"linear_speed": undef, "distance": -2, "is_forward": false, "unit": "second"}};['1; The natural language command partially matches the JSON structure with the action "move". However, the "distance" key in the JSON structure is used incorrectly. It should represent the spatial distance for the action of moving, instead of time duration which is represented as "2 seconds" in the command. Also, the "linear_speed" key does not match with the command because it is not mentioned in the natural language command. Therefore, the conformity is low.']
Move in reverse for 2 seconds.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['0; The natural language command indicates movement in reverse for a specified time, but the JSON structure describes a rotational action with specified parameters, not a reverse movement. Thus, there is no conformity.']
Go in the opposite direction for 2 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "second"}};['3; The natural language command partially matches with the JSON structure. The command specifies to move in the opposite direction implying "is_forward" should be False. The duration of 2 seconds is translated into the JSON but not in the exact parameters; it is put under "unit". However, "distance" and "linear_speed" should not be 0 as it\'s assumed that there will be movement in the opposite direction and speed is not specified in the command.']
Turn left and move forward for 10 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}};['2; The command asks for two actions: a rotation (turn left) and a movement (move forward for 10 meters). However, the JSON only reflects the movement part of the command. The rotation part is not represented in the given JSON structure.']
Proceed forward for a distance of 10 meters after making a left turn.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}};["2; The JSON aligns with the command 'making a left turn' by specifying rotation parameters. But the action 'proceed forward for a distance of 10 meters' is not represented in the provided JSON structure."]
Make a left-hand turn and continue straight ahead for a distance of 10 meters.,{"action": "rotate", "params": {"angular_velocity": ?, "angle": ?, "is_clockwise": false, "unit": "degrees"}};['2; Part of the command has been correctly converted to JSON format with the action "rotate" and a correct value for "is_clockwise". However, the command to continue straight for a distance of 10 meters has not been converted into JSON format, hence the JSON structure is incomplete. Furthermore, the angular_velocity and angle parameters are missing from the JSON.']
After turning left, continue moving straight ahead for a total of 10 meters.,{"action": "move", "params": {"linear_speed": null, "distance": 10, "is_forward": true, "unit": "meter"}};["4; Although the natural language command does mention the movement action and distance, it fails to mention the linear_speed parameter for 'move' action and doesn't address rotating before continuing straight. The JSON structure also should ideally have mentioned some angular rotation as per natural command."]
Execute a left turn and then travel forward for a distance of 10 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['4; Partially conform. The natural language command is asking for a rotation (left turn) which is represented correctly in the JSON structure with "action": "rotate" and "is_clockwise": false. However, there are no specific values given for "angular_velocity" and "angle" in the natural language command, so the \'null\' values in the JSON structure are acceptable. The command also mentions traveling forward for a distance which is not represented in the JSON structure, hence the score is not 5.']
Move backward for 3 seconds.,{"action": "move", "params": {"linear_speed": -1, "distance": 0, "is_forward": false, "unit": "meter"}};['2; The natural language command is partially matching with the JSON structure. The action "move" and the direction (backward), which implies "is_forward": false are correct. However, the command mentions moving for a certain time which is not considered in the JSON. The JSON considers distance and linear speed, not time. Also, the negative value for the "linear_speed" is not appropriate since moving backward is already represented by "is_forward": false.']
Go back for a duration of 3 seconds.,{"action": "move", "params": {"linear_speed": null, "distance": null, "is_forward": false, "unit": "second"}};['2; The action "move" is correct and the direction "is_forward": false also matches with the command "Go back". However, the parameter of "duration" is not defined in the JSON structures. Instead, distance and linear speed parameters are used for the action of moving. The "unit" in the command refers to time (seconds) but in the JSON it refers to the unit of distance (meter).']
Reverse movement for a period of 3 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};["1; The JSON structure corresponds to the move action, which is in line with the command, but the parameters details mentioned in command (particularly time/period of movement) doesn't match with parameters given in the JSON structure. The JSON structure has distance instead of period or time for moving in reverse."]
Retreat for 3 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['2; Partial match. The action type "move" and the parameter "is_forward": false are correctly interpreted from the command. However, the command mentions the parameter of time (3 seconds) which is not recognised or represented in the JSON. Furthermore, the JSON provides values for "linear_speed", "distance", and "unit" which do not conform with the natural language command.']
Take a step back for a duration of 3 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": -1, "is_forward": false, "duration": 3, "unit": "second"}};['0; The natural language command requests a backward movement action but none of such action exists in the provided sample JSON structures. The action "move" could be inferred but the ontology does not provide any "duration" parameter for the "move" action. The mentioned parameter "duration" is not amongst the sample keys hence the score is zero.']
Rotate clockwise by 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform. The command specifies to rotate clockwise by 180 degrees, and the JSON structure correctly includes the action "rotate", with parameters indicating a clockwise rotation (is_clockwise: true), angle being 180, and unit as degrees. Even though angular_velocity is not specified in the command, it is allowed to be any reasonable value (null in this case).']
Perform a 180-degree clockwise rotation.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};["5; Exactly conform. The command is matched perfectly with the JSON structure. The action is to rotate, angle is 180, rotation is clockwise and the unit is in degrees. The angular_velocity value is reasonable as it's not specified in the command."]
Rotate in a clockwise direction by 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform.']
Turn right and rotate 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": false, "unit": "degrees"}};['3; The JSON structure is correctly matching the action "rotate" and has the correct parameters. However, the "is_clockwise" value is incorrectly set to false while the natural language command instructs to turn right which should result in "is_clockwise": true.']
Execute a rotation of 180 degrees in a clockwise direction.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['4; The JSON structure mostly conforms to the natural language command. The "action" key accurately reflects the action to be performed (rotate). The "angle" and "is_clockwise" parameters match the command\'s specifics perfectly. The "unit" key is correctly set to "degrees" as requested. However, the "angular_velocity" is not specified in the natural language command, hence the null value is acceptable but does leave it slightly incomplete with respect to the command.']
Turn right and move forward for 8 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};["2; The angle is correctly indicated while direction of rotation does not match given that to turn right requires a clockwise rotation. However, the rotation speed isn't mentioned in the natural language command and would be needed for optimal specification. The part of moving forward 8 meters is missing entirely from the action, thereby, leading to an incomplete JSON structure."]
Proceed forward for a distance of 8 meters after making a right turn.,{"action": "move", "params": {"linear_speed": 0.25, "distance": 4, "is_forward": false, "unit": "meter"}};['1; The natural language command instructs to move forward for a distance of 8 meters and to make a right turn. However, the JSON structure makes a move action with a distance of 4, not 8, is in backward direction rather than forward and it doesn’t mention about any rotation or turn. So, the JSON structure misrepresents the actual command.']
Take a right turn and continue moving straight ahead for a duration of 8 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; The command specifies to take a right turn, which partially matches with the action "rotate" in the JSON structure. However, the angular_velocity is not specified in the command, and the "angle" in the JSON structure is not set to the correct direction as stated in the command which is right. On the other hand, the distance or the action of moving straight for 8 meters wasn\'t converted to JSON.']
After making a right-hand turn, advance 8 meters in a forward direction.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};["3.5; The command partially matches the JSON structure. The rotate action and clockwise parameters are properly specified. However, the command also includes an action to move forward which is not represented in the JSON structure. The specific angle and unit of rotation are correctly interpreted but the angular_velocity is not mentioned in the command so it's accepted as null."]
Rotate to the right, then travel straight ahead for a distance of 8 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};['2; The natural language command partially matches the JSON structure for the \'rotate\' action without specifying values for angular_velocity or angle. However, there is no matching action for "travel straight ahead for a distance of 8 meters" in the provided JSON structures.']
Move forward for 1 meter and stop.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};["4.5; The natural language command matches with the JSON command structure, but it only refers to the 'move' action. The 'stop' command that is stated in the natural language command is not addressed in the JSON structure."]
Proceed straight ahead for a distance of 1 meter and come to a halt.,{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}};['4; The JSON structure correctly represents the command to move straight ahead for a distance of 1 meter. Although the command doesn\'t specify a speed, a reasonable value of 1 is used in the JSON. However, the command to "come to a halt" is not represented in the JSON structure.']
Advance one meter ahead and then come to a stop.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};['4; All keys in the JSON command match with the sample ontology. "action" is "move" and parameters "linear_speed", "distance", "is_forward", "unit" are present. The "unit" is even correctly used as "meter" however, there is an extra action implied in the command ("come to a stop") that is not represented in the JSON structure.']
Travel in the forward direction for a length of 1 meter and then cease movement.,{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}};['4.5; The natural language command and JSON information match substantially. However, the command does not specify the "linear_speed", but the JSON structure includes it and it\'s acceptable as the speed can be a default or an arbitrary value.']
Move ahead for a distance of 1 meter, and then bring the movement to a stop.,{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}};['5; The natural language command directly matches the action "move" in the JSON structure, with parameters having exact values. The JSON structure precisely portrays the command, i.e., moving forward a distance of 1 meter. Even the unspecified parameters like "linear_speed" and "is_forward" in the command are reasonably valued in the JSON structure.']
Rotate counterclockwise by 135 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 135, "is_clockwise": false, "unit": "degrees"}};['5; The JSON structure perfectly matches the natural language command. The rotation is defined, the angle and the direction of rotation (counterclockwise) are explicitly specified. Although the "angular_velocity" is not stated in the command, its presence in JSON without a definitive value still conforms to the conditions mentioned.']
Rotate 135 degrees counterclockwise.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 135, "is_clockwise": false, "unit": "degrees"}};['4; The JSON command matches almost perfectly with the description given. "Angular_velocity" is not specified in the command, but this is accepted because this value was not specified in the natural language command. Other than, it matches well with the action of rotating and angle, but doesn\'t specify if it is clockwise or not in the parameters, which is mentioned in the command as counterclockwise.']
Turn 135 degrees counterclockwise.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 135, "is_clockwise": false, "unit": "degrees"}};['4; The JSON structure matches the natural language command. The action "rotate" is correctly used with the correct "params". However, the "angular_velocity" value is not provided in the command and it\'s set as null in the JSON, it could potentially have a reasonable default value instead of null.']
Rotate anticlockwise by 135 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 135, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform. The command request is a rotation, which matches the given "rotate" action in the JSON. The rotation direction requested is anticlockwise, corresponding to "is_clockwise": false as per the sample keys. The rotation angle matches exactly with the value in the JSON. "angular_velocity" value is not specified in the natural language command and the JSON has null value for that key, which is reasonable.']
Perform a 135 degree counterclockwise rotation.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 135, "is_clockwise": false, "unit": "degrees"}};['5; The command perfectly matches the JSON structure. The action is "rotate", the angle is correctly given as 135, the rotation is specified to be counterclockwise which translates to "is_clockwise": false in the JSON, and the unit is correctly given as "degrees". The angular_velocity is not specified in the command but that is acceptable according to the instruction.']
Move backward for 6 meters.,{"action": "go_to_}};['0; The JSON structure does not match the command given. The action in the command is "move" but the JSON action is "go_to". Furthermore, \'6 meters\' and \'backward\' direction aren\'t reflected in the JSON structure at all.']
Go in reverse for a distance of 6 meters.,{"action": "rotate", "params": {"angular_velocity": 0, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['0; The JSON structure does not match the given natural language command. The command is asking for the entity to move in reverse for a certain distance, while the JSON is instructing a rotation action.']
Take 6 steps back.,{"action": "move", "params": {"linear_speed": 0.5, "distance": -6, "is_forward": false, "unit": "meter"}};['4; The natural language command corresponds well with the JSON structure, but the "linear_speed" parameter was not specified in the command and is therefore arbitrary. Also, the command specifies "steps" while the JSON uses "meters" as unit, this difference is accepted for the scoring but there\'s a clear disparity between them.']
Retreat 6 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": -6, "is_forward": false, "unit": "meter"}};['0; The natural language command asks the machine to retreat, which corresponds to the action "move" in the sample ontology, however, the JSON structure provided does not match the command. The JSON structure includes a "linear_speed" of 0, which would imply no movement, and the "is_forward" key is set to false instead of true, which would indicate moving backwards. Thus, the JSON structure does not properly represent the command.']
Travel 6 meters in the opposite direction.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living Room"}};['1; Only the "action" keyword matches in the natural language command and the provided JSON structure, but there are no matching elements or values within the "params" keyword. The natural language command specifies a direction ("opposite") and a distance ("6 meters"), which do not correspond to the given JSON\'s parameters (which specify a location). The command implies a movement which doesn\'t align with the provided JSON command "go_to_goal".']
Turn left and move forward for 4 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 4, "is_forward": true, "unit": "second"}};['1; The JSON structure provided does correspond to the moving action mentioned in the natural language command as "move forward for 4 seconds." However, there is no indication or command in the JSON for turning left as mentioned in the natural language command. The time unit "seconds" while correct in a grammatical sense, is not part of the original sample ontology, this could lead to confusion as the sample ontology makes references to distance in a spatial sense, not temporal.']
Take a left turn and proceed straight ahead for a duration of 4 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};["1; The action 'rotate' in the JSON structure could possibly match with the 'left turn' in the natural language command, however, the parameters for 'angular_velocity' and 'angle' in the JSON structure are declared as 'null', additionally, the 'is_clockwise' key is given a value as 'false' which is not mentioned in the natural language command, therefore, matching is only partial. The 'proceed straight ahead for a duration of 4 seconds' part of the command has no match in the JSON structure."]
Make a leftward turn and continue moving forward, maintaining the motion for 4 seconds.,{"action": "rotate", "params": {"angular_velocity": , "angle": , "is_clockwise": false, "unit": "degrees"}};['1; The natural language command and the JSON structure do not match adequately. The command describes rotating and moving forward, but the JSON structure only includes the action of rotation ("rotate"). Additionally, the "is_clockwise" parameter is correctly interpreted as false for a leftward turn but the unspecified "angular_velocity" and "angle" parameters are not mentioned in the command. The duration of the movement is also not covered by the provided JSON structure.']
Pivot to the left and advance forward for a period of 4 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['2; The command partially matches with the JSON structure. The "rotate" action and "is_clockwise" parameter matches, but the command says nothing about "angular_velocity" or "angle". Furthermore, the JSON does not account for the command\'s instruction to move forward for a certain amount of time.']
Rotate in a leftward direction and proceed straight ahead, ensuring that the movement lasts for 4 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['0; The specified natural language command does not only concern rotating (the specified action in JSON structure), but also the action of moving forward which is not present in the provided JSON. The JSON structure also lacks information about "the movement lasting for 4 seconds". The rotation direction is also not a leftward direction, the JSON specifies "is_clockwise", not direction.']
Rotate clockwise by 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": true, "unit": "degrees"}};['5; The natural language command perfectly matches with the JSON information: the action "rotate", the angle "60", the direction "clockwise", and the unit "degrees" are all correctly reflected in the JSON structure. The data key "angular_velocity" not being mentioned in the command is acceptable as the command allows for any reasonable value.']
Turn 60 degrees in a clockwise direction.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform.']
Rotate the object by 60 degrees in the clockwise direction.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform. The natural language command matches perfectly with the JSON structure as the action, rotation, rotation direction (clockwise) and the degree of rotation are all mentioned. Although the "angular_velocity" isn\'t specified, it is not a must in this context.']
Move in a clockwise direction, making a 60 degree turn.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform.']
Rotate 60 degrees in a clockwise manner.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform. The natural language command matches perfectly with the provided JSON. The action, angles, direction and the unit elucidated in the command find exact match in the JSON structure.']
Move forward for 7 meters and stop.,{"action": "go_to_goal", "params": {"location": "Kitchen"}};['1; The natural language command involves moving forward for a specified distance, which is better aligned with the "move" action in JSON. The provided JSON structure, however, refers to a "go_to_goal" action to move to the kitchen which isn\'t mentioned in the natural language command. Therefore, they don\'t match substantially.']
Proceed straight for a distance of 7 meters and come to a halt.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 7, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Advance ahead covering a distance of 7 meters and then cease movement.,{"action": "move", "params": {"linear_speed": null, "distance": 7, "is_forward": true, "unit": "meter"}};['5; The natural language command exactly matches the JSON structure for the "move" action. Although "linear_speed" is not specified in the natural language command, any reasonable value (in this case, null) is accepted.']
Go forward 7 meters and then come to a stop.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 7, "is_forward": true, "unit": "meter"}};['5; The natural language command matches perfectly with the JSON structure. The command to move forward is translated to the "move" action with proper parameters set, like "is_forward": True, "distance": 7 and "unit": "meter". The given speed is a reasonable default. The "come to a stop" part is implied with the distance covered.']
Move straight ahead, covering a distance of 7 meters, and then halt.,{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}};["5; The natural language command perfectly matches the JSON structure with all the required parameters being mentioned, including the action to be taken (move), the direction of movement (forward), the unit of measurement (meters), and the distance to be covered (7 meters). Therefore, it's an exact conform."]
Reverse for 5 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};["3; The natural language command indicates a specific time (5 seconds) for which the action should be performed. However, there is no parameter available in the JSON structure to represent this. Also, linear speed and distance values are 0 in the JSON whereas such information is not provided in the command. The action 'move' and 'is_forward' set to false are however correctly interpreted."]
Reverse for a duration of 5 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The JSON structure has fields with the action "move" and parameter "is_forward" set to false, which matches the command\'s instruction to "reverse". However, the command specifies a duration of 5 seconds, which is not represented in the JSON. Additionally, the JSON includes extra information not specified in the command with the fields "linear_speed", "distance", and "unit", all of which have values not mentioned in the command.']
Perform a 5-second reverse.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};["2; The action type 'move' in the JSON corresponds correctly to the 'perform a reverse' command, as well as the 'is_forward' key set to 'false'. However, the linear_speed and distance in the JSON don't conform to the '5-second' specification in the command. Also, time duration isn't a measure in the ontology provided."]
Execute a reverse motion for 5 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The natural language command specifies a "reverse motion for 5 seconds" but the JSON structure provided corresponds more to just a general "move" action. Additionally, the "5 seconds" part is not translated into the JSON structure. The "is_forward": false does match the "reverse" direction indicated in the command, though.']
Go backwards for a period of 5 seconds.,{"action": "move", "params": {"linear_speed": -0.5, "distance": 0, "is_forward": false, "unit": "meter"}};['2; The natural language command instructs to go backwards without specifying a specific distance but a time period of 5 seconds. However, JSON structure shows moving with a specific linear speed and distance instead of time. "is_forward" is correctly set as false. But the direction ("-0.5" linear speed for backward) does not exist in the sample ontology. It should be either forward ("True") or backward ("False") irrespective of speed. Concluding, the JSON partially conforms to the command.']
Turn right and move forward for 9 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; The rotation direction in the command is correct and matching with the JSON structure. However, the part of the command that states "move forward for 9 meters" is not represented in the provided JSON structure.']
Move forward for 9 meters after turning right.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": null, "unit": null}};['1; The natural language command request both rotation and movement. However, the JSON structure only presents rotation details but without any parameter values. The movement action details are completely missing in the JSON.']
After turning right, proceed ahead for a distance of 9 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 9, "is_forward": true, "unit": "meter"}};['3; The JSON structure matches with the sample keys and the parameters provided in the command. However, the command also includes a rotation action ("turning right") that is not represented in the JSON structure. So partial conformity is achieved.', '']
Take a right turn, then continue moving straight for a distance of 9 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['4; The JSON command correctly identifies that the natural language command is a rotate action. The action and parameters mostly correctly match the natural language command, particularly the turning right or anti-clockwise represented as "is_clockwise": false and 90 degrees angle. However, the JSON does not include the parameter for the action of \'moving straight for a distance of 9 meters\'. Therefore, only part of the natural language command is represented.']
Make a right turn and travel forward for 9 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; Partial match. The natural language command dictates to rotate but does not specify the angular velocity, however, the command also mentions moving forward 9 meters, which is not represented in the provided JSON structure.']
Move forward for 2 seconds and stop.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 0, "is_forward": true, "unit": "meter"}};['1; The command is not directly linked to the JSON structure. The command instructs to move forward for a specific time (2 seconds) and stop, but the mentioned JSON structure does not provide a parameter to specify the duration of the move action. The "distance" parameter is set to 0 which contradicts the forward movement. The command also does not specify the linear speed or the distance which are present in the JSON structure. The only matching part is the forward movement.']
Proceed in the forward direction for a duration of 2 seconds, then come to a stop.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 0, "is_forward": true, "duration": 2, "unit": "second"}};['1; The JSON structure does not completely align with the natural language command. The command mentions "come to a stop" but there is no relevant parameter in the JSON structure. Also, the JSON structure includes parameters for speed and distance that aren\'t mentioned in the command. Additionally, the "duration" parameter in the JSON structure does not exist in the sample ontology.']
Go ahead for 2 seconds and then halt.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['0; The natural language command talks about moving forward for 2 seconds and then stopping, which does not match with the provided JSON structure that represents rotation action.']
Advance for a period of 2 seconds and then cease movement.,{"action": "move", "params": {"linear_speed": null, "distance": null, "is_forward": null, "unit": null}};['1; The command is asking for an action that isn\'t properly defined in the provided JSON structures. There is no parameter to indicate a time period for movement in the JSON. Even though "move" is a valid action, the parameters required by the command do not match with the JSON structure, hence low conformity.']
Travel forward for 2 seconds before stopping.,{"action": "move", "params": {"linear_speed": null, "distance": null, "is_forward": true, "duration": 2, "unit": "second"}};["2; The JSON structure represents the action 'move' and includes 'is_forward' parameter same as in the natural language command. However, the natural language command does not specify 'linear_speed' and 'distance' and the JSON includes an additional 'duration' parameter which is not included in the sample keys of the JSON ontology."]
Rotate counterclockwise by 30 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -30, "is_clockwise": false, "unit": "degrees"}};['4; The natural language command conforms mostly to the JSON structure. The action "rotate" is correctly identified, and the "angle" parameter is correct. The command specifies a counterclockwise rotation, which correctly corresponds to "is_clockwise": false in the JSON. However, the "angular_velocity" isn\'t specified in the command, so the specific value of 1 in the JSON isn\'t directly derived from the natural language command.']
Turn 30 degrees counterclockwise.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -30, "is_clockwise": false, "unit": "degrees"}};['4; The JSON structure matches the command closely with the action of rotation and specified angle. However, the angular_velocity is arbitrarily set in the JSON structure and not provided in the command. Therefore, it is not a perfect match.']
Rotate in the anticlockwise direction by 30 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit":}};['2; The action command \'rotate\' matches in both JSON and the natural command. However, the angle value is not consistent as the natural command says \'30 degrees\' whereas the JSON information says \'90\'. Secondly, the \'unit\' does not specify any unit in the JSON whereas rotation action implies \'degrees\' or \'radians\'. "angular_velocity" also doesn’t match the command. The direction \'anticlockwise\' is rightly interpreted as "is_clockwise": false.']
Rotate to the left by 30 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 30, "is_clockwise": false, "unit": "degrees"}};['4; The JSON command correctly corresponds to the "rotate" action and specifies the angle as 30 degrees, consistent with the natural language command. However, the direction of the rotation is also correctly defined as anti-clockwise since left rotation is usually anti-clockwise. The "angular_velocity" value was not specified in the natural language command, but its presence in the JSON command is acceptable. The reason for not giving a score of 5 is due to the inconsistency in angular velocity that was not specified in the natural language command.']
Rotate in a counterclockwise direction, making a 30-degree turn.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": 30, "is_clockwise": false, "unit": "degrees"}};['4; The natural language command specifies a "rotate" action, an "angle" parameter of 30 degrees and a "is_clockwise" parameter of False, which all match with the JSON structure. However, the value of "angular_velocity" in the JSON structure is 10, whereas the natural language command does not provide a specific angular velocity. This divergence does not significantly impact conformity as it is a reasonable arbitrary value.']
Reverse for 4 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 4, "is_forward": false, "unit": "meter"}};['5; Exactly conform.']
Move back for a distance of 4 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 4, "is_forward": false, "unit": "meter"}};['4; The natural language command mostly matches up with the JSON structure. The action "move" and the parameters "distance" and "unit" correspond directly to the command\'s instruction to "move back for a distance of 4 meters". However, the command does not specify "linear_speed", so the given JSON value of 0.5 is tentatively acceptable. The direction of the movement is implied to be backward from the command but is not explicitly mentioned, hence JSON uses "is_forward": false which corresponds but is not an exact match.']
Go in reverse for a span of 4 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": 4, "is_forward": false, "unit": "meter"}};["4; The command matches the JSON structure quite well, instructing a movement for a certain distance. However, the 'linear_speed' is not specified in the command, but is set to 0 in the JSON which would imply no movement, and it should be any reasonable value but zero. Therefore, it's not a perfect match."]
Retreat 4 meters in the opposite direction.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['0; The given command suggests a specific move (retreat) for a specific distance in the opposite direction, but the JSON structure corresponds to going to a specific location (Kitchen) which is not mentioned in the command.']
Travel backwards, covering a distance of 4 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": 4, "is_forward": false, "unit": "meter"}};["4; The action 'move' and its parameters match the natural language command, the 'distance' and 'unit' parameters specifically mentioned in the command and the 'is_forward' parameter correctly deduced from the command. However, the command does not mention the 'linear_speed', although it is correctly set to 0 in the JSON structure. But it should not be zero as robot cannot move with 0 speed."]
Turn left and move forward for 6 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 6, "is_forward": true, "unit": "second"}};['1; The command indicates that the bot needs to perform 2 actions - "Turn left" and "Move forward for 6 seconds". However, the JSON structure only contains one action, which is "move". Also, the units of the "distance" parameter in the JSON structure have been misunderstood. The units for moving shouldn\'t be "seconds" and turning isn\'t expressed among the JSON structures.']
Proceed forward for 6 seconds after making a left turn.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 6, "is_forward": true, "unit": "second"}};['2; The JSON structure for moving forward matches with the command, but the command also includes an action of turning left, which is not reflected in the JSON. Therefore, a part of the command has been ignored in the JSON.']
Make a left turn and advance for 6 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['1; The JSON structure only loosely matches the natural language command. The "rotate" action does match "Make a left turn", but the parameters do not fully match. There is no specification for "advance for 6 seconds." Also, the "angular_velocity", "angle" and "is_clockwise" parameters\' values are not specified in the natural language command.']
Move ahead for 6 seconds after turning to the left.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['1; The given natural language command corresponds partially to the "rotate" action in the JSON object. The rotation description is available in the command. However, the JSON representation also includes moving forward, which isn\'t represented in the given JSON structures, thus the low conformity score.']
After veering left, continue straight for 6 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": true, "unit": "second"}};['2; The command tells the robot to veer left and continue straight for 6 seconds. But the JSON structure only represents moving straight with no provision for the "veer left" action. Moreover, time (seconds) is used as a unit in the command instead of distance or velocity as depicted in the JSON structure.']
Move forward for 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};["4; The action and all parameters match perfectly, but the linear speed value in the JSON is not mentioned in the original command. As per instructions, this should not affect the conformity score too much, because it is a reasonable value. However, it's not an exact match."]
Proceed ahead for a distance of 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The natural language command tells the system to move forward for a certain distance, which perfectly matches with the provided JSON structure. All the keys in the JSON structure are present in the sample ontology and all parameter values in the natural language command have been correctly assigned in the JSON.']
Advance straight on and cover a distance of 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};["5; The natural language command exactly matches with the JSON information. The 'action' is set as 'move' which corresponds to advancing straight. The 'distance' parameter is correctly interpreted as 5 and 'is_forward' as true, which indicates moving forward. The speed 'linear_speed' value does not contradict the natural language command, and hence can be accepted as a reasonable value. The 'unit' is correctly set to 'meter'."]
Head forward and travel 5 meters in that direction.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['5; The natural language command translates directly to the JSON structure. It includes the action "move" with all the necessary parameters such as "linear_speed", "distance", "is_forward" and "unit". All values are correctly specified in the JSON structure.']
Move straight ahead and go a distance of 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['5; The command specifies all the keys correctly in the JSON structure like distance, linear_speed, is_forward and the units. Even though the speed is not specified, a value of 1 is reasonable and accepted.']
Turn left and move forward for 2 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "second"}};['2; Partially conform. The command "Turn left" suggests a rotation action that is not present in the provided JSON structure, while "move forward for 2 seconds" aligns with the "move" action. However, the given JSON has distance in units of meters, not seconds.']
Move ahead for 2 seconds after turning left.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};["1; The JSON command refers only to the 'turn left' portion of the natural language command. There is no information reflecting the 'move ahead for 2 seconds' part of the command."]
After turning to the left, proceed forward for a duration of 2 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['2; The provided JSON code partially matches the natural language command. The "rotate" action is implied by "After turning to the left," with "is_clockwise" implied as false since a left turn is anti-clockwise. However, the "angular_velocity" and "angle" are not specified. Additionally, the command to "proceed forward for a duration of 2 seconds" is not reflected at all in the JSON code.']
Take a left turn and then proceed straight for 2 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['1; The natural language command instructs a left turn, which indeed matches the "rotate" action, and the direction "is_clockwise": false is inferred correctly. However, the command further includes a direct action to proceed straight which is absent in the provided JSON structure.']
Make a left turn and continue moving forward for a duration of 2 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['1; The command mentions a turn and moving forward, which would use both the "rotate" and the "move" actions. The provided JSON, however, only covers part of the rotate action and completely lacks the "move" action. Thus, the conformity is low.']
Rotate counterclockwise by 90 degrees.,Consider the following ontology:{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['0; The provided natural language command instructs a rotate action, but the given JSON structure only represents a "go_to_goal" action with "location" as a parameter. Since there is no match between the command and the JSON structure, the conformity score is 0.']
Turn in the opposite direction by an angle of 90 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -90, "is_clockwise": false, "unit": "degrees"}};['4; The JSON structure partially matches to the command. The action in the command and the JSON is to "rotate". However, the "angular_velocity" is given as 1, which is not mentioned in the natural language command. The angle is given as -90, which indicates anticlockwise direction, is correct as "in the opposite direction" implies a rotation in anticlockwise direction. The "is_clockwise" set to false also matches the command "in the opposite direction". The unit is correctly mentioned as "degrees". The missing "angular_velocity" in the command results in a conformity score of 4.']
Rotate anticlockwise by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -90, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Spin to the left by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform. The JSON command matches perfectly with the natural language command by providing rotation action with specified angle and direction. The angular_velocity is not specified in natural language command, but a null value is acceptable.']
Twist counterclockwise by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};["4; The natural language command is almost an exact match to the JSON. The 'angular_velocity' key doesn't have a specific value in the natural language command but is given any reasonable JSON value. However, the 'angle' key value is specified correctly as 90 and 'is_clockwise' key value is correctly set to false indicating a counterclockwise rotation."]
Move backward for 3 meters.,{"action": "move", "params": {"linear_speed": -3, "distance": 3, "is_forward": false, "unit": "meter"}};["4; The natural language command and the JSON structure match in terms of action and parameters like distance and unit. However, in the natural language command, there is no mention of linear speed while this parameter is included in the JSON structure. There is a logical discrepancy in the 'linear_speed' value, where -3 is stated in the JSON. Usually, the speed can't be negative, it semantically represents 'is_forward' as false which is already a separate parameter. This might cause confusion."]
Go in reverse for a distance of 3 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": 3, "is_forward": false, "unit": "meter"}};['4; Mostly conform. The action and parameters match correctly, but the "linear_speed" key in the JSON does not match the natural language command, as a speed was not specified. Additionally, the value of "is_forward" although correct within a common sense reasoning, it was also not explicitly mentioned in the command.']
Travel three meters in the opposite direction.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": false, "unit": "meter"}};['4; The command matches the "move" action but doesn\'t mention the "linear_speed" parameter. All other parameters align with the natural language command.']
Retreat for a distance of 3 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": 3, "is_forward": false, "unit": "meter"}};['5; Exactly conform. The JSON structure perfectly matches the natural language command. The action is "move", and the parameters - distance, unit, is_forward - are correctly specified. The "is_forward": false parameter correctly captures the "retreat" command, which implies moving backward. The linear_speed is not mentioned in the command, hence any reasonable value in the JSON, such as 0, is accepted.']
Reverse your movement and cover a distance of 3 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": false, "unit": "meter"}};['5; Exactly conform. The natural language command directly corresponds to the JSON structure in terms of action and parameters given. The "move" action is performed with a distance of "3" meters in reverse direction ("is_forward": false) which matches perfectly with the given command.']
Turn right and move forward for 1 meter.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['4; The action of rotating is present and the rotation direction is correctly recognized as right which infers to clockwise rotation in the JSON structure. However, the angle is set to 90 degrees in JSON which is not indicated in the natural language command. Also, the move forward action is not represented in the provided JSON.']
Proceed forward for 1 meter after turning to the right.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; The natural language command corresponds partially to the JSON structure. The \'rotate\' action is accurately represented with correct parameters even though \'angular_velocity\' value is not specified in the natural language command. However, the \'move\' action is indicated in the natural language command "Proceed forward for 1 meter" but completely missing in the given JSON structures.']
Take a right turn and continue moving straight ahead for a distance of 1 meter.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; The natural language command asks the system to take a right turn which is represented correctly as a clockwise rotation in the given JSON. However, the "continue moving straight ahead" part of the command is not represented at all in the JSON. It should have been an "action": "move" entry with appropriate parameters like a positive "distance" and "is_forward": true.']
After making a right turn, proceed ahead for 1 meter.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": true, "unit": "degrees"}};['2; Only the "action": "rotate" part of the command is correctly represented in the JSON structure. The command to move "ahead for 1 meter" is not reflected in the provided JSON at all.']
Rotate to the right and then advance for a distance of 1 meter.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};['2; The natural language command requests a "rotate" action which is correctly identified in the JSON structure. However, it also contains a command to "advance" which should be an action "move" with "is_forward" set to true and "distance" is specified as 1 meter, and is missing in JSON.']
Move forward at a velocity of 0.5 meters per second.,{"action": "move", "params": {"linear_speed": 0.5, "distance": null, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Proceed ahead with a speed of 0.5 meters per second.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};["5; Exactly conform. The command matches perfectly with the JSON data structure by correctly identifying the action as 'move' and specifying the 'linear_speed' value as 0.5. The 'distance' is not specified in the command but a reasonable value of 1 is used and the 'unit' is correctly identified as 'meter'. The 'is_forward' parameter is also correctly identified as true."]
Advance with a velocity of 0.5 meters per second.,{"action": "move", "params": {"linear_speed": 0.5, "distance": null, "is_forward": true, "unit": "meter"}};['4; The command corresponds to the JSON structure correctly, but it does not specify the "distance" parameter, which is why the score is not perfect.']
Go forward at a rate of 0.5 meters per second.,{"action": "move", "params": {"linear_speed": 0.5, "distance": null, "is_forward": true, "unit": "meter"}};['4; The natural language command and JSON structure match in the "action" (move) and "linear_speed" (0.5 meters per second). The "is_forward": true also matches with the command to "Go forward". However, the "distance" isn\'t specified in the natural language command, resulting in a \'null\' value in the JSON, meaning not exactly all information is provided.']
Travel in a forward direction at a velocity of 0.5 meters per second.,{"action": "move", "params": {"linear_speed": 0.5, "distance": null, "is_forward": true, "unit": "meter"}};['3; Partially conform. The natural language command matches partially with the JSON information and its conformity with the keys of the JSON structure. The "linear_speed" and "unit" parameters match with the provided command. However the "is_forward" parameter, although implicit, is not explicitly mentioned in the command and the "distance" parameter isn\'t mentioned at all in the natural language command. The "action" keyword also matches.']
Rotate clockwise by 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; The JSON structure accurately represents the natural language command. The action "rotate" and its parameters, especially "angle" 180, "is_clockwise": true, and "unit": "degrees", match perfectly with the command "Rotate clockwise by 180 degrees." Although "angular_velocity" is not specified in the command, it can be any reasonable value and doesn\'t affect the score.']
Perform a 180-degree clockwise rotation.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};["5; Exactly conform. The command 'Perform a 180-degree clockwise rotation.' matches perfectly with the provided JSON structure in terms of action, parameters and their values."]
Turn by 180 degrees in a clockwise direction.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};["5; The natural language command perfectly matches the JSON representation. All key elements like action, angle, is_clockwise and unit have been incorporated properly. Angular_velocity can be any reasonable value as it's not mentioned in the command."]
Rotate in a clockwise manner, completing a 180-degree turn.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['4; The natural language command partially matches the JSON structure. The "action" and "params" with keys "angle", "is_clockwise", and "unit" completely match. However, "angular_velocity" in JSON structure does not have a correspondent in the natural language command.']
Execute a clockwise rotation, rotating by 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform.']
Move forward for 10 meters at a velocity of 2 meters per second.,{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meter"}};['4; Even though the command requests to move forward, for a specific distance and at a specific speed which is all covered in the JSON structure, the speed request in the command is given in m/s, but no unit for speed is mentioned in the JSON structure. Therefore, the match is not exact.']
Proceed straight ahead for a distance of 10 meters, maintaining a speed of 2 meters per second.,{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Travel in a forward direction for 10 meters, with a velocity of 2 meters per second.,{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meter"}};['5; The command is matched perfectly with the given JSON structure. All specified parameters in the command (moving direction, distance, and speed) are accurately represented in the JSON. The "unit" and "is_forward" keys also conform with the sample ontology.']
Go ahead for 10 meters, moving at a pace of 2 meters per second.,{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The JSON correctly represents the action ("move"), direction ("is_forward": true), speed ("linear_speed": 2), distance ("distance": 10 meters), and the unit of distance ("unit": "meter") as stated in the natural language command.']
Advance for a distance of 10 meters while maintaining a velocity of 2 meters per second.,{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meter"}};['5; The natural language command corresponds perfectly to the JSON structure. All the parameters specified in the command are present in the JSON structure with the same or acceptable values: "action" is "move", "linear_speed" is 2, "distance" is 10, "is_forward" is true, and the "unit" of measurement is in "meter".']
Turn left and move forward for 5 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['2; The command\'s instruction \'Turn left\' is correctly captured in the JSON structure under the "rotate" action with "is_clockwise": false (since turning left is counterclockwise). However, the \'move forward for 5 seconds\' instruction is not represented in the provided JSON at all. Moreover, "angular_velocity" and "angle" values are null, but in the command, we don\'t have values for these key.']
Make a left turn and proceed straight ahead for a duration of 5 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['2; The JSON structure is partially correct. The action "rotate" fits with the command "Make a left turn". However, the parameters for "angular_velocity" and "angle" are missing specific values, and the duration or movement forward is not covered within this JSON structure.']
Take a left and advance in a forward direction for a span of 5 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};['1; The natural language command involves a left turn which matches with neither of the provided JSON structures. Furthermore, the command specifies moving for a span of 5 seconds, which also do not conform with the JSON structures.']
Rotate to the left and proceed ahead for a duration of 5 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['2; The natural language command is partially matched with the JSON structure as there is only a \'rotate\' action captured. The direction of rotation is correctly identified as anti-clockwise (left). However, the "proceed ahead for a duration of 5 seconds" is not converted into the JSON. Furthermore, angular_velocity and angle values are not specified in the command and are thus null in the JSON data.']
Veer left and move forward for an interval of 5 seconds.,{"action": "move", "params": {"linear_speed": 0.2, "distance": 2, "is_forward": false, "unit": "meter"}};['1; The natural language command requests a turn to the left, which indicates a "rotate" action that is not represented in the provided JSON structure. The command also calls for movement, which the JSON does cover with the "move" action, but the specified "is_forward" parameter is incorrectly set to false, instead of true. Also, the command\'s request for a certain time duration isn\'t accounted for in the JSON structure.']
Move backward at a velocity of 1 meter per second.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 0, "is_clockwise": false, "unit": "degrees"}};["0; The natural language command refers to moving backward at a certain speed, however the JSON structure describes a rotation action and its parameters instead of depicting the 'move' action in linear direction. Also the 'angular_velocity' in JSON doesn't match the speed provided in the natural language command as per the action context."]
Go in reverse at a speed of 1 meter per second.,{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}};['2; The keys in the JSON structure partially match the natural language command. The action "move" and parameters "linear_speed" and "unit" are mentioned in both. However, the command implies a direction of movement (reverse) but the JSON structure provided does not specify a "is_forward": false value. The command does not specify a distance, yet the JSON structure prescribes a one meter distance. This does not align with the general understanding of the command, as a reverse movement of one meter would be unusually specific.']
Travel backwards with a velocity of 1 meter per second.,{"action": "move", "params": {"linear_speed": -1, "distance": 1, "is_forward": false, "unit": "meter"}};['4; The natural language command requests a backward movement which is correctly represented in the JSON structure with "is_forward": false. However, the linear speed is mentioned in the command as being 1 m/s, but it is represented in the JSON as -1, Instead of using negative speed, the "is_forward": false is used. The distance isn\'t specified in the natural language command, but it\'s assumed to be 1 which is accepted as per the prompt.']
Move in the opposite direction at a rate of 1 meter per second.,{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}};['4; Mostly conformed. The JSON structure correctly identifies the action as "move", and correctly assigns "linear_speed" and "is_forward". However, the natural language command does not specify the distance, yet it is included in the JSON structure.']
Go backward at a speed of 1 meter per second.,{"action": "move", "params": {"linear_speed": -1, "distance": 1, "is_forward": false, "unit": "meter"}};["1; The JSON structure does not perfectly align with the natural language command. The keys 'distance' and 'is_forward' do not match because they are not mentioned in the command. Further, the meaning of the negative 'linear_speed' is not clear and potentially contradicts 'is_forward' key. The command only mentions moving backward at a given speed, not the distance to be covered or the direction of movement."]
Rotate counterclockwise by 45 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Rotate 45 degrees counterclockwise.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Turn left by 45 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['4; The natural language command and JSON structure slightly conform. The desired action (rotate) and the angle (45 degrees) from the natural language command correspond properly in the JSON structure. However, the "is_clockwise" parameter from the JSON structure does not match with the natural language command because turning left is not considered clockwise. Furthermore, no value was mentioned for "angular_velocity" in the command.']
Rotate in an anticlockwise direction by 45 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['4; Although there is a small discrepancy in the "angular_velocity" value of the JSON and the provided natural language command, the remaining details like action, angle, is_clockwise and unit are aligned properly. Since the angular_velocity is not specified in the command, the provided value is still accepted.']
Rotate to the left by 45 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['4; The natural language command and the JSON information match, but the "angular_velocity" value doesn\'t match the sample ontology. According to the command, the "angular_velocity" cannot be determined so any reasonable value is accepted. However, the provided value of 1 is notably higher than the sample value of 0.35, thus it seems not fully reasonable.']
Move forward for 7 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}};['4; The action and parameters match the natural language command. However, there is non-specified parameter in the natural language command which is the "linear_speed". Any reasonable value is accepted but 1 is not specified in the provided natural language command.']
Proceed ahead for a distance of 7 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}};['4; The JSON structure largely matches the natural language command. The action and parameters are present in the JSON object. However, the linear_speed is given as 1 in the JSON structure, but no speed is specified in the natural language command.']
Advance 7 meters in the forward direction.,{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Travel straight ahead for a length of 7 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Go straight for 7 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}};['5; The command instructs the AI to move forward, or "go straight," for a certain distance. This maps perfectly to the JSON structure provided, which details an action of "move," a distance of 7, a direction of forward (or "is_forward": true), and a unit of measurement being "meter." The linear_speed is not specified in the command but is reasonably given as 1 in the JSON.']
Turn right and move forward for 4 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['1; The natural language command partially matches with the JSON structure. The turning right motion is opposite to what is conveyed in the JSON structure which indicates a non-clockwise rotation. The movement of forward for 4 meters is not represented in the JSON structure at all.']
Take a right turn and proceed ahead for a distance of 4 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['3; The JSON partially conforms to the command. It captures the information for the "rotate" action part of the command, which includes taking a right turn, but doesn\'t include the "move" action, which refers to "proceed ahead for a distance of 4 meters". A JSON for the "move" action should be included to fully capture the command.']
Make a right turn and advance straight ahead covering a distance of 4 meters.,{"action": "rotate", "params": {"angular_velocity": ?, "angle": ?, "is_clockwise": true, "unit": "degrees"}};['2; The JSON structure partially conforms to the natural language command. The rotation direction \'right turn\' is correctly captured in the JSON as "is_clockwise": true. However, the part of the command \'advance straight ahead covering a distance of 4 meters\' is not represented in the provided JSON structure. The parameters for rotation such as \'angular_velocity\' and \'angle\' are also not clearly specified in the command.']
Rotate towards the right and continue moving forward for 4 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};['2; The JSON structure does not match with the command entirely. The action "rotate" is successfully mentioned along with the directive to do it clockwise. However, the command also includes moving forward for a certain distance which isn\'t represented in the JSON at all. Also the parameter values for angular_velocity and angle are missing which were required according to the JSON structure.']
Go right and travel straight ahead, covering a distance of 4 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}};['5; The natural language command mentions to move straight ahead for 4 meters which is correctly represented in the JSON structure as action "move" and parameters "distance" as 4 and "unit" as "meter". The direction is forward which is again correctly represented as "is_forward": true. The actual speed is not given in the natural language command, so any reasonable speed like 1 in the JSON is accepted.']
Move forward for 3 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": true, "unit": "second"}};['2; The action command is correct. However, while the linear_speed value is acceptable, the distance value is wrong. "Distance" is measured in a spatial unit, not time (seconds). The natural language command doesn\'t fully fit the sample ontology because it mentions time instead of distance. The "is_forward" parameter also has a correct value. So, the command partially complies with the JSON structure.']
Go straight ahead for a duration of 3 seconds.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['0; The JSON structure does not match the command. The command instructs to "go straight ahead for a duration of 3 seconds", but the JSON structure indicates a rotation action which is not present in the command.']
Proceed in a forward direction for a span of 3 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 0, "is_forward": true, "duration": 3, "unit": "second"}};["2; The natural language command corresponds to an action of moving which is present in the JSON structures. However, the parameters specified in the command ('span of 3 seconds') are not correctly reflected in the JSON structure. 'Duration' parameter is not included in the sample ontology and 'Distance' is given as 0, when it is not specified in the natural language command."]
Advance ahead for a period of 3 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1.5, "is_forward": true, "unit": "meter"}};["2; The command's general idea matches with the action of moving forward which is present in the JSON structure. However, the command's reference of time (3 seconds) does not align with the JSON structure which expects a distance value rather than a time duration."]
Travel forward for a duration of 3 seconds.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['0; The provided JSON structure does not match the natural language command. The command is about linear movement, but the JSON depicts a rotation action.']
Turn left and move forward for 2 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}};['2; Although the "move" action and its parameters in the JSON structure mildly conform to the natural language command, the command also includes "Turn left" which is not reflected in the JSON package at all. This is supposed to be reflected in the "rotate" action and its parameters, using a is_clockwise key-value pair.', '']
Proceed straight for a distance of 2 meters after making a left turn.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; The "rotate" action corresponds to making a left turn, however, the command describes two sequential actions while the JSON structure only shows the rotate action. The linear movement described in the command does not match with any structure provided.']
For a span of 2 meters, continue moving forward after taking a left turn.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}};["2; The JSON structure only corresponds to the part of the command where the bot is moving forward for 2 meters but doesn't include the action of taking a left turn. There is a mismatch in the actions specified in the command and the actions described in the JSON structure."]
Make a left turn and advance ahead for 2 meters.,{"action": "rotate", "params": {"angular_velocity": undef, "angle": undef, "is_clockwise": false, "unit": "degrees"}};["2; The given JSON structure only partially matches the command. The command instructs a left turn which is clockwise rotation marked as false in JSON, but there is no specific angle to turn mentioned in the command to match it with the JSON. Furthermore, the command also includes advancement for a certain distance, which isn't represented in the JSON at all."]
After turning left, go straight for a distance of 2 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['2; The natural language command partially matches with the JSON structure. The "rotate" action is correctly interpreted, but the sample does not provide enough information to derive a specific "angular_velocity" or "angle" for a left turn. Also, the command to go straight for 2 meters is not represented in the provided JSON structure.']
Rotate clockwise by 270 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['4; The JSON structure matches with the natural language command correctly in rotation action and parameter values, however, it lacks a specified angular_velocity value.']
Turn to the right by 270 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": false, "unit": "degrees"}};["1; The command asks to rotate towards 'right' direction. But 'is_clockwise' is incorrectly set to false, which usually indicates a 'left' rotation. The angular_velocity is not specified in the command, but it should not have a 'null' value in JSON. It should have a reasonable value. The rest of the information is correct."]
Rotate in a clockwise direction by 270 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform.']
Perform a 270-degree clockwise rotation.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform. The command "Perform a 270-degree clockwise rotation" matches exactly with the provided JSON structure where action is "rotate" and parameters include "angle": 270, "is_clockwise": true, both of which are in line with the command. Angular_velocity being null is accepted as the value is not specified in the natural language command.']
Rotate by 270 degrees in a clockwise manner.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['4.5; The JSON structure almost perfectly matches the natural language command. The "is_clockwise": true parameter correctly translates the clockwise rotation, and "angle": 270 parameter matches the 270 degrees rotation. The "action": "rotate" also conforms to the rotation command. However, the "angular_velocity" is left null while it could\'ve been any reasonable value, that\'s why it is not a perfect 5.']
Move backward for 6 meters.,{"action": "go_to_}};['1; The JSON structure and the natural language command do not conform well. The action type "move" is more appropriate for the given command than "go_to_" which is incomplete. Moreover, the parameter "is_forward" should be False for the direction \'backward\'. However, no points related to the value of distance and the unit of distance are mentioned.']
Reverse direction and travel a distance of 6 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 6, "is_forward": false, "unit": "meter"}};['5; The natural language command exactly matches with the JSON structure. The action is correctly identified as "move" and all necessary parameters are included with correct values. The direction is correctly interpreted as not forward, represented by "is_forward": false, and the distance is correctly derived from the command. The unit is "meter" which matches with the information in JSON.']
Go back 6 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": -6, "is_forward": false, "unit": "meter"}};['3; The action type "move" and several parameters like "is_forward", "unit", "distance" match the natural language command. However, the inclusion of "linear_speed" with a value of 0 differs from the command as no speed was specified. Additionally, the "distance" should not be negative as described in the JSON. Negative distance is not clearly implied in natural language command, unlike direction, which is mentioned as "back".']
Retreat for a distance of 6 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": 6, "is_forward": false, "unit": "meter"}};['5; Exactly conform.']
Move in the opposite direction for 6 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 0, "is_forward": false, "unit": "meter"}};['3; The "action" of "move" and parameter keys ("linear_speed", "is_forward", "unit") align. However, the "distance" key has a value of 0 in JSON, while the command implies a distance of 6 meters. Also, the "linear_speed" in command is not specified, so any reasonable value can be accepted. The conformity is thus partially correct.']
Turn right and move forward for 5 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};['1; The natural language command instructs to "turn right" which partially matches with the "rotate" action in the JSON structure. However, there\'s a mismatch in the parameters, as "move forward for 5 seconds" does not align with the JSON parameters for rotation, i.e., "angular_velocity", "angle", "is_clockwise" and "unit". The duration for the movement (5 seconds) isn\'t represented in the JSON structure at all.']
Take a right turn and proceed ahead for a duration of 5 seconds.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['3; The action "rotate" and the parameters "angular_velocity", "angle", "is_clockwise", "unit" match the JSON structure. However, the natural language command describes taking a right turn while the JSON structure has "is_clockwise" set to false which typically corresponds to a left turn. Similarly, the duration in the natural language command is not represented in the JSON structure.']
Make a right turn and continue moving straight for 5 seconds.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; While the natural language command "make a right turn" does have some matching to the JSON action "rotate" and related parameters, the instruction "continue moving straight for 5 seconds" does not match the second JSON structure. The JSON structure makes reference to moving with a certain speed and distance, but does not incorporate a time element. Therefore, the natural language command does not fully match the JSON structures provided.']
Go right and advance for a period of 5 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "second"}};['1; The natural language command involves a direction ("Go right") and a time duration ("for a period of 5 seconds"), while the JSON structure describes a linear movement with a certain speed, distance, direction and unit. However, the JSON structure refers to "linear_speed" and "distance", and not "rotation" or "duration". Hence conformity is low.']
Shift to the right and travel in a forward direction for 5 seconds.,{"action": "move", "params": {"linear_speed": 0.2}};["1; The action in the JSON structure is in agreement with the natural language command. However, the parameters in the command do not match with the parameters in the JSON structure. The command mentions about moving in a forward direction for a certain time duration, but the JSON structure only specifies the linear speed. The parameters 'distance', 'is_forward' and 'unit' are not mentioned."]
Move forward at a velocity of 0.3 meters per second for 10 meters.,{"action": "move", "params": {"linear_speed": 0.3, "distance": 10, "is_forward": true, "unit": "meter"}};['4; The natural language command is congruent with the JSON structure but it doesn\'t exactly match. The JSON structure refers to speed as "linear_speed" while the natural language command refers it to as "velocity". Also, the JSON structure specifies a linear_speed of 0.5 while the command specifies a speed of 0.3. Hence, this is a close match but not the exact one.']
Proceed ahead for a distance of 10 meters at a speed of 0.3 meters per second.,{"action": "move", "params": {"linear_speed": 0.3, "distance": 10, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The natural language command matches the provided JSON structure perfectly. All the parameters like action, linear_speed, distance, is_forward, and unit in the command line are present in the JSON, and the values correspond accurately.']
Travel forward for 10 meters, maintaining a velocity of 0.3 meters per second.,{"action": "move", "params": {"linear_speed": 0.3, "distance": 10, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Advance for a total of 10 meters while moving at a speed of 0.3 meters per second.,{"action": "move", "params": {"linear_speed": 0.3, "distance": 10, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Cover a distance of 10 meters by moving forward at a velocity of 0.3 meters per second.,{"action": "move", "params": {"linear_speed": 0.3, "distance": 10, "is_forward": true, "unit": "meter"}};['5; The natural language command perfectly matches the JSON information provided. All the parameters and their respective values, including action, linear speed, distance, direction (is_forward), and unit, are captured correctly in the JSON structure.']
Rotate counterclockwise by 120 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 120, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform. The natural language command "Rotate counterclockwise by 120 degrees." perfectly corresponds to the given JSON. The action "rotate" is correctly represented, as well as the parameters: "angle": 120, "is_clockwise": false, "unit": "degrees". Even the "angular_velocity" not being specified in the command, a null value is a reasonable placeholder.']
Rotate 120 degrees counterclockwise.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 120, "is_clockwise": false, "unit": "degrees"}};["4.5; The natural language command almost perfectly matches the JSON structure. The 'angle' and the 'is_clockwise' parameters have been completely matched. However, the 'angular_velocity' parameter is not specified in the natural language command, resulting in a null value in the JSON structure. Thus, it is not a perfect match."]
Perform a counterclockwise rotation of 120 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 120, "is_clockwise": false, "unit": "degrees"}};['4.5; The JSON instruction mostly conforms to the natural language command. "Perform a counterclockwise rotation of 120 degrees." translates well to the JSON structure. The key "is_clockwise" is correctly set to false, in accordance with "counterclockwise," and the "angle" is accurately set to 120. The "angular_velocity" is not specified in the English command, and though a null value is permitted, it would ideally be some reasonable default value instead to better match the implied intent. The action and unit keys match perfectly. The 0.5 reduction of score is only due to the "angular_velocity" being set to null when it could contain a default value.']
Turn left by 120 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 120, "is_clockwise": false, "unit": "degrees"}};['4.5; The JSON structure accurately presents the natural language command but the "angular_velocity" parameter does not have a value. In this case, a null value is reasonable when the velocity is not specified in the command.']
Rotate in the opposite direction by 120 degrees.,{"action": "rotate", "params": {"angular_velocity": 120, "angle": 120, "is_clockwise": false, "unit": "degrees"}};['4; Mostly conform. The actions match, however, the "angular_velocity" is usually a measurement of speed, not the rotation angle. In this case, it is used incorrectly. The values for "angle" and "is_clockwise" match the natural language command.']
Rotate counterclockwise by 90 degrees.,Consider the following ontology:{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['1; The natural language command calls for rotation which exists in the JSON ontology. However, the direction specified is counterclockwise while the JSON structure has a parameter for "is_clockwise". The degree of rotation is also mentioned (90 degrees) but with no corresponding value in the JSON. The command is also not related to the "go_to_goal" action and "location" parameter in the given ontology.']
Turn left by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['4; The natural language command matches with the JSON structure, the action "rotate" corresponds to the command "Turn left". The parameter of 90 degrees also matches. However, the "is_clockwise" value should be true for a left turn and "angular_velocity" is not specified in the command but marked as null in the JSON.']
Rotate anti-clockwise by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -90, "is_clockwise": false, "unit": "degrees"}};['4; The natural language command precisely matches the JSON structure in terms of action and parameters. However, the natural language command requests an anti-clockwise rotation, represented as false in "is_clockwise" field, but the actual "angular_velocity" isn\'t specified in the command, so assigning it a "1" is arbitrary.']
Rotate in the opposite direction by 90 degrees.,Consider the following ontology:{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['1; Only the action "rotate" matches partially with the given JSON structures. However, the parameter \'is_clockwise\' has a different value in the command. The degree of rotation is also mentioned but it does not match the value given in the JSON structure, and the direction is opposite.']
Rotate counter to the clockwise direction by 90 degrees.,Consider the following ontology:{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['0; The natural language command is for the action "rotate" but the provided JSON structure represents the action "go_to_goal". There is a mismatch as the action in the JSON does not support rotation and the parameters in the JSON do not contain information about the rotation action.']
Move forward for 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Proceed straight ahead for a distance of 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The natural language command matches the JSON information exactly as specified in the ontology. It correctly defines the action as "move", with the specified distance being 5 and the unit of measurement being meters. It further specifies going straight i.e., "is_forward" as true. Even though the linear_speed is not specified in the natural language command, 1 is a reasonable speed and acceptable as per the instructions.']
Advance ahead by 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['5; The given natural language command perfectly matches the JSON representation. The action of moving forward along with the distance to be covered is appropriately represented in the JSON structure, and though the linear_speed is not specified in the command, its value in the JSON is accepted as it is a reasonable value.']
Travel in a forward direction, covering a distance of 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Move straight ahead and travel a distance of 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};["4.5; The action in the command to move ahead and the action 'move' in the JSON match. The parameters also match with 'distance' specified as 5 meters in both. However, the only missing conformity is the 'linear_speed', which is specified as 1 in the JSON but not mentioned at all in the command. Nonetheless, a reasonable value is accepted in the JSON if a parameter's value is not specified in the command."]
Turn left and move forward for 2 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "second"}};["1; The natural language command mentions turning left which isn't reflected in any JSON structure. The movement command in the JSON structure doesn't match perfectly either, as it is measured in distance while the command specifies a duration of time."]
Proceed forward for 2 seconds after turning left.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 0.5, "is_forward": true, "unit": "meter"}};['2; While the natural language command refers to a movement action, it does not actually reference all the correct parameters such as "linear_speed" and "distance" illustrated in the JSON structure. Additionally, the command also includes an action "turning left" which is not represented in the provided JSON structure at all.']
After making a left turn, continue straight ahead for 2 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};["1; The command does partially correspond to the 'rotate' action in the JSON structure, but lacks correct information on 'angular_velocity' and 'angle', also command asks to go straight ahead for 2 seconds which is not mentioned in JSON structure."]
Take a left turn and then advance forward for 2 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['2; The natural language command involves a rotate action and a move action, but only rotate action is considered in the JSON structure. The parameters of the rotation such as "angular_velocity" and "angle" are not specified in the natural language command, hence their null values in the JSON are accepted. However, the command mentions "Take a left turn", which implies counter-clockwise rotation, and this is correctly converted as "is_clockwise": false in the JSON. The missing translation for the move action and the wrong order of actions (rotate should be after move) contributes to the lower score.']
Rotate to the left and travel straight for 2 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['1; The JSON structure refers to a "rotate" action command, which is mentioned in the natural language command. However, the JSON parameters do not fully match the command. The direction of movement ("to the left") is addressed by the correct "is_clockwise" boolean in JSON, but there is no mention of "angular_velocity" or "angle" values, which would determine the extent of the rotation. Additionally, the command mentions "travel straight for 2 seconds", however this portion is ignored in the given JSON structure. A "move" or "go_to_goal" action with corresponding parameters would be expected here.']
Stop and wait.,{"action": "wait", "params": {}};['0; The JSON structure does not match the natural language command ("Stop and wait."), as there is no "wait" action or any related parameters in the provided sample ontology.']
Cease and remain still.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['0; The given natural language command asks the system to stop moving. However, the provided JSON structure\'s "action" is "move", suggesting some movement should be taking place. In addition, the values of the parameters are not matching with the command. It indicates a forward movement at a linear speed of 0.5 for an unspecified distance, which is not in compliance with the \'cease and remain still\' command.']
Halt and stay put.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};["0; The natural language command indicates to stop not to move therefore it does not conform with the provided JSON structure in action 'move'."]
Pause and remain stationary.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['0; The natural language command indicates a requirement to stop moving or hold a position, but there is no corresponding action or parameter in the provided JSON structure to reflect this command. The existing JSON actions are "go_to_goal", "move", and "rotate", none of which satisfy the requirement to stop or remain stationary.']
Desist and await further instruction.,{"action": "stop", "params": {}};["0; The natural language command doesn't match any of the JSON structures given as it instructs to stop not to go to a location, move, or rotate."]
Move backward for 10 meters.,{"action": "move", "params": {"linear_speed": -10, "distance": 10, "is_forward": false, "unit": "meter"}};['3; Partially conform. The action and parameters correspond with the natural language command, but the "linear_speed" value is incorrect. It should be a value that refers to the speed of the movement, not the direction. The direction is indicated by the "is_forward" key which is correctly set to false.']
Go back a distance of 10 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": -10, "is_forward": false, "unit": "meter"}};['5; Exactly conform. The command is moving back hence "is_forward": false. The linear speed isn\'t mentioned in the original command but any reasonable value is accepted as was in the JSON example. The distance is also exact and it is in the correct unit of measurement.']
Retreat for a distance of 10 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": 10, "is_forward": false, "unit": "meter"}};['4; The JSON structure matches with the natural language command. However, the "linear_speed" key is given a value of 0 in the JSON structure which is not reasonable for a movement action regardless of the natural language command not mentioning any specific speed. The robot would not be able to retreat or move at 0 speed.']
Reverse your direction and travel 10 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 10, "is_forward": false, "unit": "meter"}};['4; The command asks the system to reverse which the JSON structure translates to traveling not forward. However, the linear speed is not mentioned in the natural language command.']
Take 10 steps backward.,{"action": "move", "params": {"linear_speed": -1, "distance": 10, "is_forward": false, "unit": "step"}};['1; The natural language command corresponds to the "move" action, but the JSON structure doesn\'t strongly match the sample provided. The parameter "linear_speed" value doesn\'t match as negative speed is not logically correct. Also, "is_forward" set as false is not present in the ontology. The unit in JSON is "step" while in the ontology it\'s "meter".']
Rotate clockwise by 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['4; The natural language command matches the JSON structure in terms of the action to be executed and some parameters specified such as angle, is_clockwise and unit. However, angular_velocity is not specified in the natural language command, so while it is included in the JSON, it is null.']
Perform a 180-degree clockwise rotation.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; The natural language command matches perfectly to the provided JSON structure. The action "rotate" is correctly identified, as is the correct "is_clockwise" value (true for clockwise rotation), the "angle" value (180 degrees), and the unit of measurement ("degrees"). Angular velocity is not specified in the command but a null value is acceptable according to the prompt instructions.']
Rotate in a clockwise direction by 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['4; The natural language command and the JSON information match up well, however, the "angular_velocity" value is not specified in the command, but this is accepted as the command doesn\'t require this information.']
Turn by 180 degrees in a clockwise manner.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform. The natural language command "Turn by 180 degrees in a clockwise manner" perfectly translators to the JSON structure provided with correct action type \'rotate\' and parameter values. The \'angular_velocity\' is not specified in the natural command but any reasonable value is accepted as per the instructions.']
Execute a clockwise rotation of 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['4; The natural language command correctly matches the action in the JSON structure and most of the parameters in the JSON conform to those in the natural language command. The "angular_velocity" is not mentioned or implied in the command, so its null value is reasonable.']
Turn right and move forward for 3 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};["1; The JSON structure captures the command 'turn right' partially but it doesn't specify to what value the 'angular_velocity' and 'angle' properties should be set, and also it doesn't capture 'move forward for 3 seconds'."]
Make a right turn and proceed forward for a duration of 3 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};['1; The natural language command refers to a rotation, but the required angle and angular velocity parameters are not given in the command and cannot be inferred. Also, the direction of rotation is correct. The command then refers to linear motion, which is not represented in the provided JSON at all. Thus, the command only slightly matches the JSON structure.']
Take a right and continue moving straight ahead for a total of 3 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": true, "unit": "second"}};['2; The JSON command matches the action "move" and parameter "is_forward" as mentioned in the natural language command. However, the other parameters mentioned in the JSON command such as "linear_speed" and "unit" were not included in the natural language command. The "distance" parameter does not exactly match because the natural language command describes a duration ("3 seconds") rather than a physical distance. Also, the direction ("take a right") in the natural language command is not reflected in the JSON.']
Rotate to the right and advance for a period of 3 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};['2; The natural language command \'Rotate to the right\' is correctly mapped to JSON structure by "rotate" action but values for params "angular_velocity" and "angle" are missing in the JSON. Also, there\'s no JSON structure presented for \'advance for a period of 3 seconds\', so the match is not complete.']
Face towards the right and travel forward for a duration of 3 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 0, "is_forward": true, "duration": 3, "unit": "second"}};['2; The natural language command correctly invokes a "move" action and the "is_forward" parameter is set to true in the JSON, thus matching with the description. However, the command\'s request to turn isn\'t captured in the JSON command at all. The specification of "duration" of 3 seconds in the command is not in line with the parameters in the JSON command, which delineates the "distance" traversed. "Duration" isn\'t present in the sample keys.']
Go to the living room and stop.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 30, "is_clockwise": false, "unit": "degrees"}};["0; The natural language command instructs the system to 'go to the living room and stop', but the provided JSON structure involves a 'rotate' action with parameters related to angular velocity, angle, clockwise direction and unit (degrees). There's no correlation between the command and JSON structure."]
Proceed to the living room and come to a halt.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living Room"}};['4; The natural language command asks the system to move to a specific location (Living Room), which matches with the action "go_to_goal" and the "location" param in the first JSON structure. However, the "come to a halt" part of the command does not completely match with any action in the provided JSON structures.']
Move to the living room and cease all movement.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living Room"}};['2; The natural language command partially conforms to the JSON structure. The action "go_to_goal" along with the location parameter matches with the command to move to the living room. However, the command to "cease all movement" isn\'t represented anywhere in the provided JSON structures. Therefore, it isn\'t a complete match.']
Make your way to the living room and stand still.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living Room"}};['4.5; The natural language command correctly matches with the JSON structure in terms of action but the exact location ("Living Room") is different from the one ("Kitchen") provided in the sample ontology JSON. Yet it\'s a reasonable deviation because the command specifies a different, valid location.']
Head to the living room and remain stationary.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living Room"}};['5; The natural language command perfectly matches the JSON information with the action "go_to_goal" and the location value set as "Living Room".']
Move 2 meters to the left.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": false, "unit": "meter"}};['1; The natural language command ask for a move to the left which implies a rotation but the JSON structure has the action of moving forward or backward, not sideway. Also, the "is_forward" key in JSON structure is set to false representing backward movement which is not mentioned in the command.']
Shift your position by 2 meters towards the left.,{"action": "move", "params": {"linear_speed": 0, "distance": 2, "is_forward": false, "unit": "meter"}};['1; The JSON structure doesn\'t match appropriately with the command. The command specifies moving towards the left but the "is_forward" parameter is set to false which indicates moving backward, not to the side. Furthermore, the "linear_speed" is set to 0, which means it won\'t move, contradicting the command.']
Change your location by 2 meters in a leftward direction.,{"action": "move", "params": {"linear_speed": 0, "distance": 2, "is_forward": false, "unit": "meter"}};["1; The natural language command refers to a change in location which is mentioned in the JSON structure but not fully aligned. The natural language command indicates a leftward movement but the JSON structure does not carry this capacity. Instead, it contains parameters for linear speed and direction of motion (forward or backward) which don't completely correspond to the detailed aspects of the command. The distance in the command and the JSON matches."]
Relocate yourself 2 meters to the left.,{"action": "move", "params": {"linear_speed": 0, "distance": 2, "is_forward": false, "unit": "meter"}};['2; The natural language command does not exactly conform to the JSON structure. It has the notion of moving a certain distance, which is representable in JSON, however the "left" direction cannot be represented with the given JSON structure. We don\'t know if "left" means to rotate or move sideways as the JSON structure doesn\'t provide "left" or "right" as options for the action "move". Also, the moving action doesn\'t require the parameter "is_forward" in the given context.']
Move to the left by a distance of 2 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": false, "unit": "meter"}};['4; The JSON structure almost perfectly matches the natural language command. The action "move" is present and the distance parameter is correctly set according to the natural language command. However, the direction (\'to the left\') is not appropriately represented in the JSON command. The "is_forward" key might not adequately capture the horizontal movement indicated by \'to the left\'. Besides, the "linear_speed" is arbitrary and not derived from the natural language command.']
Rotate counterclockwise by 45 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}};["4; While the natural language command does mostly conform to the JSON structure, the 'angular_velocity' is specified as '1' in the JSON while it's not specified in the command which would allow for any reasonable value to be accepted. The 'is_clockwise' attribute is correct, as counterclockwise would be 'false'. The 'angle' and 'unit' attributes are exactly conforming to the natural language command. The difference in 'angular_velocity' is not significant enough to fully discredit the match altogether, but it does prevent it from being an exact match."]
Turn left by 45 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['4; The action and the majority of the parameters match well with the JSON structure and the command. However, "angular_velocity" is not specified in the natural language command, so a null value in the JSON is not fully conformant, although it is acceptable.']
Execute a counterclockwise rotation of 45 degrees.,Consider the following ontology:{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};["0; The natural language command has no corresponding action in the provided JSON structure. The command 'Execute a counterclockwise rotation of 45 degrees' should be mapped to the 'rotate' action - which is not shown in the given JSON structure. Therefore, the command cannot be converted to JSON using the provided ontology."]
Rotate anticlockwise by an angle of 45 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 45, "is_clockwise": false, "unit": "degrees"}};["4; The 'angular_velocity' is not defined but because it is not specified in the natural language command it is accepted. The command's 'action' and 'params' mostly conforms to the JSON structure with exception of the 'angular_velocity'."]
Perform a 45-degree rotation in the counterclockwise direction.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 45, "is_clockwise": false, "unit": "degrees"}};["5; Exactly conform. The JSON and the natural language command match perfectly. The action is 'rotate' and all the parameters including 'angle', 'is_clockwise', and 'unit' matches too, even the direction of rotation is specified correctly as 'false' for 'is_clockwise' which is counterclockwise. 'Angular_velocity' is not specified in the natural language command, but a 'null' value is acceptable as per the instructions."]
Move forward at a speed of 0.5 meters per second for 4 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}};['4; The natural language command mostly conforms to the JSON structure. The action "move", "linear_speed" and "is_forward" are correctly identified. However, the natural language command specifies time (4 seconds) instead of distance, thus the corresponding "distance" in the JSON structure is not completely accurate. The unit of "meter" is assumed.']
Proceed ahead for a duration of 4 seconds with a velocity of 0.5 meters per second.,{"action": "move", "params": {"linear_speed": 0.5, "distance": null, "is_forward": true, "duration": 4, "unit": "second"}};['2; Partial match. The natural language command partially aligns with the JSON. The "move" action and "linear_speed" parameter are mentioned in the command, and the "is_forward" parameter can be inferred from \'proceed ahead\'. But the natural language command specifies a duration, which is not represented in the JSON structure. The JSON structure includes a \'distance\' parameter that is not mentioned in the command. The unit of \'second\' for duration also does not exist in the JSON format. Therefore, the match is partial.']
Travel in a straight line for 4 seconds, maintaining a speed of 0.5 meters per second.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}};['4; The natural language command and the provided JSON structure both contain the action "move" and the parameter "linear_speed" with same value (0.5), indicating a match. The command specifies moving for 4 seconds at 0.5 meters/second, which results in a "distance" value of 2 meters in the JSON that matches the implied distance in the command. The "unit" value of "meter" and "is_forward" value of True in the JSON are reasonable assumptions from the command. However, the natural language command doesn\'t directly specify these, causing the deduction of a point.']
Advance at 0.5 meters per second for a period of 4 seconds in a forward direction.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}};['5; Exactly conform. The natural language command specifies all parameters present in the provided JSON, including action, linear_speed, distance, direction and unit. The distance is inferred from the duration and speed which matches the JSON structure.']
Go forward for 4 seconds, maintaining a velocity of 0.5 meters per second.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}};['4; While the natural language text and JSON information are closely related in describing a forward movement, there is a slight mismatch in the parameters. The natural language command refers to time (seconds) while the JSON structure specifies distance in meters.']
Turn left and move forward for 7 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}};['2; The natural language command includes the actions "turn left" and "move forward". These actions are represented in the sample ontology as "rotate" and "move" respectively. The "move" action in the JSON structure is consistent with the command, as it includes "distance": 7, "is_forward": true, and "unit": "meter". However, the "rotate" action is missing in the provided JSON structure, hence the low score.']
Make a left turn and proceed straight ahead covering a distance of 7 meters.,{"action": "rotate", "params": {"angular_velocity": ?, "angle": ?, "is_clockwise": false, "unit": "degrees"}};['2; While the command involves actions that can be mapped to the \'rotate\' and \'move\' actions in the sample ontology, the given JSON structure only covers the \'rotate\' action and omits the details about "proceed straight ahead". Additionally, the \'is_clockwise\' parameter value does not match the command ("left turn" would typically be counter-clockwise) and the \'angle\' and \'angular_velocity\' parameters are left unspecified. The command also specifies a distance ("7 meters"), but this is not reflected in the JSON structure.']
Take a left turn and continue moving ahead, advancing 7 meters.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; Partial conformity. The natural language command uses "take a left turn", which matches with JSON\'s rotation action, however, the "angular_velocity" is not specified in the natural language command and is assumed to be 1 but is 0.35 in the JSON structure. Moreover, the command also mentions moving ahead and advancing 7 meters which should correspond to moving action in JSON, but this specific command is missing. Hence a not fully conform match.']
Head to the left and travel straight for 7 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}};['2; The JSON partially conforms to the natural language command. The "move" action and "distance" parameter match, however the command to move to the "left" is not represented in the JSON structure. The "linear_speed" parameter is not specified in the command, but its given value in the JSON is reasonable.']
Rotate in the left direction and proceed forward, covering a distance of 7 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['4; The command refers to two different JSON structures. One where it instructs to rotate (but does not specify the angle to rotate or the angular_velocity) and the other to move forward for a certain distance, which is not mentioned in JSON. The "rotate" part matches completely with its JSON structure with an implied counter clockwise rotation (which is correctly identified as "is_clockwise": false). However, the "move" part is not given in JSON structure along with its parameters, hence the score stands at 4 with a minor mismatch.']
Stop and reverse direction.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The given command asks for a stop and reversing the direction, which could be interpreted as a movement action, but it does not clearly match with the action and the keys in the provided JSON structure. The "move" action does not exist in the sample ontology and reversing direction could involve parameters such as linear_speed and is_forward. The JSON structure translation of the command is also incorrect as it sets the "linear_speed" and "distance" to 0, which does not correspond to reversing direction.']
Come to a halt and begin moving in the opposite direction.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['0; The JSON structure does not match the natural language command. The command suggests that the subject should stop moving and then move in the opposite direction, this would require an “is_forward”: false statement after moving a certain distance, but the given JSON structure only illustrates the subject coming to a stop without any suggested backward movement.']
Cease forward motion and start moving backwards.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};["1; The command refers to a movement action but it's not a perfect match to the provided JSON. The move action in the JSON requires 'linear_speed' and 'distance', but the natural language command does not specify these. The 'is_forward' parameter is correct, but the linear speed is not necessarily 0 when moving backwards as included in the JSON."]
Bring yourself to a stop and change your direction to the opposite way.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; While the command does mention stopping, which could be vaguely matched with a \'move\' action with zero \'linear_speed\' and \'distance\', it does not provide a direction or a distance, making the \'is_forward\': false and the \'unit\': "meter" command invalid. Also, the command to "change your direction to the opposite way" is not handled by the provided JSON as there\'s no parameter to specify direction change.']
Halt your movement and proceed in the opposite direction.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The command suggests a halt and a move in the opposite direction. But the provided JSON structure only includes stopping the movement i.e., linear_speed and distance are set to 0, and does not include the information to move in opposite direction.']
Move 3 meters to the right.,{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}};["4; Partially conform. The command asks for moving to the right, while the JSON structure shows moving forward. The distance matches, but the direction doesn't. The speed is not specified in the command, so any value in JSON is acceptable. The unit of measurement is correctly represented."]
Shift 3 meters towards the right.,{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}};['1; The action "move" matches but the command specifies a direction ("towards the right") which is not represented in the JSON structure. The JSON parameters "linear_speed", "is_forward", and "unit" are not mentioned in the command but are reasonable values. The command specifies a "distance" which matches with the JSON.']
Go 3 meters horizontally in the right direction.,{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}};['4; Although the action and parameters are correct, the "linear_speed" is not explicitly stated in the natural language command. A score of 5 would require the natural language command to specify all parameter values.']
Change your position by moving 3 meters to the right.,{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}};["2; The JSON structure matches the action of 'move' but the directions (right) provided in the command is not represented in the JSON and also the linear_speed is arbitrary as it is not mentioned in the natural language command."]
Traverse a distance of 3 meters towards the right.,{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}};["2; The natural language command does not match exactly with the provided JSON. The JSON structure does correctly identify the 'move' action which is implied in the command, but there is information lost. The command specifies a 'right' direction which is not provided for in the JSON. Also, the 'linear_speed' parameter does not have a specified value in the command, thus its JSON value of 1 is arbitrary."]
Rotate clockwise by 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": true, "unit": "degrees"}};["5; The natural language command is perfectly matched with the JSON structure. The action 'rotate' is correct, and all the parameters 'angle', 'is_clockwise', and 'unit' are included. Although 'angular_velocity' is not specified in the command, it's a reasonable null value in the JSON structure."]
Perform a clockwise rotation of 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform. The command "Perform a clockwise rotation of 60 degrees" aligns perfectly with the "rotate" action in the JSON structure, including the "angle" of 60 and the "is_clockwise" parameter set to true. The "angular_velocity" value isn\'t specified in the command, but as per instruction, any reasonable value is accepted.']
Rotate 60 degrees in a clockwise direction.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform.']
Turn to the right by 60 degrees.,{"action": "move", "params": {"linear_speed": 0.8, "distance": 2, "is_forward": true, "unit": "meter"}};['0; The natural language command instructs a rotation action but the JSON structure represents a movement action. There is no conformity between the command and JSON structure.']
Rotate to the right by an angle of 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['4; The JSON command matches the natural language command, but the "is_clockwise" key is set to false when it should be true as the command specifies a rotation to the right, which is typically considered a clockwise direction.']
Turn right and move forward for 1 second.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; The natural language command has been partially matched with the JSON structure. The \'rotate\' action in the JSON is somewhat correlated with the \'turn right\' part of the command, but the \'move forward\' part of the command is not represented in any way. Additionally, the command specifies a duration (\'1 second\') which is not represented in the JSON structure. Also, the "angular_velocity" value doesn\'t match with provided JSON structures.']
Take a right turn and proceed straight ahead for 1 second.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; The command instructs a right turn which matches the action \'rotate\' in the JSON structure and also implies a clockwise direction. However, the \'angular_velocity\' and \'angle\' are not specified in command and their values in the JSON do not seem to directly correlate with the command. Moreover, the "is_clockwise": false is opposite to the command of making a right turn. Also, the instruction to \'proceed straight ahead for 1 second\' does not have a corresponding JSON structure.']
Make a right turn and advance for 1 second.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['1; The natural language command doesn\'t conform much to the provided JSON structure(s). It talks about making a right turn which matches with the "rotate" action in JSON but the values of parameters like "angular_velocity", "angle" and "is_clockwise" are not fully accurate. The command also mentions advancing for 1 second which is not covered in the JSON structure.']
Rotate to the right and move forward for 1 second.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};["1; The command wants to rotate to the right and move forward for a period of time. The JSON code given only carries out the rotate function, and it does not specify either the angular velocity or the angle of the turn. Also, the 'move forward' part of the command is not represented in the JSON code."]
Go right and continue moving forward for 1 second.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};['2; The natural language command instructs to "go right and continue moving forward for 1 second", but the JSON action is only "move". The JSON doesn\'t account for the direction ("right"). Moreover, the "distance" parameter in the JSON is not corresponding with "1 second" in the command. It appears to be moving a distance, not for a certain time duration.']
Go to the bedroom and stop.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['0; The command "Go to the bedroom and stop" does not conform to the JSON structure provided, as there isn\'t any action of going to a specific location ("bedroom") or stopping. The given JSON structure reflects a rotation action instead.']
Head to the bedroom and come to a halt.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}};['1; The natural language command asks for movement towards a location, "Bedroom", which corresponds to the action "go_to_goal" and the parameter\'s value "Bedroom" in the JSON structure. However, the command also asks for a halt, which does not exist in the provided JSON structure and sample keys. Thus, the conformity score is low.']
Make your way to the bedroom and cease all movement.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}};['1; The given command partially matches with the sample JSON structure. The action of going to a specific location is represented correctly in the JSON ("action": "go_to_goal" and "location": "Bedroom"). However, the command to "cease all movement" is not reflected in the JSON structure at all. Therefore, the match is incomplete.']
Proceed to the bedroom and pause.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}};['2; The natural language command only matches with the "go_to_goal" action in the JSON structure and not the "pause" action. There are no commands for pausing or stopping in the sample keys. Therefore it is a partial match.']
Go to the bedroom and stand still.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}};['3; The command corresponds to the "go_to_goal" action in the ontology, with "Bedroom" accurately filling the location parameter. However, the instruction to "stand still" isn\'t reflected in any action or parameters in the provided JSON examples.']
Move backward for 8 meters.,{"action": "move", "params": {"linear_speed": -1, "distance": 8, "is_forward": false, "unit": "meter"}};['5; Exactly conform.']
Go 8 meters in reverse.,{"action": "move", "params": {"linear_speed": 0, "distance": 8, "is_forward": false, "unit": "meter"}};['3; Although the natural language command and the JSON structure match in terms of action, the given value for "linear_speed" in JSON structure does not match the command. The command says "Go 8 meters in reverse," which assumes some speed but doesn\'t necessitate it to be 0. Also, the "is_forward" key has a correct value as per the command.']
Travel 8 meters in the opposite direction.,{"action": "move", "params": {"linear_speed": 0, "distance": 8, "is_forward": false, "unit": "meter"}};['3; The command partially matches with the JSON structure. However, the "linear_speed" parameter is set to 0 in the JSON, while it is not specified in the command. This does not make sense because the robot cannot move without a speed. A reasonable value for "linear_speed" would make the JSON comply better with the command.']
Retreat for a distance of 8 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": 8, "is_forward": false, "unit": "meter"}};['3; The "linear_speed" value in JSON object is not provided in the natural language command, "is_forward" value is false while there is no such indication in the command as it just says to retreat and the distance and unit are correctly reflected from the command in JSON.']
Reverse 8 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": -8, "is_forward": false, "unit": "meter"}};['4; Almost conform. The JSON structure matches the command fairly well, indicating a "move" action with distance specified as "-8" meters, which indicates a reverse movement. However, "linear_speed" is given as 0, which isn\'t likely a reasonable value for a move action. JSON structure isn\'t specifying direction which is present in natural language command.']
Rotate counterclockwise by 270 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 270, "is_clockwise": false, "unit": "degrees"}};['5; The JSON structure aligns perfectly with the natural language command. The action "rotate" is correctly identified, and all parameters ("angular_velocity", "angle", "is_clockwise", and "unit") are properly converted to their corresponding values. Although the "angular_velocity" value is not specified in the command, a reasonable value is assigned in the JSON structure.']
Turn left by 270 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": false, "unit": "degrees"}};['4; The command is almost perfectly translated into the JSON structure. "Turn left by 270 degree" fits into the "rotate" action type. The angle parameter is correctly captured as 270. However, the "is_clockwise" flag is false as turning left implies a counterclockwise rotation and the angular_velocity is not specified in the command and therefore a null value in the corresponding field is acceptable. The orientation use case is not included in the sample ontology.']
Rotate anti-clockwise by 270 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 270, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Rotate in the opposite direction by 270 degrees.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": -270, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform. The command explicitly instructs to "rotate," which directly matches the "action" in the JSON. The "params" contain all necessary details, including "angle" (270 degrees) specified correctly, "angular_velocity" (with a reasonable value of 10), "is_clockwise" as false (since opposite direction is specified), and "unit" for the angle as "degrees.']
Perform a 270-degree counterclockwise rotation.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": false, "unit": "degrees"}};["4; The JSON command correctly identifies the action to be performed which is to rotate and also gives the appropriate direction and units which is counterclockwise and degrees respectively. However, the angular_velocity value is missing. Although the value is not specified, a null value indicates the absence of any value which isn't a reasonable assumption for a rotation command."]
Turn left and move forward for 6 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 6, "is_forward": true, "unit": "second"}};['2; The natural language command is partially conform to the JSON provided. Although the "move" action and the "is_forward" parameter can be correctly identified, but the "distance" parameter is specified in seconds in the natural language command, whereas in the JSON structure it is not clear what unit (it\'s suggested to be in "meter") it should be in. The "turn left" command has no corresponding action or parameter in the JSON structure.']
Go forward for 6 seconds after turning left.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; The natural language command instructs to \'go forward for 6 seconds\' but there is no JSON command for a move action. However, the \'turning left\' part of the natural language command is correctly translated in the corresponding JSON structure with the action "rotate" and the parameter "is_clockwise" set to false.']
Take a left turn and proceed straight for 6 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};["1; The JSON structure does correspond to the action 'rotate' or 'turn' from the command, but none of the parameters are correctly defined according to the command. The 'is_clockwise' parameter is correctly set to false for a left turn, but angular velocity and angle are left undefined, which does not align with the command. There is also no JSON structure corresponding to the action of proceeding straight."]
After turning left, continue moving forward for 6 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 6, "is_forward": true, "unit": "second"}};['2; The JSON structure partially matches the command. The action of moving forward is correctly captured in the JSON, including the distance and direction. However, the action of turning left is not captured in the JSON. The unit of measurement for the distance should also be in "meters" based on the sample ontology, but instead it is given in "seconds", which is incorrect.']
Make a left turn and move ahead for 6 seconds.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['1; The JSON structure slightly matches the natural language command as it only covers the "make a left turn" with action "rotate" and parameter "is_clockwise" as false. However, it does not cover the part about moving ahead for 6 seconds and the angular_velocity and angle do not have values.']
Turn left and move forward for 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};["1; The natural language command asks for both a 'turn' and a 'move' action. While the JSON structure does provide information for a 'move' action with parameters that play their respective parts in defining the move (linear_speed, distance, is_forward, unit), the 'rotate' action is not included in the provided JSON structure. Thus, there is a partial match but it doesn't completely conform to the natural language command."]
Take a left turn and proceed ahead covering a distance of 5 meters.,{"action": "rotate", "params": {"angular_velocity": ?, "angle": ?, "is_clockwise": false, "unit": "degrees"}};["2; Partial conformity. The action 'rotate' in the JSON matches with the command 'Take a left turn' but there are incomplete parameters. The second part of the command 'proceed ahead covering a distance of 5 meters' is not covered in the given JSON, hence the lower score."]
Make a left turn and continue moving straight, covering a distance of 5 meters.,{"action": "rotate", "params": {"angular_velocity": ?, "angle": ?, "is_clockwise": false, "unit": "degrees"}};['3.5; The command suggests two different actions - rotation and movement, while the provided JSON structure only represents the rotation. However, the rotation action is correctly interpreted, with "is_clockwise" set to false indicating a left turn. Angular velocity and angle values could not be defined based on the natural language command, so placeholders are acceptable.']
Go left and advance forward, traveling a distance of 5 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}};['4; Mostly conform. The "move" action and all parameters (linear_speed, distance, is_forward, unit) match the natural language command. However, the command also specifies a direction ("Go left") that is not accounted for in the JSON.']
Execute a left turn and proceed straight, ensuring a distance of 5 meters.,{"action": "rotate", "params": {"angular_velocity": ?, "angle": ?, "is_clockwise": false, "unit": "degrees"}};['4; Partially conform. The command to execute a left turn is correctly expressed in the JSON representation for the action "rotate" and the parameter "is_clockwise" as false. However, there\'s no specific angle or angular_velocity given in the natural language command. Moreover, the instruction to proceed straight ensuring a distance of 5 meters is missing in the JSON structure. A second JSON conforming to the "move" action would be needed to completely match the original command.']
Rotate counterclockwise by 90 degrees.,Consider the following ontology:{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['1; The command refers to an action ("rotate") that exists in the ontology, and even specifies the direction contrary to the default "is_clockwise": true in the JSON structure. However, the action in the command is different from the one defined in the given JSON structure ("go_to_goal"), and the "angular_velocity" is not specified. Therefore, it partially matches with sample JSON structure but not completely with the given example.']
Turn 90 degrees in the counterclockwise direction.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -90, "is_clockwise": false, "unit": "degrees"}};['4; The command correctly calls for an action of rotation, and engages the angular_velocity, angle, is_clockwise, and unit parameters. However, the given angular_velocity and the direction ("-90") do not match with those in the JSON (0.35 and 90 respectively). A "reasonable" value for angular_velocity in the context of a rotation of 90 degrees could be anything less than or equal to 90, not necessarily 1, hence resulting in a point deduction.']
Rotate anti-clockwise at a 90-degree angle.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['4; Although the "angular_velocity" is not specified in the natural language command, the other parameters ("angle", "is_clockwise", "unit") perfectly match their JSON structure. Hence, the conformity score is very high.']
Spin to the left by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['5; The JSON structure is completely in line with the natural language command. Although "angular_velocity" is null in the JSON, this is acceptable as the value was not specified in the original command. Therefore, the level of conformity is very high.']
Rotate in the counterclockwise direction, making a 90-degree turn.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['5; The natural language command matches very well with the JSON information. Even though the "angular_velocity" in the JSON doesn\'t match a specific value in the command, it is a reasonable setting for a rotation action. The important details are all present: rotating, a 90 degree angle, and a counter-clockwise direction mentioned (therefore, "is_clockwise": false). The unit of rotation "degrees" is also correctly represented.']
Move backward for 3 seconds.,{"action": "move", "params": {"linear_speed": -1, "distance": 0, "is_forward": false, "unit": "meter"}};["2; The natural language command does specify the action 'move' and the parameter 'is_forward' is false which correctly refers to moving backward. However, the command does not specify distance, but a duration of movement ('3 seconds'). The given JSON structure doesn't have any parameter for time duration. Moreover, the 'linear_speed' in JSON information is marked '-1', which is not specified in the natural language command either. So the match is not perfect."]
Go in reverse for a duration of 3 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "duration": 3, "unit": "second"}};['2; The action "move" matches but many of the parameters in the JSON structure such as "linear_speed" and "distance" are not explicitly mentioned in the command or their values do not match. The "is_forward" parameter is false in JSON which matches the idea of moving in reverse in the command. The "duration" parameter does not exist in the ontology, but its use is reasonable.']
Take a step back and continue for a total of 3 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": false, "unit": "meter"}};['2; The command somewhat matches the JSON structure with the action of movement and direction (backwards). But the command mentions taking steps for a specific amount of time, which is not represented in the JSON structure. The unit of distance is also not mentioned in the natural language command.']
Reverse your movement and maintain it for 3 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The JSON structure has the correct action type "move" and "is_forward": false correctly indicating a reverse movement, but the natural language command specifies maintaining this action for 3 seconds, which is not represented in the JSON. Furthermore, linear_speed and distance are set to 0 which does not represent a movement.']
Retreat for a period of 3 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};["2; The action in the JSON structure 'move' can be interpreted as a 'retreat' action however, the parameters don't match the natural language command well. There is no mention of a period of '3 seconds' in the JSON structure."]
Turn right and move forward for 10 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['3; The JSON structure partially matches with the command. The angle to turn is mentioned correctly as 90 degrees but the "is_clockwise" parameter should be true for a right turn. However, the movement component of the command is not represented in the JSON structure at all. So, it\'s a partial match.']
Proceed forward for 10 meters after making a right turn.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; The JSON partially matches the command. Although the rotation parameters of the command are satisfied by the JSON, the "move forward" part of the command is not represented in the JSON provided.']
Take a right and continue moving ahead for a distance of 10 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 10, "is_forward": true, "unit": "meter"}};['2; The JSON structure partially reflects the natural language command. The action of moving forward for a certain distance is present in the JSON. However, the command of taking a right is not reflected in the JSON structure.']
Make a right turn and travel straight ahead for a total of 10 meters.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; The natural language command partially matches with the JSON information. It corresponds with the "rotate" action in the JSON structure but lacks the move or "go forward" action. The JSON given only reflects turning right but does not include going straight ahead for any distance.']
After turning right, advance forward and cover a distance of 10 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};['1; The command instructs the system to turn right and move forward a certain distance, but the provided JSON structure only reflects the rotation action and not the moving forward action. Therefore, the correspondence between the command and the JSON structure is partial. Additionally, the parameters "angular_velocity" and "angle" are not specified in the natural language command, hence should be given as null in the JSON.']
Rotate clockwise by 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform.']
Perform a 180-degree clockwise rotation.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform.']
Turn in a clockwise direction by 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['4; The action is correctly identified as "rotate" and parameters "angle", "is_clockwise", and "unit" are correctly set. The "angular_velocity" parameter wasn\'t mentioned in the command, so it has been marked as null. The score isn\'t 5 because "angular_velocity" being null technically mismatches the JSON information provided, even though it is an acceptable value.']
Execute a rotation of 180 degrees in a clockwise manner.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform. The command, "exectute a rotation of 180 degrees in a clockwise manner" exactly matches with the provided JSON structure. The values of "action" is "rotate", "angle" is 180, "is_clockwise" is true, which are all correct. The field "angular_velocity" has been declared null which is acceptable because its value was not specified in the command.']
Rotate by 180 degrees, following the clockwise direction.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};["4; The JSON structure fully matches the command. Only the angular velocity isn't mentioned in the command, thus null is an acceptable value in the JSON structure."]
Move forward at a speed of 0.5 meters per second for 4 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}};["3; Partial match. The command is interpreted correctly as a move action with a forward direction and a certain speed. However, the time for the movement is not represented within the JSON structure. Instead, a distance parameter is provided which isn't mentioned in the natural command. The value of 'distance' does not conform to the command either."]
Go ahead for 4 seconds at a velocity of 0.5 meters per second.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}};['4.5; The command matches well with the JSON structure in terms of the action and parameters however, the command mentions going forward for 4 seconds, not a specific distance. The JSON structure uses distance as a parameter, not time. Hence the given distance in the JSON is a presumption based on the speed and time mentioned in the command.']
Progress at a speed of 0.5 meters per second for a duration of 4 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}};["4; The natural language command and JSON information match in terms of action and linear speed. However, in the command, it specifies a 'duration', which isn't a parameter in the JSON structure. Instead of 'duration', 'distance' parameter is used in JSON. Although a distance is calculated in the JSON structure, it isn't mentioned in the command. Also, 'is_forward' parameter isn't specified in the command."]
Travel forward for 4 seconds, maintaining a speed of 0.5 meters per second.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}};['4; The command partially matches the JSON information. The "action" and "linear_speed" parameters match, and while "is_forward" is inferred, the "distance" could be calculated from the command (0.5 meters/second * 4 seconds = 2 meters), However, the command doesn\'t specify the duration explicitly which is reflected in JSON as "distance". So, it\'s not a perfect match.']
Proceed at a rate of 0.5 meters per second for a time span of 4 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}};['4; The "distance" value can be deduced from the given "linear_speed" and "time span", but the natural language command does not precisely specify "distance". Other keys match correctly.']
Turn left and move backward for 2 meters.,{"action": "move", "params": {"linear_speed": undef, "distance": 2, "is_forward": false, "unit": "meter"}};["2; Partially conform. The command matches with the movement but there's no mention of the 'rotate' action to justify turning left in the JSON."]
Take a left turn and proceed backwards for a distance of 2 meters.,{"action": "rotate", "params": {"angular_velocity": ?, "angle": ?, "is_clockwise": false, "unit": "degrees"}};['2; The natural language command instructs to "take a left turn" which partially matches with the "rotate" action in the JSON structure but no specific "angle" is provided. The direction "left" corresponds to "is_clockwise": false. However, the command also asks to "proceed backwards for a distance of 2 meters" which is not represented in the JSON structure.']
Make a left turn and travel in reverse for a distance of 2 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": 2, "is_forward": false, "unit": "meter"}};['2; The JSON structure matches the natural language command partially, the \'move\' action is correct and \'distance\': 2 and \'unit\': "meter" are correct. However, the command specifies to "Make a left turn" which is not represented in the JSON. Also, the command specifies to "travel in reverse" where \'is_forward\' should be false but the JSON has 0 for "linear_speed" which doesn\'t align with the command.']
Rotate left and proceed in reverse for a total distance of 2 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['2; The command asks for a rotation and then a move in reverse, but the JSON structure only contains a rotation action. The specification of "left" in the command is not represented in the JSON as an angle or direction, so it is a partial match. Therefore, it gets a score of 2.']
Shift to the left and move backwards covering a distance of 2 meters.,{"action": "move", "params": {"linear_speed": , "distance": 2, "is_forward": false, "unit": "meter"}};['2; The command partially matches the JSON structure. The command "Shift to the left" can not be mapped to the provided JSON structures, hence it doesn\'t conform to the ontology. However, the command "move backwards covering a distance of 2 meters" perfectly maps to the "move" action in the JSON where "distance": 2, "is_forward": false are correctly interpreted. But there is no value provided for "linear_speed" which makes the JSON incomplete.']
Move forward for 7 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 3.5, "is_forward": true, "unit": "meter"}};['3; Some parameters match such as "action": "move" and "is_forward": true. But the parameters "distance", "linear_speed" and "unit": "meter" aren\'t mentioned in the command. Moreover, "for 7 seconds" does not have a corresponding key-value pair in the JSON structure.']
Proceed ahead for a duration of 7 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 0, "is_forward": true, "duration": 7, "unit": "second"}};['1; The command has instructed the machine to move forward for a duration of 7 seconds. But this is not properly represented in JSON structure, and the attribute \'duration\' is not present in the provided sample keys. Also, there is a mismatch between the parameters specified in JSON ("distance") and the parameters not specified in the command.']
Advance for a period of 7 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 0, "is_forward": true, "unit": "meter"}};["1; The JSON structure reflects a move action, but there's no match with the natural language command's request to advance for a specific period of time. The parameters in the JSON are also not completely matching as it includes distance and unit parameters which are not specified in the command."]
Keep moving forward for 7 seconds.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['0; The natural language command speaks about continuing to move forward for 7 seconds, but the provided JSON structure corresponds to going to a specific location ("Kitchen"), which doesn\'t match with the command.']
Continue ahead for a total of 7 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 7, "is_forward": true, "unit": "second"}};['1; The command instructs a temporal movement that lasts for 7 seconds, which is quite different from distance-oriented movement. The parameter "distance" does not match with "7 seconds". Also, the unit "second" does not exist in the sample ontology which only integrates spacial measurements (meters, degrees), not temporal ones. So the use of "seconds" as a unit of distance is improper in this context.']
Rotate counterclockwise by 30 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": -30, "is_clockwise": false, "unit": "degrees"}};['4; The natural language command matches with the action "rotate" in the JSON structure but not all parameters match perfectly. The "angular_velocity" and the direction of rotation "is_clockwise" is not specified in the natural language command. The "angle" is specified as -30 in JSON structure which is incorrect as the angle is 30 in the natural language command and the direction is provided as "counterclockwise" which makes the "is_clockwise" false.']
Turn left by an angle of 30 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 30, "is_clockwise": false, "unit": "degrees"}};['4; Angular velocity is not specified in the natural language command, but other key-value pairs in the JSON align perfectly with the command.']
Rotate anticlockwise by 30 degrees.,NoneThe prompt does not contain any action in the ontology, so it should be ignored.Now give the JSON corresponding to this prompt:Move forward for}};['0; The provided natural language command is not related to any of the provided JSON structures.']
Rotate in the opposite direction by 30 degrees.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": -30, "is_clockwise": false, "unit": "degrees"}};['4; The natural language command corresponds to the "rotate" action in the JSON structure. The "angle" parameter is correctly matched with a value of -30, which implies rotation in the opposite direction. The "unit" is correctly identified as "degrees". However, the "angular_velocity" is not mentioned in the natural language command and thus having a value of 10 in JSON is not justified. The "is_clockwise" parameter is logically determined as false from "opposite direction" in the command but not expressly stated.']
Make a 30 degree counterclockwise rotation.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 30, "is_clockwise": false, "unit": "degrees"}};["4.5; The JSON structure correctly represents the action of rotation, angle, direction, and unit from the natural language command. Though the 'angular_velocity' is not provided in the command, it accepts the null value which is reasonable. But since it is not from the command, a 0.5 point is deducted."]
Move backward at a speed of 1 meter per second for 6 seconds.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['0; The natural language command is related to the action of moving backwards, but the JSON structure presented involves rotate action and related parameters, which does not match with the natural language command. Hence, they are not in conformity.']
Reverse your movement, traveling at a pace of 1 meter per second for a duration of 6 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": -6, "is_forward": false, "unit": "meter"}};['5; The JSON structure accurately represents the command and conforms to the keys of the sample ontology. The action is "move" with parameters "linear_speed", "distance", "is_forward", and "unit". The natural language command indicates that the movement should be reversed (hence "is_forward" is false), at a speed of 1 meter per second for 6 seconds (hence "distance" is -6 and "linear_speed" is 1), which are all accurately represented in the JSON. The unit used is "meter" which matches the command.']
Go in the opposite direction, maintaining a velocity of 1 meter per second for 6 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "meter"}};['4; The command is largely matched with the JSON structure but there is a disconnect in terms of parameters. The natural language command asks for a duration (6 seconds) at a certain speed (1 meter per second) but the JSON structure provided refers to a distance instead of a duration of travel time. Therefore, the command does not perfectly align with the sample JSON structure. However, rest of the values such as the action as "move", the linear_speed as 1, is_forward as false, and unit as "meter" all match directly.']
Travel backwards for 6 seconds at a speed of 1 meter per second.,{"action": "move", "params": {"linear_speed": 1, "distance": -6, "is_forward": false, "unit": "meter"}};['2; The JSON structure captures the command\'s intent to move and the speed to move at. However, it incorrectly represents the distance as -6 (resulting from an incorrect interpretation of "backwards for 6 seconds") and adds an "is_forward" key not mentioned in the command. The command also does not specify moving backwards, just moving for a specific amount of time. The "unit" value is also debatable since the command talks about time in seconds, not distance in meters.']
Invert your motion, moving at a rate of 1 meter per second for a period of 6 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "meter"}};['4.5; The natural language command almost perfectly matches the provided JSON information structure. However, the JSON structure lacks the "time" param, which was specified in the command ("for a period of 6 seconds"), so it\'s slightly mismatched.']
Turn right and move forward for 8 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['2; The natural language command and the JSON information have a partial conformity. Although the action of rotation is correctly reflected in the JSON structure, the "is_clockwise" parameter is false, which contradicts the command to "Turn right". Furthermore, the command request of "move forward for 8 meters" is not included in the JSON.']
Proceed for 8 meters after taking a right turn.,{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "meter"}};['2; The JSON structure contains only the second part of the command and does not cover the action of taking a right turn. Therefore, it only partially matches with the natural language command.']
Take a right and continue straight ahead for a distance of 8 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "meter"}};["1; The command asks for a right turn and then movement, while the JSON structure only provides the movement action. The 'rotate' action with a specific angle is also necessary to fully capture the command and is not included in the JSON structure."]
Make a right turn and then proceed ahead for 8 meters.,{"action": "rotate", "params": {"angular_velocity": undef, "angle": 90, "is_clockwise": true, "unit": "degrees"}};["4; The natural language command partially matches with the JSON information. The 'rotate' action is correctly translated into JSON structure, but there is no movement ahead in the JSON structure as indicated in the natural language command."]
After turning right, cover a distance of 8 meters by moving forward.,{"action": "move", "params": {"linear_speed": null, "distance": 8, "is_forward": true, "unit": "meter"}};['4; The command specifies the "move" action with "distance", "is_forward" and "unit" parameters matching. However, it also involves a rotation (turning right) but there\'s no corresponding JSON structure for the rotation. The "linear_speed" parameter also doesn\'t have a value in the command.']
Rotate clockwise by 270 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['5; The JSON structure perfectly matches the command. The "rotate" action, the "angle" as 270 degrees, the direction as \'clockwise\' and the "unit" as degrees are all specified. The "angular_velocity" is not specified but a null value is acceptable for unspecified parameter.']
Turn 270 degrees to the right.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": false, "unit": "degrees"}};['1; The command is partially accurate. It correctly identifies the action as "rotate" and the "angle" parameter as 270, "unit" as "degrees", but the "is_clockwise" parameter has been set to false, whereas in the natural language command, it\'s specified as "to the right" which would need "is_clockwise" to be true. The angular velocity is also set to null which is acceptable as per the rules but ideally should have been a valid value.']
Turn three-quarters of a full rotation to the right.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['1; The natural language command instructs the bot to turn three-quarters of a full rotation to the right. This is a rotation command, so the JSON structure aligns with the rotation action. However, the natural language command details do not exactly match the provided JSON structure details. ', '', 'In the JSON structure, the angle is set to 90 degrees, which would constitute a quarter turn, not a three-quarter turn as specified in the command. Additionally, the "is_clockwise" value is set to false in the JSON, which contradicts the command\'s instruction to rotate to the right (which would be a clockwise rotation).', '', 'The adjusted JSON structure should be: ', '{', '  "action": "rotate",', '  "params": {"angular_velocity":<any value>, "angle":270, "is_clockwise":True, "unit":"degrees"}', '} ', '', 'The angular_velocity is not explicitly stated in the command, so any reasonable value is acceptable in the JSON. ', '', 'The significant misalignment between the natural language command details and the JSON structure leads to a low conformity score.']
Perform a clockwise rotation of 270 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['4; The JSON structure corresponds well to the natural language command. The action "rotate" and parameters "angle", "is_clockwise", and "unit" match with the command. However, the "angular_velocity" value doesn\'t have a value in the command which gives room for any reasonable value. Therefore, the score is not perfect.']
Rotate in the clockwise direction, making a 270-degree turn.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}};['5; The JSON structure perfectly matches the natural language command. All the parameters ("angular_velocity", "angle", "is_clockwise", "unit") presented in the JSON correctly correspond to the information given in the command.']
Move forward and then immediately stop.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 0.5, "is_forward": true, "unit": "meter"}};['3; Partially conform. The natural language command instructs a motion action but doesn\'t specify a "distance" and the JSON structure shows a "distance" of 0.5 which might be inferred as a short move, however it could be subjective based on different contexts. The command also instructs to "stop", this is not reflected or represented in this JSON.']
Proceed forward and promptly come to a halt.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};["2; The JSON structure features a 'move' action which could be inferred from the natural language command 'proceed forward'. However, the command also mentions 'promptly come to a halt' which is not reflected in the JSON structure and there is no 'stop' or 'halt' action in the sample ontology. Specifying a distance can be considered as an implication of halting, hence the partial match. The value of 'distance' is also not specified in the command but is accepted in the JSON because any reasonable value is accepted when not specified in the command."]
Advance and instantaneously cease movement.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The natural language command talks about moving but stopping immediately. However, the given JSON doesn\'t match well because the properties "distance" and "is_forward" both have values that indicate movement. The "linear_speed" is correct, indicating no movement, but the consistent non-movement state is not correctly represented in all fields. Furthermore, the natural language command is not specific about any direction of movement which could have been suggested by the "is_forward" key in the JSON.']
Go forward and abruptly pause.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};["0.5; The natural language command only partially conforms to the JSON information. It implies a movement action which is present in the JSON structure but it does not match the provided parameters as there isn't any command regarding an abrupt pause."]
Move ahead and promptly end motion.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};["4; The JSON structure largely conforms to the natural language command in that it contains an action of 'move' and indicates a forward direction. However, 'distance' and 'linear_speed' values are not specified in the command, making it incomplete. Additionally, 'promptly end motion' is not represented in the JSON structure."]
Turn left and move backward for 4 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 4, "is_forward": false, "unit": "meter"}};['2; In the given JSON structure, the "rotate" action and the "is_clockwise" parameter, both of which are relevant to the command\'s instruction to "turn left," are missing. However, the "move" action and its associative parameters are correctly identified and have the appropriate values.']
Make a left turn and proceed backwards for a distance of 4 meters.,{"action": "rotate", "params": {"angular_velocity": ?, "angle": ?, "is_clockwise": false, "unit": "degrees"}};['1; There is only a partial match for the JSON and the command. The command includes a direction for a left turn, which matches the JSON structure for "rotate". However, specifics such as "angular_velocity" and "angle" aren\'t mentioned in the command and are therefore unspecified. The command also includes the instruction to go backwards for a specific distance, which is not represented in the JSON at all.']
Go in the opposite direction and turn to the left, covering a distance of 4 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 4, "is_forward": false, "unit": "meter"}};['3; The natural language command matches the "move" action in the JSON structure. The parameters such as "distance" and "unit" are also present. However, there\'s information about the direction of the movement and the rotation actions mentioned in the command are not represented in the JSON structure.']
Rotate to your left and travel in the reverse direction, moving 4 meters behind.,{"action": "rotate", "params": {"angular_velocity": undef, "angle": undef, "is_clockwise": false, "unit": "degrees"}};["2; Partial match. The JSON structure includes the 'rotate' action similar to the command, however, since the angular_velocity and angle are undefined and there is no information about direction of rotation in the command, it can't be determined as a complete match. The command also mentions moving in a certain direction, but there's no corresponding JSON structure provided for the move action."]
Head left and travel in reverse for a total of 4 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 4, "is_forward": false, "unit": "meter"}};['4; Although the JSON structure correctly captures the action "move" and distance parameter as mentioned in the natural language command, it doesn\'t fully conform because the direction ("Head left") and method of traveling ("in reverse") are not accurately reflected in the JSON fields. However, it\'s partially conformed due to the correct action and the mention of distance. In addition, "linear_speed" is a reasonable inclusion since it goes hand-in-hand with "move" action although it was not explicitly stated in the command.']
Move forward for 10 seconds at a speed of 0.3 meters per second.,{"action": "move", "params": {"linear_speed": 0.3, "distance": 3, "is_forward": true, "unit": "meter"}};['3; The command mostly matches the JSON structure except for the "distance" key. In the command, the distance is not mentioned. However, the JSON has "distance" set to 3. This discrepancy in information results in an incomplete match. The command refers to time ("10 seconds") which does not exist in the JSON structure. Thus, the conformity score is not perfect.']
Advance for a duration of 10 seconds, maintaining a velocity of 0.3 meters per second.,{"action": "move", "params": {"linear_speed": 0.3, "distance": null, "is_forward": true, "duration": 10, "unit": "second"}};['3; The natural language command partially matches with the provided JSON structure. The action "move" and parameter "linear_speed" with a value of 0.3 are present in both. Additionally, the bot is moving forward (implied in "advance"). However, the natual language command gives a duration while the JSON structure uses distance. The duration is not part of the ontology. Also, "unit" in JSON structure does not match the command.']
Proceed ahead at a rate of 0.3 meters per second for a period of 10 seconds.,{"action": "move", "params": {"linear_speed": 0.3, "distance": 3, "is_forward": true, "unit": "meter"}};['2; The natural language command matches with the "move" action in the JSON structure. The parameter "linear_speed" with value 0.3 is mentioned correctly. The "is_forward": true is implicit in "Proceed ahead". However, the "distance" parameter value in the JSON does not conform to natural language command. Instead of "a period of 10 seconds", the JSON should have a "time" parameter.']
Travel straight ahead for 10 seconds, moving at a speed of 0.3 meters per second.,{"action": "move", "params": {"linear_speed": 0.3, "distance": 3, "is_forward": true, "unit": "meter"}};["2; The natural language command specifies a duration of movement (10 seconds) specifically, while the JSON structure shows either distance or linear speed. While it's reasonable to infer the distance traveled based on these two figures, the structure doesn't perfectly correspond with the command given. Also, units to measure time is missing."]
Go forward at a velocity of 0.3 meters per second, covering a distance for 10 seconds.,{"action": "move", "params": {"linear_speed": 0.3, "distance": 3, "is_forward": true, "unit": "meter"}};['2; The command stated to move forward at a speed of 0.3 meters per second for 10 seconds, which will cover a distance of 3 meters (0.3 m/s x 10 s). However, the provided JSON incorrectly puts the distance as 3. Furthermore, the unit for speed in the JSON should have been meter per second instead of just meter.']
Rotate counterclockwise by 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};["5; Exactly conform. The natural language command accurately corresponds to the JSON structure where the action is 'rotate', the angle provided is 60 degrees, and the direction is counter-clockwise. The 'angular_velocity' value is not specified in the command but its null value is accepted according to the rules."]
Turn left by 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['4; The natural language command indeed corresponds to the "rotate" action, but the JSON structured command missing the "is_clockwise" key\'s value.']
Rotate in the opposite direction by 60 degrees.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": -60, "is_clockwise": false, "unit": "degrees"}};['4; The command corresponds to the "rotate" action in the JSON structure. The angle and rotation direction (using the "is_clockwise" key in JSON) are matched accurately. The value of angular_velocity doesn\'t match, however, it can be considered as a reasonable value. The "unit" is also correctly specified as "degrees" in the JSON.']
Make a counterclockwise rotation of 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Rotate leftwards by 60 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['4.75; The JSON structure appropriately converts the natural language command. The action: "rotate" and parameters "angle" and "unit" are correctly identified. The "is_clockwise" is inferred from the direction "leftwards" as being false. However, the "angular_velocity" is not provided in the natural language command, so it could not be appropriately filled in.']
Move backward and then immediately stop.,{"action": "move", "params": {"linear_speed": -1, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The command indicates a backward movement but the JSON response does not match the example ontology provided: the "linear_speed" has a negative value which is not in the possible values in the sample ontology, and "distance" is given as 0 which is not implied in the command. As a result, there\'s some matching but it\'s not entirely accurate.']
Reverse and come to a sudden halt.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The natural language command fails to match with the JSON structure. The action "move" is correct but the parameters "linear_speed" and "distance" mentioned in JSON don\'t conform with natural language command, they should be assigned a reasonable value other than 0 according to the command. The "is_forward" parameter matches with the direction of movement indicated in the command as "reverse". The command, however, does not provide information about \'coming to a sudden halt\'.']
Go in reverse and abruptly cease.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['2; The natural language command tells to "Go in reverse" which is represented in JSON by "is_forward": false. However, "abruptly cease" is not represented in the JSON structure. The linear_speed and distance are set to 0 which implies no movement, contradicting the command to go in reverse. Therefore, the conformity is partial.']
Back up and instantly come to a standstill.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['2; The action and the \'is_forward\' key are appropriately implied as "move" and \'false\' respectively. However, \'linear_speed\' and \'distance\' values are not according to the command\'s instruction of backing up. The value for \'linear_speed\' has been set to 0, implying no movement while command says to back up, and the \'distance\' is also set to 0, meaning no movements, while the command talks about backing up which implies some distance coverage.']
Move backwards and promptly come to a stop.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The action is somewhat compatible as moving does take place in the natural language command. However, \'is_forward\' in JSON structure should be true, not false as \'move backwards\' is suggested, and it\'s not clear that the \'linear_speed\' and \'distance\' should be 0 based on the command "Move backwards and promptly come to a stop".']
Turn right and move forward for 6 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The natural language command specifies a movement forward and to the right, but the provided JSON structure only represents a stationary movement (0 linear speed, 0 distance). The direction of movement is also incorrect in the JSON structure, which indicates a backward movement ("is_forward": false) instead of the forward movement indicated in the command. However, the JSON action type "move" and the distance unit "meter" conform to the given command, hence a partial match.']
Make a right turn and proceed straight ahead for a distance of 6 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}};['1; The JSON structure given does not match the natural language command correctly. The command instructs a right turn before moving forward which is not reflected in the "action" and "params" keys of the JSON structure. The values for "linear_speed" and "distance" are also incorrect (0 instead of a reasonable value) and "is_forward" is false instead of true.']
Go to your right and continue moving forward for a total of 6 meters.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['0; The command does not match with the provided JSON structures. It instructs a movement in a specific direction and a certain distance, which isn\'t represented in the "go_to_goal" action. Furthermore, the "location" value of "Kitchen" in the JSON does not correspond to any part of the command.']
Take a right turn and advance ahead, covering a distance of 6 meters.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['0; The given natural language command is about making a right turn and moving ahead by a certain distance. However, the JSON structure describes the action of going to a specific location (Kitchen) which does not correspond with the command. Therefore, the conformity score is 0.']
Head towards the right and maintain a straight path for 6 meters.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['0; The provided JSON structure does not match the natural language command. The command is indicating a movement and distance, not going to a specific location as the "Kitchen".']
Rotate clockwise by 120 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 120, "is_clockwise": true, "unit": "degrees"}};["5; The given natural language command corresponds perfectly to the JSON structure. All keys are correctly used and specified within the natural language command. The value is_clockwise is correctly set as true for a clockwise rotation and the rotation angle is correctly set as 120 degrees. The angular_velocity isn't specified in the natural language command, but any reasonable value in the JSON is accepted as per the guidelines."]
Turn 120 degrees in a clockwise direction.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 120, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform. The natural language command matches perfectly with the JSON structure. The action of rotating is clearly defined, as are the parameters, including the angle, the direction (clockwise), and the unit (degrees).']
Move in a clockwise rotation by 120 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 120, "is_clockwise": true, "unit": "degrees"}};["5; The natural language command exactly conforms to the provided JSON structure. The action 'rotate', all parameters including 'angle', 'is_clockwise', and 'unit' match perfectly. The 'angular_velocity' is not specified in the command but it's considered acceptable as per the guidelines."]
Adjust the rotation by 120 degrees in a clockwise manner.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 120, "is_clockwise": true, "unit": "degrees"}};['4; The JSON structure accurately transcribes the command\'s instruction to rotate 120 degrees clockwise. The `angular_velocity` field is left as null, which is reasonable as the original command did not specify a speed for the rotation. However, it would have been more precise if the "unit" was specified in the natural language command.']
Execute a 120-degree clockwise rotation.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 120, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform. The command can be directly mapped to the rotation action in JSON with all values present and matching.']
Move forward and then backward for 5 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 120, "is_clockwise": true, "unit": "degrees"}};["1; The natural language command instructs to move forward and then backward for a certain distance which matches the 'move' action in the JSON ontology, but the corresponding JSON structure provided is for the 'rotate' action, which doesn't match the command. Thus, the correspondence is quite low."]
Proceed ahead and then return in reverse for a distance of 5 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 120, "is_clockwise": true, "unit": "degrees"}};["0; The JSON structure does not match with the given command. The command implies a 'move' action with a specified distance but the provided JSON denotes rotation action without specifying the values in the command."]
Advance forward and then retract for a distance of 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['3; The natural language command partially matches with the JSON structure. The action "move" and the parameter "is_forward" match, but the command mentions both advancing (moving forward) and retracting (presumably moving backwards), which doesn\'t match with the JSON\'s "is_forward": true. Additionally, the specified "distance": 5 matches the distance mentioned in the command but the "linear_speed": 1 doesn\'t have a corresponding match in the command. The command also doesn\'t provide information to align with the "unit" parameter.']
Go straight ahead and then move backward covering a span of 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['1; None of the parameters of the natural language command match with the provided JSON command. For the "move" command, "linear_speed" is not specified in the natural language command, "distance" is mentioned but the direction is missing as it first instructs to move straight ahead and then backwards, so it is unclear about the exact movement. The "unit" matches but the overall conformity is minimal.']
Propel forward and then reverse, covering a distance of 5 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}};['3; The JSON structure partially matches the natural language command. The command "Propel forward and then reverse" would imply two actions (move forward and move backward) rather than a single one. However, the JSON structure only represents moving forward for a distance of 5 meters. The reverse action is not represented in the JSON structure.']
Move forward for 10 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward":}};['3; The command matches the "move" action with a "is_forward" parameter, which corresponds with the JSON structure. However, the commanded distance (10 meters) does not match the given distance in the JSON structure (5 meters). Also, the "linear_speed" parameter is not specified in the natural language command so any reasonable value is accepted, but the JSON structure should not lack the "is_forward" value.']
Proceed straight for a distance of 10 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward":}};['2; The natural language command\'s instruction does match the "move" action in JSON, however, the specified distance in natural language command ("10 meters") does not match the distance provided in JSON structure ("5"). Furthermore, the "is_forward" key in the JSON structure does not have a specified value which should be True according to the natural language command.']
Advance ahead by 10 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward":}};['3; The "action" command matches as both refer to movement. The "distance" in the natural language command also corresponds with the JSON structure. However, the natural language command specifies a distance of 10 meters while the JSON structure specifies 5 meters. Additionally, the "is_forward" parameter in the JSON structure does not have a corresponding value, contrary to the natural language command which implies forward movement. Last, the "linear_speed" in the JSON structure does not correspond with any information in the natural language command.']
Go straight ahead covering a distance of 10 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}};['4; The JSON structure is aligned with the natural language command as it has properly translated the action to be carried out (moving) and the parameters needed (linear speed, distance, direction as forward, and the distance unit). However, the linear speed value in the JSON structure is not specified in the natural language command.']
Travel in a forward direction for 10 meters.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living Room"}};['1; The command provided asks the system to "travel in a forward direction for 10 meters." However, the JSON structure provided is for the action "go_to_goal" with a parameter value of "Living Room". This JSON structure more accurately corresponds to a command like "go to the living room". There is not much alignment in the natural language command to the JSON structure provided which is why the score is 1.']
Turn left and move forward for 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['2; The JSON structure partially matches the command. The direction of \'Turn left\' is not represented in the JSON structure, beside that the "move" action and the distance of 5 meters are correctly represented in JSON. Also, the value for linear_speed is not specified in the natural language command.']
Make a left turn and proceed ahead for a distance of 5 meters.,{"action": "rotate", "params": {"angular_velocity": ?, "angle": ?, "is_clockwise": false, "unit": "degrees"}};['1; The JSON structure partially matches the natural language command. It correctly identifies the action to "rotate" however, the parameters "angular_velocity" and "angle" are missing values. The command also includes the action to move forward, which is not represented in the given JSON.']
Rotate towards the left and continue moving straight ahead covering a distance of 5 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['1; The command includes two actions: "rotate" and "move", but the provided JSON only addresses the "rotate" action but without specific parameters. The "move" action and its parameters such as "distance" are not included in the JSON. The "is_clockwise" parameter in the JSON is correctly set to false as rotating to the left is counter-clockwise. However, it lacks specific values for "angular_velocity" and "angle".']
Take a leftward turn and advance for 5 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": false, "unit": "meter"}};['1; The action type in the natural language command is not clearly defined in the JSON structure. The JSON represents a moving action, while the command mentions a turning action. Although a moving action is implied following the turn, it is not addressed in the JSON.']
Face left and go straight for 5 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['2; While some elements of the JSON partially match with the command, the rotation or turning aspect is not reflected in the JSON. The "face left" command implies a rotational movement which is not present in the provided JSON.']
Rotate counterclockwise by 90 degrees.,Consider the following ontology:{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['1; The natural language command corresponds to a "rotate" action which is not present in the provided ontology. The parameters "angle" and "is_clockwise" would match with the given values of 90 degrees and false (counterclockwise), however, the "action": "rotate" key itself is not included in the ontology. Therefore, while there is partial correspondence, the match is not exact.']
Rotate in an anticlockwise direction by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 360, "is_clockwise": true, "unit": "}};['1; The action mentioned in the natural language command matches with the "action" in the JSON structure. However, the values of the parameters in the JSON structure do not match those specified in the natural language command. The "angle" should be 90 in the JSON structure as indicated by the command, also, "is_clockwise" should be false in consideration of the "anticlockwise" direction in the command. The "angular_velocity" isn\'t specified in the command therefore its value in the JSON is accepted. The "unit" value in the JSON is incomplete.']
Perform a 90-degree counterclockwise rotation.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 360, "is_clockwise": true, "unit": "}};['2; The action "rotate" matches but the parameter values do not match: "angle" should be 90 instead of 360, "is_clockwise" should be false instead of true to reflect a counterclockwise rotation, and unit parameter is not fully provided in the JSON. The "angular_velocity" is not specified in the natural language command, thus any reasonable value in JSON is accepted.']
Turn left by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['4; The JSON structure matches the command in terms of action("rotate") and parameters("angle", "unit"), but there is no specification for "angular_velocity" and "is_clockwise" values in the command. However, the JSON has reasonable values for these parameters.']
Anti-rotate by 90 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['5; Exactly conform.']
Move backward for 3 meters.,{"action": "move", "params": {"linear_speed": -3, "distance": 3, "is_forward": false, "unit": "meter"}};['5; Exactly conform.']
Go in reverse for a distance of 3 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": 3, "is_forward": false, "unit": "meter"}};['4; The JSON structure conforms well to the natural language command by covering the action of moving in reverse and the distance of 3 meters. However, the command does not specify the linear speed so the given value of 0 in the JSON could be inaccurate hence a point is deducted. The "is_forward": false value correctly represents going in reverse.', '']
Retreat by 3 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": 3, "is_forward": false, "unit": "meter"}};['1; The JSON structure partially matches the command. The command suggests a retreat or moving backwards which is represented by "is_forward": false. However, the linear_speed value in the JSON doesn\'t conform to the command as it is 0 while the command suggests actual movement. Also, the \'move\' action does not exist in the sample ontology.']
Step back 3 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": 3, "is_forward": false, "unit": "meter"}};['3;Although the requested action matches the action in the JSON response, the parameter "linear_speed" does not conform to the natural language instruction. The speed is not specified in the command, meaning any reasonable value can be accepted. However, in the JSON structure, the "linear_speed" is given a value of 0, which means no movement at all, and cannot be considered reasonable in this context.']
Reverse direction and travel 3 meters.,{"action": "move", "params": {"linear_speed": 0, "distance": 3, "is_forward": false, "unit": "meter"}};['2; The natural language command partially matches the JSON structure. The action "move" and parameter "distance" matches but the natural language command specifies reversing direction, which implies "is_forward" should be false. On the other hand, the JSON structure states "linear_speed" is 0, which means the robot won\'t move at all, contradicting the command to travel 3 meters.']
Turn right and move forward at 0.5 m/s for 20 seconds.,{"action": "move", "params": {"linear_speed": 0, "distance": 3, "is_forward": false, "unit": "meter"}};["2; Partially conform. The JSON action 'move' correctly corresponds to the 'move forward' part of the command. Also 'linear_speed' of 0.5 m/s is in the command and the JSON. However, 'is_forward' in the JSON is false, but the command specifies moving forward. The command also mentions 'turn right', which isn't mentioned in the JSON. The 'distance' of 3 meters in the JSON is not mentioned in the command, it specifies time (20 seconds) instead. Finally, the command does not specify unit, but 'meter' is a reasonable default."]
Proceed straight for 20 seconds at a speed of 0.5 m/s after turning right.,{"action": "move", "params": {"linear_speed": 0, "distance": 3, "is_forward": false, "unit": "meter"}};["1; The JSON structure provided doesn't match with the natural language command. The command talks about moving forward and turning right, while the JSON structure refers to a non-forward movement and doesn't mention any rotation action at all. Also, the linear speed mentioned in the command doesn't match with the one in JSON structure."]
After making a right turn, travel forward for 20 seconds at a velocity of 0.5 m/s.,{"action": "move", "params": {"linear_speed": 0, "distance": 3, "is_forward": false, "unit": "meter"}};['1; The action in the natural language command matches the "move" action in the JSON structure. However, the natural language command specifies the duration of the move action, which is not a parameter in the sample ontology. Additionally, the values for "linear_speed" and "is_forward" in the JSON structure do not match those specified in the natural language command. The value for "distance" in the JSON structure is shown as a variable rather than a specific measure, and the natural language command does not provide a corresponding distance measure.']
Make a right turn and advance for 20 seconds at a rate of 0.5 m/s.,{"action": "move", "params": {"linear_speed": 0, "distance": 3, "is_forward": false, "unit": "meter"}};['0; The natural language command talks about making a right turn, which reflects the "rotate" action, not "move". Moreover, the JSON structure given is inconsistent with the command. For instance, "linear_speed" is given as 0, though the command mentions a rate of 0.5 m/s. Distance and is_forward parameters are also irrelevant to the command. Hence, there is no compliance between the command and JSON information.']
After turning right, maintain a speed of 0.5 m/s and move forward for 20 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": null, "is_forward": true, "unit": "meter"}};['2; The natural language command does include moving forward with a specific speed, which matches the action and the parameter "linear_speed" in the JSON structure. However, the command specifies a duration of movement (20 seconds) rather than a distance, which does not align with the "distance" parameter in the JSON. Furthermore, the command includes an action of turning right, which does not match anything in the provided JSON structure.']
Go to the living room and stop.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 30, "is_clockwise": false, "unit": "degrees"}};['0; The natural language command "Go to the living room and stop." doesn\'t match the provided JSON structure, which is a "rotate" action with specific parameters. Instead, the command indicates a "go_to_goal" action with a "location" parameter.']
Please proceed to the living room and come to a halt.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 30, "is_clockwise": false, "unit": "degrees"}};["0; The natural language command is asking to go to the living room, indicating a movement or location change, but the JSON structure corresponds to a rotation action, thus there isn't conformity between the given command and the JSON structure."]
Make your way to the living room and cease movement.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 30, "is_clockwise": false, "unit": "degrees"}};["0; The command instructs the system to go to the living room, however the provided JSON structure represents a 'rotate' action instead of a 'go_to_goal' action. Additionally, the JSON parameters do not include a 'location' key which the command implies. Therefore, the command is not in conformity with the JSON structure."]
Head over to the living room and pause.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 30, "is_clockwise": false, "unit": "degrees"}};['0; The JSON structure does not match with the command. The command is asking to go to the living room which is not related to the provided JSON instruction of rotating at an angular velocity of 5 and angle 30 degrees.']
Walk into the living room and stand still.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 30, "is_clockwise": false, "unit": "degrees"}};["0; The natural language command instructs the robot to go to a location (the living room), which would correspond to the 'go_to_goal' action type in the ontology, not the 'rotate' action provided. Furthermore, none of the parameters in the JSON align with those stated in the command."]
Move forward for 2 seconds at a speed of 1 meter per second.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 30, "is_clockwise": false, "unit": "degrees"}};['0; The natural language command instructs a forward move, which does not conform to the provided JSON command which instructs a rotation. Thus, there is no match between the command and the JSON information.']
Proceed straight ahead for a duration of 2 seconds with a velocity of 1 meter per second.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 30, "is_clockwise": false, "unit": "degrees"}};['0; The JSON command does not match the natural language command. The action in the JSON structure is "rotate", while the natural language command involves moving straight ahead. There is also no key for duration in the sample keys.']
Advance for 2 seconds with a speed of 1 meter per second in the forward direction.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Move ahead at a rate of 1 meter per second for 2 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}};['4; Mostly conform. The natural language command does match the action and most parameters of the provided JSON. However, the command phrase "for 2 seconds" does not directly translate to the "distance" parameter in the JSON. Some extra calculations would be expected here to convert time into distance using the given speed. The natural language command also lacks a definition for direction which the JSON string assumes as forward, yet it\'s reasonable to assume.']
Travel straight ahead for 2 seconds, maintaining a speed of 1 meter per second.,{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}};['5; The JSON structure accurately represents the action and parameters specified in the natural language command, with all parameters correctly labelled, and it works within the established ontology.']
Rotate clockwise by 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['4.5; The natural language command corresponds to the JSON structure in terms of action and parameters. But the value of "angular_velocity" is missing in the natural language command, so a null value in the JSON structure is accepted. However, with a stated value- this would have obtained a full score. Hence, a slight score deduction.']
Perform a clockwise rotation of 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; Exactly conform. The natural language command instructs a clockwise rotation of 180 degrees which is perfectly translated in the provided JSON structure. The "action" is "rotate", the "angle" is 180, the rotation is "is_clockwise" and the "unit" is in "degrees". The "angular_velocity" is not provided in the natural language command, hence it is null in the JSON.']
Rotate 180 degrees in the clockwise direction.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};["5; The command and the JSON structure match perfectly. The action is 'rotate', and the parameters are 'angle', 'is_clockwise' and 'unit', which are all included and correctly assigned in the JSON. The 'angular_velocity' is not specified in the command, but any value is accepted in this case."]
Turn in a clockwise direction and rotate by 180 degrees.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['5; The natural language command matches with the provided JSON structure. The command "Turn in a clockwise direction and rotate by 180 degrees." corresponds to the action "rotate", a specified angle of 180 degrees, a rotation direction which is clockwise, and the unit is in degrees. The unspecified value of "angular_velocity" in the command is correctly left as null in the JSON structure.']
Execute a 180-degree clockwise rotation.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};["5; Exactly conform. The given natural language command is in exact accordance with the given JSON structure in terms of action and parameters. The 'angular_velocity' is not specified in the command, and a null value is acceptable as per the guidelines."]
Move forward for 4 meters and then turn left.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['1; The provided JSON structure only corresponds to the \'turn left\' part of the command, with the correct angle for a left turn. However, it misses the \'move forward\' part of the command. Also, the "angular_velocity" value is null which is not reasonable in a real-world scenario.']
Proceed straight ahead, covering a distance of 4 meters, and subsequently make a left turn.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}};['2; The natural language command partially matches the JSON structure. The "move" action and its parameters are correctly represented. However, the command to "make a left turn" isn\'t captured in any JSON. The provided JSON structure does not have a place to accommodate this rotational movement information. The "rotate" action JSON structure isn\'t used to represent the left turn, which is the mismatch in this case.', '']
Go straight for a distance of 4 meters followed by a left turn.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}};['1; The provided JSON structure partially matches the command. The command includes two different actions - moving straight and making a turn. However, the provided JSON structure only describes the "move" action, not the turn. Additionally, the "linear_speed" parameter in the JSON structure is not specified in the command, so it can take any reasonable value. But the distance value in the JSON matches with the command.']
Advance in the forward direction, covering 4 meters, and then make a leftward turn.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}};['2; The natural language command partially matches with the first JSON structure as it mentions to advance in a certain direction for a specific distance which is coherent with the action "move" and the parameters under it in the sample JSON keys. However, the command also includes a leftward turn which doesn\'t correspond to any action in the provided JSON structures. Therefore, the natural language command only partially conforms to the sample ontology.']
Move ahead for 4 meters and then change direction by turning left.,{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}};['2; The natural language command has been partially converted into JSON. The "move" action matches, but the "rotate" action to "turn left" has not been represented in the JSON.']
Rotate counterclockwise by 60 degrees and move forward for 3 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};["4; The natural language command partially matches with the JSON structure. Rotation action is well defined but movement action ('move forward for 3 meters') is missing in the JSON structure. The 'rotate' action and parameters align with the sample ontology. The value of 'angular_velocity' is not specified in the command, so null is accepted."]
Turn left by 60 degrees and proceed ahead for a distance of 3 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};["1; The JSON structure only matches the rotation part of the command but doesn't match the moving ahead part of the command."]
Perform a 60-degree counterclockwise rotation and then move forward for 3 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['4; The natural language command partially matches with the two JSON structures. The command "Perform a 60-degree counterclockwise rotation" accurately matches with the JSON rotation structure. However, the part of the command "then move forward for 3 meters." is not expressed in the provided JSON structure.']
Rotate anti-clockwise by 60 degrees and advance 3 meters in the same direction.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}};['2; The natural language command includes both "rotate" and "move" actions, but only the "rotate" action is represented in the JSON structure provided. The "move" (advance 3 meters) action was not represented in the JSON.']
Firtly, turn 60 degrees to the left in a counterclockwise direction, and subsequently, move forward for 3 meters.,{"action": "rotate", "params": {"angular_velocity": null, "angle": -60, "is_clockwise": false, "unit": "degrees"}};['4; The natural language command correctly corresponds to the rotation action in the JSON structure. The parameter "angular_velocity" is not specified in the natural command, so its null value in the JSON is accepted. The angle of -60 and "is_clockwise": false also align with the command of "turn 60 degrees to the left in a counterclockwise direction". But the second part of the command regarding moving forward 3 meters is not represented in the provided JSON structure.']
Go to the bedroom and stop.,{"action": "rotate", "params": {"angular_velocity": 5, "angle": 45, "is_clockwise": false, "unit": "degrees"}};['0; The JSON structure does not match the command. The command says to go to the bedroom, which matches the "go_to_goal" action but it is not specified in JSON. The JSON structure has an "rotate" action but it isn\'t mentioned in the command. Also, the stop command is not represented in the JSON.']
Proceed to the bedroom and come to a halt.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}};["1; The action 'go_to_goal' and the value 'Bedroom' match the command, but 'come to a halt' is not represented in the JSON structure."]
Make your way to the bedroom and cease your movement.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}};['4; The command aligns with the "go_to_goal" action in the JSON structure. However, the "cease your movement" part of the command is not reflected in the JSON structure provided.']
Head towards the bedroom and come to a standstill.,{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": true, "unit": "meter"}};['1; The natural language command says to head towards the bedroom but the JSON has an action of "move" with a distance of 0 and no specified location. This doesn\'t match completely with the command. The command also doesn\'t mention anything about moving forward or what unit, which are present in the JSON.']
Move to the bedroom and pause.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}};['1; The natural language command partially aligns with the JSON structure. The "move to the bedroom" part maps correctly to the "go_to_goal" action and "location" parameter in the JSON structure. However, the "pause" command does not exist in the given sample JSON structures.']
Move backward for 7 meters at a speed of 0.8 meters per second.,{"action": "move", "params": {"linear_speed": 0.8, "distance": -7, "is_forward": false, "unit": "meter"}};['5; Exactly conform. The natural language command correctly corresponds to the provided JSON structure. Action type "move" is correctly identified, parameter values for "linear_speed" is set to 0.8, "distance" is set to -7 dictating a backward movement, "is_forward" is correctly set to false for moving backward, and "unit" for the distance is appropriately assigned as "meter".']
Travel in reverse for a distance of 7 meters with a velocity of 0.8 meters per second.,{"action": "move", "params": {"linear_speed": 0.8, "distance": 7, "is_forward": false, "unit": "meter"}};['5; Exactly conform.']
Go backwards for 7 meters, maintaining a speed of 0.8 meters per second.,{"action": "move", "params": {"linear_speed": 0.8, "distance": -7, "is_forward": false, "unit": "meter"}};['4; The overall JSON structure matches the intent of the natural language command. The keys \'action\', \'linear_speed\', \'distance\', \'is_forward\', and \'unit\' match the sample ontology. However, the "distance" value entered as -7 is not usually typical for a move action and instead, a positive distance with "is_forward" as false could be used for backward movement. The use of negative distance although understandable slightly deviates from typical usage.']
Reverse direction and travel for 7 meters at a velocity of 0.8 meters per second.,{"action": "move", "params": {"linear_speed": 0.8, "distance": 7, "is_forward": false, "unit": "meter"}};["5; The JSON structure perfectly matches the command given, all parameters are correct: the action is move, the distance is 7, the linear speed is 0.8, it's not forward (it's in reverse direction as specified in the command), and the unit used is meters."]
Retrace your steps by moving 7 meters in reverse at a speed of 0.8 meters per second.,{"action": "move", "params": {"linear_speed": 0.8, "distance": -7, "is_forward": false, "unit": "meter"}};['5; Exactly conform.']
Turn left and move forward for 5 meters at a speed of 2 meters per second.,{"action": "move", "params": {"linear_speed": 2, "distance": 5, "is_forward": true, "unit": "meter"}};["3; The natural language command includes the action 'turn left' which is not included in the JSON structure. However, the 'move' action is accurately represented in the JSON with correct parameters for speed, distance, direction, and unit."]
Take a left turn and proceed straight ahead for a distance of 5 meters, maintaining a speed of 2 meters per second.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['2; The command refers to a rotation, a movement, and a speed but the JSON structure only includes the rotation action. The angular velocity and angle are not specified in the command, so null is acceptable, and "is_clockwise": false aligns with "Take a left turn". However, the command\'s requests for straight movement and speed are not represented in the JSON structure.']
Make a left turn and advance forward for 5 meters with a velocity of 2 meters per second.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": null}};['2; The action "rotate" partially matches the natural language command "Make a left turn". However, there are no parameters specified for "angular_velocity", "angle" and "unit", hence they are given as null while in the command these values seem implied but not clearly stated. The part of the command "advance forward for 5 meters with a velocity of 2 meters per second" is not reflected in the JSON at all.']
Execute a left turn and continue moving ahead for 5 meters, traveling at a speed of 2 meters per second.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false, "unit": "degrees"}};['3; Partially conform. The rotate action in JSON is aligned with part of the command perfectly executing a left turn, though specific values such as angular_velocity, angle are not provided. The action of moving ahead for 5 metres is not reflected in the JSON provided.']
Change direction to the left and travel straight for a distance of 5 meters, keeping a constant speed of 2 meters per second.,{"action": "move", "params": {"linear_speed": 2, "distance": 5, "is_forward": false, "unit": "meter"}};['3; Partially conform. The natural language command includes both rotation and movement actions. However, the provided JSON structure only references the movement action. The "is_forward" parameter should also be "True" instead of "False" because the command states to "travel straight" which implies forward motion. The rotation action is not accounted for in the JSON structure.']
Back up for 1 meter and then execute a 90-degree turn to the right.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": false, "unit": "meter"}};['4; The first part of the command aligns with the JSON structure perfectly. However, the second part of the command about the 90-degree rotation to the right does not have a matching JSON structure present.']
Reverse for 1 meter and then make a right turn of 90 degrees.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": false, "unit": "meter"}};['3; The JSON partially matches the natural language command. The "move" action matches the "reverse" command and indicates that it is not moving forwards. The distance is also correctly stated as 1 meter. However, the command also includes a "right turn of 90 degrees," which is not taken into account in the provided JSON. This would likely be under a separate "rotate" action, which is not included in the JSON.']
Move backwards by 1 meter and then perform a right turn at a 90-degree angle.,{"action": "move", "params": {"linear_speed": -1, "distance": 1, "is_forward": false, "unit": "meter"}};['1; The natural language command partially conforms to the JSON structure. The command to move is represented correctly in the JSON, including the linear_speed and is_forward parameters. However, the command to perform a right turn at a 90-degree angle is not included in the JSON structure.']
Retreat by 1 meter and then make a right turn of 90 degrees.,{"action": "move", "params": {"linear_speed": -1, "distance": 1, "is_forward": false, "unit": "meter"}};['0; The provided JSON code does not match the natural language command. It only contains parameters for the "move" action, and not for the "rotate" action mentioned in the command. Additionally, the "is_forward" parameter in the JSON is false, but the command does not specify the direction of movement. Lastly, the command specifies a right turn of 90 degrees, which is not represented in the JSON at all.']
Take a step back for 1 meter and then execute a 90-degree right turn.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": false, "unit": "meter"}};['2; The conformity score is 2. The natural language command partially matches with the JSON structures. It correctly maps to the "move" action with meaningful parameters (including the correct distance and direction). However, the second part of the command about turning right is not represented in any JSON.']
Navigate to the specified GPS coordinates and play a pre-recorded message.,{"action": "go_to_goal", "params": {"location": {"type": "gps", "value": "40.7128,-74.0060"}};['0; The natural language command does not match any of the JSON structures. The action "go_to_goal" exists, but the parameters do not match the sample ontology as the "location" type in the command is "gps" while in the JSON structure the type is "str". Moreover, the part about playing a pre-recorded message cannot be reflected in any of the given JSON structures according to the sample ontology.']
Please go to the given GPS coordinates and play the pre-recorded message.,}};["0; The natural language command does not match any JSON structures provided. The action 'go_to_goal' parameters don't include the option for GPS coordinates. Plus, the command to 'play the pre-recorded message' does not match any JSON action provided in the sample ontology."]
Can you navigate to the provided GPS coordinates and start playing the recorded message?,{"action": "go_to_goal", "params": {"location": {"type": "gps", "value": "40.7128,-74.0060"}};['0; The command asks for navigating to given GPS coordinates and then playing a recorded message, which does not conform to any of the provided JSON structures. The action keys "go_to_goal" and "play_message" needed for this command are not present. Additionally, the type "gps" is not provided in the sample ontology.']
Follow the given GPS coordinates and play the message that has been prerecorded.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "GPS_coordinates"}};['1; The natural language command instructs to follow GPS coordinates and play a prerecorded message. However, the given JSON does not contain a "play_message" action or any relevant keys for handling sound or messages, thus only part of the command is reflected in the JSON structure.']
Head to the specified GPS coordinates and initiate the playback of the pre-recorded message.,{"action": "go_to_goal", "params": {"location": {"type": "gps", "value": "40.7128,-74.0060"}};['0; The natural language command does not match with any of the JSON structures provided. The action "go_to_goal" does match but the params in the JSON provided have a different key ("location") from the natural language command ("GPS coordinates") and also a different value. In addition, the action of initiating playback of a pre-recorded message does not exist in the sample keys.']
Move in a zigzag pattern for 10 meters, alternating between forward and backward motions.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 10, "is_forward": true, "unit": "meter"}};["1; The command asks for a zigzag pattern which isn't related to the linear movement in the JSON structure. The specified action and parameters in the command don't match fully to the given JSON structure. The distance is the only parameter that matches correctly."]
Alternate between moving forward and backward in a zigzag pattern for a distance of 10 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 10, "is_forward": true, "unit": "meter"}};['2; The natural language command requires both forward and backward movement indicative of a zigzag pattern, while the provided JSON structure only includes forward motion ("is_forward": true). Therefore, the JSON partially but not fully matches the command. Additionally, zigzag pattern details are not represented in the JSON.']
Cover a distance of 10 meters by moving in a zigzag pattern, alternating between forward and backward movements.,{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}};["1; The command given involves moving in a zigzag pattern by alternating between forward and backward movements, which is not represented in the JSON structure. The 'is_forward' key will not be enough to capture this complex action. Also, the 'linear_speed' key's value is provided in the JSON, even though it's not mentioned in the command. Therefore, the command is not entirely conformant with the JSON information."]
Perform a zigzag pattern, moving forward and then backward, spanning across a distance of 10 meters.,{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}};['1; The natural language command instructs to do a zigzag pattern, which includes a movement forward and backward. However, the JSON structure represents a simple forward motion for a distance of 10 meters. The key for backward movement or zigzag pattern is missing. Therefore, the JSON structure partially matches the natural language command.']
Switch between forward and backward motions while moving in a zigzag pattern for a total distance of 10 meters.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 10, "is_forward": true, "unit": "meter"}};['2; The natural language command partially matches with the JSON structure. The distance and unit parameters match correctly. However, the natural language command mentions a zigzag pattern and switching between forward and backward motions, which do not exist in the JSON command structure. Therefore, the match is not exact.']
Spin around in a circle three times and then stop abruptly.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 360, "is_clockwise": true, "unit": "degrees"}};['1; The action in the command matches the action in the JSON, which is "rotate". However, there are several discrepancies. The specified times the robot should spin around in the command is not reflected in the JSON. The angular_velocity is arbitrarily set in the JSON and not mentioned in the command. There is no mention of stopping abruptly in the JSON.']
Rotate in a full circle three times before coming to an abrupt halt.,{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Kitchen"}};['0; The natural language command to rotate does not match the action or parameters in the provided JSON structure. The JSON structures entail going to a location and moving at a certain speed, not rotating.']
Perform three complete rotations in a circular motion and then abruptly come to a stop.,{"action": "rotate", "params": {"angular_velocity": null, "angle": 360, "is_clockwise": true, "unit": "degrees"}};['3; Partially conforms. The command is asking for three complete rotations, which would require the "angle" parameter to be set to 1080 (3*360) in the JSON not 360. Although the "angular_velocity" is not specified in the command, it\'s set to null in the JSON which is acceptable. Also, the command mentions abruptly coming to a stop, this is not reflected in the given JSON.']
Turn around in a complete circle three times and then suddenly cease movement.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 360, "is_clockwise": true, "unit": "degrees"}};['1; The natural language command loosely matches the JSON structure for "rotate" action. However, it does not specify all the parameters like \'angular_velocity\' and \'is_clockwise\'. Also, it suggests a repeating action (\'three times\') which is not accounted for in the JSON structure. Lastly, the \'cease movement\' command does not exist in the JSON structure.']
Spin in a circle three times and then bring yourself to an immediate halt.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 360, "is_clockwise": true, "unit": "degrees"}};['1; The natural language command is partially matching with the JSON structure for action "rotate". The number of rotations is not reflected accurately in JSON parameters. Furthermore, the "halt" command does not exist in the JSON structure. For the action "rotate", the angle given in JSON is for one full rotation (360 degrees), not for three rotations and the "is_clockwise" is true in JSON although it is not mentioned in the command. Therefore, the score is low.']
Move forward at a constant speed of 1 meter per second for 30 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": 30, "is_forward": true, "unit": "meter"}};['3; The natural language command corresponds partially to the JSON structure. The "move" action and "is_forward" parameter match correctly, and the linear_speed parameter is also interpreted correctly from \'1 meter per second\'. However, the command language specifies a time duration of 30 seconds, not a distance. The \'distance\' in command is converted from time duration and speed, which is not explicitly stated, making it partially matching. The action "move" and "unit" are also fulfilling the ontology conditions.']
Maintain a steady speed of 1 meter per second and proceed forward for a duration of 30 seconds.,{"action": "move", "params": {"linear_speed": 1, "distance": 30, "is_forward": true, "unit": "meter"}};["2; The command specifies a duration (30 seconds) during which the action should be maintained, but the JSON structure translates this into a distance (which, while logically equivalent if maintaining a speed of 1 meter/second, deviates from the language used in the command). The command's formulation does not completely conform with the JSON structure."]
Continue moving ahead in a straight line for 30 seconds at a constant speed of 1 meter per second.,{"action": "move", "params": {"linear_speed": 1, "distance": 30, "is_forward": true, "unit": "meter", "duration": 30}};['2; The natural language command partially matches the JSON structure. The "action" key is correct and the value for "linear_speed" matches in both the command and JSON. The "is_forward" key is assumed to be true as the command says to move ahead. However, the command dictates a duration of movement, saying to move for 30 seconds, but this is instead provided as "distance" in the JSON. "Duration" in the JSON is unnecessary according to the given ontology. Meanwhile, the command does not provide a value for "distance", which is required in the JSON structure according to the sample ontology.']
Advance for 30 seconds with a consistent velocity of 1 meter per second.,{"action": "move", "params": {"linear_speed": 1, "distance": 30, "is_forward": true, "unit": "meter"}};['4; The command fairly matches with the JSON information as it implies movement for a certain distance with a specified linear speed. However, it doesn\'t explicitly assert direction of the movement (forward or backward); the assistant has assumed forward motion (is_forward: true). The unit of "distance" is given as meter in JSON and in the command it\'s in seconds which is contradictory.']
For a period of 30 seconds, travel straight ahead with an unchanging speed of 1 meter per second.,{"action": "move", "params": {"linear_speed": 1, "distance": 30, "is_forward": true, "unit": "meter"}};['5; Exactly conform.']
Turn right and follow a curved path for 2 meters, then stop and beep.,{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": true, "unit": "degrees"}};["1; While the action 'rotate' corresponds to 'Turn right', the sub command 'follow a curved path for 2 meters, then stop and beep' does not match any JSON structures. Furthermore, the details of 'angular_velocity' and 'angle' are not supplied in the command making the correspondence incomplete."]
Make a right turn and proceed along a curved path, covering a distance of 2 meters. Afterwards, come to a halt and emit a beep sound.,{"action": "rotate", "params": {"angular_velocity": ?, "angle": ?, "is_clockwise": true, "unit": "degrees"}};['1; The command calls for a rotation, which matches with the "rotate" action in the JSON structure. However, the exact value for the "angle" parameter is not specified and the JSON representation for the remaining part of the command (moving in a curved path, stopping and emitting a sound) is not provided as it doesn\'t exist in the sample ontology.']
Take a right turn and continue along a serpentine trail for a length of 2 meters. Next, pause and produce a beeping sound.,{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}};['1; The natural language command instructs the system to take a right turn which somewhat matches with the JSON structure of an action to "rotate". However, there is no conformity between the NLP and JSON Structures for moving along a 2 meter distance or for the action to pause and produce a beeping sound.']
Execute a rightward turn and navigate along a curving route for a distance of 2 meters. Subsequently, cease movement and emit a beep.,{"action": "rotate", "params": {"angular_velocity": ?, "angle": ?, "is_clockwise": true, "unit": "degrees"}};['1; The JSON structure only covers the "execute a rightward turn" part of the command. It lacks information related to "navigate along a curving route for a distance of 2 meters", "cease movement", and "emit a beep."']
Alter your direction towards the right and travel along a winding pathway for 2 meters. Then, come to a stop and produce a beeping noise.,{"action": "move", "params": {"linear_speed": , "distance": 2, "is_forward": false, "unit": "meter"}};["1; The command describes action of movement, but it also includes rotation ('Alter your direction towards the right') and producing a sound ('beeping noise') which do not conform with the given JSON structure which only describes the movement but not the type of movement or the operation of producing sound. The 'linear_speed' value is also missing in the JSON compared to the natural language command. Considering these points, the conformity is low."]
Move forward for 5 meters and then reverse for 2 meters, repeating twice.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['2; The natural language command is partially matched with one of the JSON structures but it does not cover the entirety of the natural language command, namely the reversing and repetition aspects are missing. Moreover, a specific "linear_speed" is not specified in the command, but it\'s included in JSON.']
Repeat the sequence of moving forward for 5 meters, then reversing for 2 meters, twice.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}};['1; The natural language command indicates a sequence of moving forward and reversing which should be represented by two separate JSON objects, but only one singular JSON object corresponding to moving forward is provided. Also, repeating this sequence is not reflected in the provided JSON objects.']
Perform a forward movement of 5 meters, followed by a reverse movement of 2 meters, and repeat this pattern twice.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}};['0; The natural language command is asking for a complex sequence of movements, including forward and reverse movements and repetitions, which the provided JSON structure lacks. Therefore, it is not possible to properly map the natural language command to the JSON structure.']
Move ahead for 5 meters and then go in reverse for 2 meters, repeating this cycle twice.,{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}};['2; The command expresses a more complex instructions but only a simple forward move with specific distance parameter is represented in the JSON. Actions of reverse and repetition of the whole cycle twice are not considered in the JSON structure. The speed of 1 used in the JSON also not mentioned in the command.']
Execute a forward motion of 5 meters, stop, go back for 2 meters, stop, and repeat this process twice.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}};['2; Partially conform. The command seems to have two actions, moving forward and back but the JSON structure only represents the forward movement. The command mention to stop and also to repeat, which cannot be found in the JSON structure. The value for distance matches in both instances.']
Randomly select a direction and move forward for a random duration between 1 and 5 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};["2; The command is partially conforming to the JSON structure. The action 'move' and parameter 'is_forward' are present and correct but the 'linear_speed' and 'distance' values aren't specified in the natural language command. The duration to move and the direction to take aren't represented in the JSON."]
Choose a direction at random and proceed forward for a duration between 1 and 5 seconds, chosen randomly.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};['2; Some keys are matching (e.g. "action" and "is_forward") but other critical information is not matching such as "linear_speed" and "distance" values which have some random nature in the command. Parameter "unit" found in the JSON is also not mentioned in the command.']
Randomly pick a direction and move in that direction for a random period ranging from 1 to 5 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};['1; The natural language command does not fully conform to the JSON structure. The instruction "Randomly pick a direction and move in that direction..." does not match to the JSON\'s action "move" with the set parameters. Specifically, the random selection of direction is not represented in the JSON and neither is the random timeframe. A 0.5 m/s linear_speed and 1 meter distance have been designated in the JSON, neither of which are specified in the command.']
Select a random direction and move forward for a randomly determined time frame of 1 to 5 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};["1; The command is partially matched with the JSON structure, but the request for a random direction and a randomly determined timeframe do not conform to the JSON keys. Also, the 'distance' key's value doesn't match with the command as time frame is mentioned in the command instead of distance."]
Pick a direction at random and proceed in that direction, randomly determining the duration to move forward between 1 and 5 seconds.,{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}};['2; Partially conform. The natural language command has been partially captured in the JSON structure. The "move" action and "is_forward": true have matched. However, the random direction, duration, and range of 1 to 5 seconds were not represented.']
Perform a 180-degree turn, then launch a small drone from your back.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": false, "unit": "degrees"}};['2; The command to "Perform a 180-degree turn" is well represented by the JSON structure provided. However, the command to "launch a small drone from your back" is not represented in any JSON structure and is not in the sample keys. Therefore the conformity score is not full.']
Execute a 180-degree rotation and subsequently release a compact drone from your rear.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": false, "unit": "degrees"}};["1; Only the rotation action from the command is properly converted to the JSON structure and exists in the sample keys. The rest of the command which is to release a compact drone from the rear doesn't have a matching JSON structure or exist in the keys."]
Initiate a 180-degree turn followed by the deployment of a diminutive drone from behind you.,{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}};['2; Although the natural language command corresponds to the "rotate" action in the JSON, it does not fully conform to the JSON structure. The angular_velocity is not specified in the command, so any reasonable value in the JSON is accepted. However, the command also includes an action ("deployment of a diminutive drone") that doesn\'t exist in the sample keys and is not represented in the given JSON structure.']
Conduct a 180-degree maneuver and proceed to launch a small aerial drone from your backside.,{"action": "rotate", "params": {"angular_velocity": 180, "angle": 180, "is_clockwise": false, "unit": "degrees"}};['1; The natural language command matches the JSON structure for the "rotate" action, but it also mentions launching a drone which is not an action in the ontology.']
Carry out a 180-degree spin, then activate the release mechanism to send a small drone flying from your posterior.,{"action": "rotate", "params": {"angular_velocity": 180, "angle": 180, "is_clockwise": false, "unit": "degrees"}};['0.5; The rotate action in the JSON aligns with the "Carry out a 180-degree spin" in the instruction. However, the value of "angular_velocity" doesn\'t match the natural command as in this case it refers to the angle. The second part of the command, "activate the release mechanism to send a small drone flying from your posterior," doesn\'t conform with any actions in the provided JSON structures.']
