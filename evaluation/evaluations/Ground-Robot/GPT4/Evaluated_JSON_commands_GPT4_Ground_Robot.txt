Move forward for 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command matches perfectly with the JSON structure. The action is "move", the distance is 1 meter, and the direction is forward, all of which aligns with the values in the structure. The linear speed is not specified in the natural language command, but the presented value (1) in the JSON is accepted as it is a reasonable one.']
Proceed straight ahead covering a distance of 1 meter.,['{"action": "move", "params": {"linear_speed": null, "distance": 1, "is_forward": true, "unit": "meter"}}'];['4; The natural language command is correctly represented by the JSON structure, but the "linear_speed" key value is null in the JSON structure while it is not specified in the natural language command. According to the instructions, any reasonable value is accepted in the JSON is accepted if it\'s not specified in the command so it\'s not completely conformant.']
Advance by 1 meter in the forward direction.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['4; The JSON conform to the command structurally, but the "linear_speed" parameter value doesn\'t match because it\'s not specified in the command. Any reasonable value would be acceptable. Here, 1 is used as the value whereas it\'s 0.5 in the ontology. However, rest of the commands and values match perfectly.']
Take a step forward spanning 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform.']
Move ahead for a length of 1 meter.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}}'];["5; Exactly conform. The language command 'Move ahead for a length of 1 meter' is perfectly matched with the JSON structure. The action of 'move' is correctly interpreted, and the parameters such as 'distance', 'is_forward', and 'unit' are accurately extracted from the command."]
Rotate counterclockwise by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform.']
Rotate in an anti-clockwise direction by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform.']
Turn left by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['4; The natural language command mostly conforms with the JSON structure. The action "rotate" and all parameters present in the JSON ("angular_velocity", "angle", "is_clockwise", "unit") match the command given. However, the specific "angular_velocity" in the command is not specified, and the value of 10 used in the JSON may not be reasonable. Hence, one point has been deducted.']
Rotate 90 degrees counterclockwise.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command exactly matches the action and its parameters in the provided JSON structure.']
Spin in the opposite direction by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['4; The natural language command is properly represented by the JSON structure for the most part. While the "is_clockwise" key is set to "false", and thus corresponds to "spin in the opposite direction", the "angular_velocity" has a arbitrary value of 1, which is not specified in the natural language command.']
Move backward for 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "seconds"}}'];['4; The natural language command is partially matched with the JSON format command. However, the "unit" key in the JSON structure does not align with the sample ontology, where "unit" is described as "meter", not "seconds".']
Go backwards for a duration of 2 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": false}}'];['1; The JSON structure partially matches the command. The direction of motion ("is_forward": false) matches "go backwards", but the command specifies a duration ("for duration of 2 seconds") which is not represented in the JSON structure and vice versa (The JSON has a distance which is not specified in the command). The "linear_speed" key in the JSON is acceptable as it meets the condition of a reasonable unspecified value in the natural language command.']
Reverse your direction and travel for a span of 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "seconds"}}'];['1; The natural language command partly matches the JSON structure. The "move" action exists in the ontology but the key "is_forward" is set to False, contradicting the natural language command of "Reverse your direction". Also, the \'distance\' key is incorrectly used as duration (e.g., "travel for a span of 2 seconds"), which is not part of the provided ontology.']
Retreat for a time frame of 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "seconds"}}'];['3; The JSON structure largely matches the command, with "action" being "move" and even including parameters such as "is_forward". However, the parameter "linear_speed" is unknown from the command, and the command\'s \'time frame of 2 seconds\' does not clearly match with the "distance" parameter. Furthermore, the "unit" key in the JSON does not align with the natural language instruction since time ("seconds") is not a unit of distance.']
Take two seconds to move in the opposite direction.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": false, "unit": "meter"}}'];['3; Partially conform. The natural language command does not mention the specific unit or distance to be used for the movement, and the "move" action in the JSON structure has the "is_forward" parameter set to false, which matches the "move in the opposite direction" in the command. However, the command does not specify anything about the "linear_speed" or "distance" parameters, which are found in the JSON structure. The two seconds mentioned in the command does not directly translate to any parameter in the JSON structure.']
Turn left and move forward for 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['3.5; The JSON structure matches the "move" command but there is no mention or parameter for the direction "left" in the JSON structure.']
Move forward for 5 meters, then turn left.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meters"}}', '{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['4; The commands in natural language and the JSON structures are similar; however, the JSON structures have some differences with the keys in the sample ontology. First, the linear_speed in "move" action and the angular_velocity in "rotate" action, are not specified in the natural language command. Second, the "unit" in the "move" action is given as "meters" in the JSON structure while it is "meter" in the sample ontology.']
Proceed for 5 meters, then make a left turn.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}},', '{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command and the JSON structures correspond, indicating movement of a specific distance and then a rotation to the left (counter-clockwise).']
Take a left turn and continue moving forward for 5 meters.,['{"action": "move", "params": {"linear_speed": 1.0, "distance": 5, "is_forward": true, "unit": "meters"}}'];['2; Although the JSON structure captures the part of the command to move forward for a certain distance, it completely omits the instruction to take a left turn which should have been captured in a "rotate" action. The speed in the JSON structure is also not mentioned in the natural language command.']
Make a leftward turn and advance for 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];["1; The given JSON only accounts for the 'move' action of going forward for a certain distance. The 'rotate' action and its parameters such as 'angle', 'is_clockwise', and 'angular_velocity' needed to represent the turn in the command are missing. Moreover, the 'linear_speed' parameter in the given JSON has a value that isn't mentioned in the command, hence its score is reduced."]
Rotate clockwise by 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; The natural language command perfectly matches with the JSON structure. The action in the NLP command "Rotate" is the same action in the JSON structure. Each parameter in the JSON (angular_velocity, angle, is_clockwise and unit) also matches and has appropriate values from the command.']
Perform a 180-degree clockwise rotation.,['{"action": "rotate", "params": {"angular_velocity": 50, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Turn in a clockwise direction by 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 30, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The natural language command and the JSON structure are perfectly aligned. The command specifies to rotate in a clockwise direction by a 180-degree angle, which corresponds with "rotate", "angle: 180", "is_clockwise: true", and "unit: degrees" in the JSON. The "angular_velocity" is not mentioned in the command but it\'s given a reasonable value in the JSON.']
Rotate by 180 degrees in a clockwise manner.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Execute a clockwise rotation of 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The natural command exactly matches with the provided JSON structure. The rotation action, the clockwise direction, and the angle degree are all correctly represented in the JSON format.']
Move forward at a velocity of 0.5 meters per second for 10 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}}'];['4; Although the JSON structure is mostly correct for the action "move", the distance parameter does not accurately match the natural language command since the command asked for a duration (10 seconds) rather than a distance. The JSON structure converts this to a distance of 5 meters, rather than maintaining the commanded time duration.']
Proceed with a speed of 0.5 meters per second for a duration of 10 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}}'];['2; While the action "move" and the parameter "linear_speed" and its value match, the parameter "distance" doesn\'t match because duration was specified in the command not distance and the param "is_forward" was not specified in the command.']
Advance at 0.5 meters per second for a total of 10 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}}'];['4; The action and linear_speed are perfectly matched. However, while the natural language command indicates a time duration, the JSON structure uses a distance as a parameter, not a time duration. This results in a little mismatch.']
Travel forward, maintaining a velocity of 0.5 meters per second, for 10 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}}'];['3; The natural language command is somewhat conform to the JSON structure. According to the command, the robot should move forward at a speed of 0.5 m/s for 10 seconds. The "distance" parameter in the JSON could be computed as speed*time, and it\'s not instructed in command. So, if we consider the distance as 5 meters (0.5 m/s * 10 s), it matches with the provided JSON. However, the time for which the robot should move isn\'t represented in the JSON, which causes the mismatch.']
Move ahead for a period of 10 seconds, with a speed of 0.5 meters per second.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}}'];['2; The linear_speed parameter matches with the natural language command, and also is_forward suitably defaults to true for the "Move ahead" command. However, the natural language command specifies a period of time ("for a period of 10 seconds"), not a distance. Thus, the "distance" parameter, both key and value, doesn\'t match with the command. Additionally, the JSON information does not have a suitable field to capture \'time\'.']
Turn right and move forward for 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['2; Partially conform. The JSON structure has the right action and parameters for "move", however, "rotate" action is not represented in JSON for the "Turn right" command.']
Proceed forward for a distance of 3 meters after making a right turn.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['3; The natural command is asking for two actions: a move and a turn. The JSON represented only covers the "move" action but does not provide a JSON for the rotation or "turn" action.']
After turning right, continue straight for 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];["3; The natural language command mentions turning right but this isn't represented in the JSON. It however accurately represents the distance to be covered in moving straight."]
Make a right turn and advance for a distance of 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meters"}}'];['5; Exactly conform.']
Execute a rightward turn and then travel straight ahead for 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];["2; The JSON represents the 'move' action correctly, as the natural language command specifies a straight movement for 3 meters. However, the command also includes a rightward turn, which is not represented in the JSON at all. Therefore, it partially conforms to the command."]
Move backward at a velocity of 1 meter per second for 4 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meter"}}'];['4; The natural language command mostly matches with the JSON structure as it specifies to move and provides the necessary details: linear speed of 1 and distance of 4. But it fails to specify the unit of distance from the command. The "is_forward" is set to false to interpret "backward" in the command.']
Go in reverse, traveling at a speed of 1 meter per second for a duration of 4 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meter"}}'];['4; The command mostly conforms to the JSON structure, but the time duration of 4 seconds is not represented in the JSON. Instead, a distance measurement is used.']
Reverse direction and move at a speed of 1 meter per second for a period of 4 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "second"}}'];["3.5; The command matches the move action by reversing direction and specifying speed. However, the parameter for the period of time(second) is not supported in the example ontology where distance should be parameter instead of time. Hence, the match isn't exact."]
Travel backward for 4 seconds, maintaining a velocity of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meter"}}'];['3; The natural language command somewhat matches the JSON structure. However, the "distance" key is represented in "seconds" instead of actual distance measurement like "meter" which might not correctly reflect the intended command.']
Move in the opposite direction at a constant speed of 1 meter per second for 4 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meter"}}'];['5; The natural language command perfectly matches the JSON structure. All the parameters (action, linear speed, distance, direction and unit) are mentioned in the command and they all have correct values in the JSON structure.']
Rotate counterclockwise by 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 270, "is_clockwise": false, "unit": "degrees"}}'];['4.5; Except for the "angular_velocity" parameter which is not mentioned in the command and assigned a reasonable value in the JSON, all other parameters match perfectly with the command.']
Rotate 270 degrees counterclockwise.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 270, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command clearly states a rotate action with a specification of 270 degree counterclockwise. The provided JSON structure exactly matches this command, with the correct action and parameters. The angular_velocity is not specified in the command, but as it is given a reasonable value in the JSON, it is accepted.']
Turn left by 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 0, "angle": 270, "is_clockwise": false, "unit": "degrees"}}'];['4; The JSON structure corresponds to the natural language command, but the angular_velocity is set to 0, while the command does not specify the angular velocity, so it could be any reasonable value, not necessarily 0. Thus, one point is deducted.']
Perform a counterclockwise rotation of 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 270, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform.']
Rotate in the opposite direction by 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 270, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The command is needed to rotate in the opposite (anti-clockwise) direction by a specific angle (270 degrees). This is perfectly represented in the JSON structure provided. The "angular_velocity" parameter is not specified in the command, and therefore, any value is acceptable.']
Move forward for 2 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['5; The natural language command correctly matches the JSON structure. The movement action is specified in the command and properly reflected in the JSON. The direction, distance and unit are also mentioned in the both command and the JSON structure.']
Proceed ahead by a distance of 2 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['5; The natural language command correctly corresponds to the provided JSON structure. All the necessary parameters are correctly included: the action is "move", the distance is 2 and the direction is forward. The unit is also specified as "meter," and while the linear speed is not explicitly given in the command, the value in the JSON (1) is reasonable.']
Advance for a span of 2 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['4; The JSON structure corresponds to the command. However, the value for "linear_speed" is not specified in the command, but is given a value of 1 in the JSON which is a relatively reasonable assumed speed.']
Travel forward, covering a distance of 2 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The JSON structure perfectly matches the command where the action is moving forward and the distance to be covered is specified as 2 meters. The value of distance in the JSON structure exactly matches the command and the rest of the parameters contain reasonable values which are accepted. The unit of distance specified here is meter which is also mentioned in the command.']
Move straight ahead, going 2 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meters"}}'];['4.5; The JSON conforms with the natural language command. However, a discrepancy exists in the values of "linear_speed". The command does not specify a linear speed therefore, the JSON value of 1 is reasonably placed but it may not be accurate since the natural language command does not specify speed.']
Rotate clockwise by 45 degrees and move forward for 1 meter.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 45, "is_clockwise": true, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['4; The JSON structure conforms largely to the natural language command, but there is a discrepancy in the "angular_velocity" value in the JSON which was not specified in the command. The "rotate" action doesn\'t have an exact match for "angular_velocity" from the command. This discrepancy matters because the "angular_velocity" controls the speed of the rotation, which wasn\'t specified in the command.']
Move forward for 1 meter while rotating 45 degrees clockwise.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}, {"action": "rotate", "params": {"angular_velocity": 45, "angle": 45, "is_clockwise": true, "unit": "degrees"}}'];["4; The JSON structures partially conform to the natural language command. The move action is accurate with correct parameters but for the rotate action, 'angular_velocity' is incorrectly interpreted as 45 instead it should be a reasonable value considering it depicts the speed of rotation and not the angle of rotation which is 45 degrees here."]
Perform a 45-degree clockwise rotation, followed by a forward movement of 1 meter.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 45, "is_clockwise": true, "unit": "degrees"}},', '{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meters"}}'];['4; Most of the JSON structure matches with the commands. The rotation is represented correctly with the angle, direction and unit. The movement action is also correct with the distance and direction. However, the unit of the distance in the movement action is "meter" as per the example but in the JSON it is given as "meters". Hence, a point is deducted.']
Rotate by 45 degrees in a clockwise direction and then proceed to move forward for 1 meter.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 45, "is_clockwise": true, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}}'];["4.5; The commands in the natural language are accurate and they match with the JSON structures. However, the angular_velocity in the rotate action from the natural language command is not specified, so we can't confirm or deny the exact conformity."]
Combine a clockwise rotation of 45 degrees with a forward movement of 1 meter.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 45, "is_clockwise": true, "unit": "degrees"}}', '', '{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}}'];['5; The JSON structures perfectly match the natural language command. The rotation action has the correct angle, direction, and unit parameters, and the move action has the correct direction, distance, and unit parameters. Angular_velocity and linear_speed values are reasonably filled in as they are not specified in the command.']
Turn left and move forward for 3 seconds.,['{"action": "move", "params": {"linear_speed": 1.0, "distance": 3, "is_forward": true, "unit": "seconds"}}'];['2; The natural language command and the JSON partially match. The action "move" and the "is_forward" parameter match. However, the command specifies turning left before moving forward while this is not represented in the JSON structure. Moreover, the "unit" in JSON is "seconds" which could be interpreted as moving for a certain amount of time, while it\'s not clear from the command if the "3 seconds" refers to the time of moving or the time of turning left.']
Proceed straight for 3 seconds after taking a left turn.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "seconds"}}'];['5; The commands in natural language perfectly conform to the corresponding actions in the JSON structure. The "rotate" command specifies an anticlockwise turns (which is a left turn) and the "move" command describes moving straight for 3 seconds.']
Take a left turn and continue advancing for 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "seconds"}}'];['2; The natural language command speaks about taking a "left turn" which relates to the JSON action "rotate", however, no JSON structure is presented for that. The second part of the command "continue advancing for 3 seconds" roughly matches with the presented JSON structure, but the parameters "linear_speed" and "is_forward" are not specified in the command. "Distance" in the JSON structure is misinterpreted as time (seconds), hence part conformation.']
Make a left turn and proceed forward for a duration of 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "seconds"}}'];['0; The JSON does not match with the natural language command. The command indicates a turn and forward movement, none of which are represented in the JSON structure. Also, duration of movement is not a suitable substitute for distance in this sample ontology.']
After turning left, move straight ahead for 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "seconds"}}'];["3; The JSON structure partially matches the natural language command. The rotation action mentioned in the command ('After turning left') is missing in the JSON structure. However, the 'move' action in the command ('move straight ahead for 3 seconds') is represented correctly. The 'linear_speed' parameter is not specified in the natural language command, thus the value '1' in the JSON is accepted."]
Move backward for 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];["4; The JSON structure correctly interprets 'move', 'distance : 1', and 'unit : meter'. However, 'linear_speed: 1' is not mentioned in the natural language command and 'is_forward: false' is not explicitly stated but it is understood from 'move backward'. The values are merely reasonable assumptions."]
Reverse direction and travel 1 meter.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": false, "unit": "meter"}}'];["5; The natural language command exactly matches the JSON structure. The 'move' action is represented correctly with parameters 'linear_speed', 'distance', 'is_forward' (set to false for reverse direction as mentioned in the command) and 'unit' matching the command."]
Go back for a distance of 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];['4; The JSON is mostly conform but the speed of move "linear_speed" is not specified in the command so 1 is assumed. Also, the direction is specified correctly in the command with "go back" which is accurately represented as "is_forward": false in the JSON.']
Retreat for 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];['4; While the JSON structure correctly interprets the "retreat" command as a "move" action with "is_forward" set to false and identifies the "1 meter" distance, it does not necessarily adhere to the natural language command\'s lack of specification for linear speed, which the JSON arbitrarily sets at 1.']
Take one step backward covering a distance of 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform. The natural language command perfectly matches with the parameters of the provided JSON structure. The action "move" is correctly identified, the direction of movement is specified as not forward which translates to backward in the command, the unit of distance is also correct as \'meter\' and the distance to be covered as 1 meter is also in the command. Also, linear speed is not specified in the command; hence any value in the JSON is accepted as mentioned in the guidelines.']
Rotate counterclockwise by 120 degrees and move forward for 5 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 120, "is_clockwise": false, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command accurately instructs to rotate counterclockwise and move forward, which correctly matches with the provided JSON structures, in terms of both action and parameters.']
Perform a counterclockwise rotation of 120 degrees followed by a forward movement of 5 meters.,['{"action": "rotate", "params": {"angular_velocity": 0, "angle": 120, "is_clockwise": false, "unit": "degrees"}}', '{"action": "move", "params": {"linear_speed": 0, "distance": 5, "is_forward": true, "unit": "meter"}}'];["4.5; Mostly conform. The natural language command matches with the 'move' and 'rotate' actions in the JSON structure but angular_velocity value and linear_speed value are not given in the natural language command. The given 0 value is considered as a reasonable value for both."]
Rotate in the counterclockwise direction by 120 degrees and proceed forward for a distance of 5 meters.,['{"action": "rotate", "params": {"angular_velocity": null, "angle": 120, "is_clockwise": false, "unit": "degrees"}}', '{"action": "move", "params": {"linear_speed": null, "distance": 5, "is_forward": true, "unit": "meters"}}'];['5; Exactly conform. The natural language command exactly instructs to rotate and move forward which corresponds perfectly with the given JSON structures. The parameters specified in the command ("angle": 120 in rotate action, "distance": 5 in move action) are also correctly reflected in the JSON. Other parameters\' values are not specified in the command and assumed null, which conforms to guidelines.']
Turn to the left by an angle of 120 degrees and then move forward for 5 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 120, "is_clockwise": false, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['4.75; The commands and key parameters match almost perfectly with the JSON structure, with angular_velocity in the rotate action and linear_speed in the move action being the reasonable exception as these parameters were not specified in the natural language command. However, turning to the left is usually counter-clockwise, but the JSON data represents it as clockwise.']
Execute a 120-degree counterclockwise rotation and proceed ahead for a distance of 5 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 120, "is_clockwise": false, "unit": "degrees"}},', '{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The JSON structures accurately capture the movements denoted in the command. The rotation (with specified direction and angle) and linear movement (with the specified direction and distance) are included in the JSON.']
Move forward at full speed for 20 seconds.,['{"action": "move", "params": {"linear_speed": "full", "distance": 20, "is_forward": true, "unit": "seconds"}}'];['2; The action is correctly identified as "move" and the direction is correctly identified as forward with "is_forward": true. However, \'full\' is not a valid value for linear_speed, it should ideally be a numerical value. \'20\' isn\'t directly interpreted as a distance but rather it seems to be a duration(as per the command instruction - \'for 20 seconds\'), so using it as a value for \'distance\' is not entirely accurate. The \'unit\' provided is \'seconds\' which is not present in the given ontology - the provided unit should be \'meter\'.', '']
Proceed ahead at maximum velocity for a duration of 20 seconds.,['{"action": "move", "params": {"linear_speed": "maximum", "distance": "undetermined", "is_forward": true, "duration": 20, "unit": "seconds"}}'];["2; The JSON structure has the right action 'move' and 'is_forward' parameter is correct, but there is no parameter for 'duration' in the sample ontology. Furthermore, 'maximum' velocity and 'undetermined' distances are not interpretable within ontology because they are not specific values."]
Travel straight ahead at top speed for a duration of 20 seconds.,['{"action": "move", "params": {"linear_speed": "top", "distance": 20, "is_forward": true, "unit": "seconds"}}'];['2; The JSON structure has the correct action type of "move" and the direction "is_forward" is true. However, the "linear_speed": "top" isn\'t a proper numerical value, and the unit of "distance" is misinterpreted as "seconds", whereas it should be a spatial measure like "meters" or "feet". Duration isn\'t covered in the ontology provided.']
Advance forward with utmost speed for a period of 20 seconds.,['{"action": "move", "params": {"linear_speed": "maximum", "distance": "undetermined", "is_forward": true, "unit": "seconds"}}'];["2; The natural language command does indicate movement forward which is somewhat represented in the JSON structure. However, several parameters provided in the JSON are not a match to the command. The command asks for movement 'with utmost speed for a period of 20 seconds' while the JSON structure offers parameters for speed, distance and units in meters, not seconds. Overall, there are elements of conformity but also significant mismatches."]
Go straight ahead at full throttle for a duration of 20 seconds.,['{"action": "move", "params": {"linear_speed": "full_throttle", "distance": 0, "is_forward": true, "duration": 20}}'];['0; The natural language command does not match the JSON structure at all. The JSON includes keys such as "duration" and "full_throttle" which do not exist in the sample ontology. In addition, the "distance" parameter in the JSON does not match what is described in the natural language command.']
Rotate clockwise by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": true, "unit": "degrees"}}'];['4; Although the parameters match, the value of angular_velocity is different from the sample ontology. Therefore, it is not exactly conform.']
Turn right by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": true, "unit": "degrees"}}'];["4; The action and parameters match well, with proper rotation action and angle degrees in the right/clockwise direction. However, the angular velocity does not match specifically with the natural language command - the command does not specify how fast this rotation should happen. Considering this parameter as unspecified and accepting the value in the JSON, it doesn't bring the score down to 0, but it doesn't make it a perfect match either."]
Perform a clockwise rotation of 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 60, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The command is asking for a rotation, which is correctly identified in the action key of the JSON. Moreover, the direction of the rotation (clockwise) and the angle (60 degrees) are also correctly identified. Although the angular velocity is not specified in the command, the JSON value does not conflict with the command.']
Rotate in a clockwise direction, making a 60-degree turn.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": true, "unit": "degrees"}}'];["5; The JSON structure correctly conforms to the natural language command. The 'action' is correctly identified as 'rotate' and the parameters 'angle', 'is_clockwise' and 'unit' are correctly identified and matched with '60', 'true' and 'degrees' respectively. The 'angular_velocity' does not need to be specified in the natural language command, thus any reasonable value in the JSON is accepted."]
Rotate to the right, making a 60-degree angle.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 60, "is_clockwise": true, "unit": "degrees"}}'];['4.5; The natural language command matches very well with the JSON structure. The JSON information correctly indicates a rotation action. The angle is correctly noted to be 60 degrees, which fits with the command. The is_clockwise parameter is set to true, which fits with the command to "rotate to the right." However, the angular_velocity parameter, given as 1 in the JSON, is not specified in the command and so loses 0.5 on the score.']
Move backward at a velocity of 0.75 meters per second for 8 seconds.,['{"action": "move", "params": {"linear_speed": 0.75, "distance": 6, "is_forward": false, "unit": "meter"}}'];['4; The JSON structure accurately captures the "move" command, as well as the parameters for linear speed and the direction of movement (backward, hence "is_forward": false). The "unit" parameter also matches. However, the natural language command mentions a duration of 8 seconds, which is not reflected in the JSON structure; instead, there is a "distance" parameter. Despite this discrepancy, the JSON does convey the general intent of the command.']
Reverse at 0.75 meters per second for a duration of 8 seconds.,['{"action": "move", "params": {"linear_speed": 0.75, "distance": 6, "is_forward": false, "unit": "meter"}}'];['4; The JSON structure accurately represents the action of moving and the direction (is_forward is false which implies reverse), linear speed and unit. However, the param "distance" is calculated from the duration (8 sec) which is not explicitly mentioned in the natural language command, which only specifies the duration but not the distance. So, it\'s a partial match.']
Go in the opposite direction with a speed of 0.75 meters per second for 8 seconds.,['{"action": "move", "params": {"linear_speed": 0.75, "distance": 6, "is_forward": false}}'];['3; Partially Conform. The direction in the natural language command is to go in the opposite direction, this is interpreted correctly as "is_forward": false in the JSON. Also, linear speed conforms as well. However, the parameter of time is mentioned in the command but there is no equivalent in the JSON. Additionally, in the JSON "distance" is referenced but it is not mentioned in the natural language command.']
Travel backwards with a velocity of 0.75 meters per second for a period of 8 seconds.,['{"action": "move", "params": {"linear_speed": 0.75, "distance": 6, "is_forward": false, "unit": "meter"}}'];['3; The action and the parameters "linear_speed", "is_forward", and "unit" are correctly stated, but the "distance" value doesn\'t match the given natural language command which only mentions the time duration and not the distance to be traveled.']
Move in reverse at a rate of 0.75 meters per second for the next 8 seconds.,['{"action": "move", "params": {"linear_speed": 0.75, "distance": 6, "is_forward": false, "unit": "meter"}}'];["4; The JSON structure matches the command quite well, but the distance derived from 'for the next 8 seconds' doesn't match the 6 meters specified in the provided JSON. The natural language command suggests that the robot should move in reverse at 0.75 m/s for 8 seconds, which implies a distance of 6 meters not 8."]
Turn right and move forward for 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];["3; Partial match. The natural language command indicates a movement, which is correctly captured in the JSON structure. However, it also includes a direction ('Turn right') which is not represented in the JSON. The 'rotate' action would have been an appropriate addition to emulate this command."]
Take a right turn and proceed straight ahead for a distance of 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meters"}}'];["2; The rotation to the right is missing from the JSON structure, but the movement action is properly represented. However, linear_speed isn't explicitly mentioned in the command, yet included in the JSON."]
Make a right turn and continue moving forward for 4 meters.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}},', '{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];["4; The natural language command and the JSON structure information match well, but not perfectly. The rotation command in the JSON structure does not specify which direction to rotate in the command, even though it's mentioned in the natural language command to make a right turn. However, the assumption of clockwise rotation for right turn is made in the JSON, which is acceptable but not perfect. Similarly, the linear speed for 'Move' action is 1 in the JSON, which isn't mentioned in the command but it's an acceptable assumption."]
Rotate to the right and advance ahead for a distance of 4 meters.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['5; The natural language command matches with the given JSON statement. The movement and rotation actions are given with all required parameters ("angular_velocity", "angle", "is_clockwise", "unit" for "rotate"; "linear_speed", "distance", "is_forward", "unit" for "move") and reasonable values are provided in the command.']
Go to the right and keep moving straight for 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meters"}}'];['4; The natural language command has been correctly converted into JSON format with accurate keys and values. However, it lacks the aspect of "going to the right" which would have been nicely captured in a "rotate" action.']
Move forward for 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['5; The command matches perfectly with the JSON structure. It uses the "move" action with a forward movement, a specific distance, and the unit is specified in the command. The only parameter not mentioned in the command is "linear_speed" for which any reasonable value is accepted.']
Proceed straight ahead for a distance of 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];["5; The natural language command matches the JSON structure, as it specifies the action 'move' and gives a distance parameter. Although no specific linear speed is given in the command, any reasonable speed value is acceptable as specified by the instructions. The direction 'straight ahead' correctly implies a forward movement. The unit 'meters' is also mentioned in both the command and the JSON."]
Advance ahead 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];["4; Although the natural language command matches the JSON structure well, it doesn't specify the speed, thus '1' in 'linear_speed' is arbitrary and not specifically defined by the user."]
Go forward a total of 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['4; The natural language command matches well to the JSON structure, however, the value of the "linear_speed" key given in the JSON is not specified in the natural language command.']
Travel straight for a distance of 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['5; The natural language command and the JSON structure conform. The action "move" is reflected correctly with the parameters "distance" and "is_forward" also correctly included. Although the "linear_speed" is not specified in the natural language command, 1 is a reasonable value. The specified unit is also correct, as meters is specified in the command. Therefore, the conformity is exact.']
Rotate counterclockwise by 90 degrees and move forward for 2 seconds.,['{"action": "rotate", "params": {"angular_velocity": 45, "angle": 90, "is_clockwise": false, "unit": "degrees"}} ', '{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];['4; The rotation command is exactly conform with the natural language command, while the move command matches the forward direction but does not properly convert the two seconds into distance (in meters) or speed (in m/s), leading to slight deviation.']
Turn left 90 degrees and proceed forward for a duration of 2 seconds.,['{"action": "rotate", "params": {"angular_velocity": 45, "angle": 90, "is_clockwise": false, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];["4; There is a high level of conformity between the natural language command and the JSON information. The JSON defines two actions, 'rotate' and 'move', both of which are described in the command. In addition, the majority of the parameters specified in the command are correctly reflected in the JSON. ", '', 'However, there are some discrepancies that prevent a perfect score. First, the \'angular_velocity\' parameter in the \'rotate\' JSON is set to 45, but this value isn\'t mentioned in the command. The JSON correctly maps \'left\' to \'\\is_clockwise": false\' and \'90 degrees\' to \'"angle": 90\', but \'angular_velocity\' should likely have been left up to interpretation, as in the example ontology.', '', 'Second, the \'move\' JSON converts \'proceed forward for a duration of 2 seconds\' to \'"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"\'. However, it\'s not clear from the command that the unit of distance should be seconds or that the linear speed should be 1. Additionally, the use of \'distance\' to capture a duration of time in seconds deviates from the example ontology.', '', 'Overall, while the JSON reflects the actions and some of the parameters given in the command, these discrepancies prevent a perfect score.']
Perform a counterclockwise rotation of 90 degrees, followed by a 2-second forward movement.,['{"action": "rotate", "params": {"angular_velocity": 45, "angle": 90, "is_clockwise": false, "unit": "degrees"}}', '{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "seconds"}}'];['4; The commands partially match the JSON structures. The rotate function is correct, though the angular_velocity wasn\'t specified in the NL command so any value there is acceptable. For the move function in the JSON, it uses distance as a parameter which doesn\'t match the "2-second forward movement" in the NL command. However, if we consider time indirectly proportional to distance, it can be understood in context.']
Rotate anti-clockwise by 90 degrees and continue moving forward for 2 seconds.,['{"action": "rotate", "params": {"angular_velocity": 45, "angle": 90, "is_clockwise": false, "unit": "degrees"}} {"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "second"}}'];['4; The first part of the command matches well with the given JSON structure, with "rotate", "angle", "is_clockwise", and "unit" keys correctly populated. However, for the "move" action in the second part of the command, the "unit" should be in meters, not seconds. The "distance" value is set to 2 which can be inferred to be 2 meters, considering the duration is not specified in the ontology. The "linear_speed" is set to 1 but its value isn\'t mentioned in the command, so it\'s accepted as plausible.']
Make a left turn of 90 degrees and proceed forward for 2 seconds.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}', '{"action": "move", "params": {"linear_speed": 1, "duration": 2, "is_forward": true, "unit": "seconds"}}'];['4; The commands in natural language almost conform to the JSON structure but there\'s a slight discrepancy in the "move" action where "duration" is used in lieu of "distance" which is stated in the key of the sample ontology. "unit" also expects "meter" as specified in the JSON ontology but it\'s stated as "seconds" in the provided JSON structure.']
Move forward for 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The command \'Move forward for 5 meters\' matches perfectly with the JSON structure, where the action is "move", the direction is forward (is_forward: True), the distance is 5 and the unit is meter. The speed isn\'t specified in the command, but any reasonable value for it is accepted according to the guidelines.']
Proceed ahead a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meters"}}'];['4; Although the command clearly indicates a `move` action with a `distance` of 5 meters and `is_forward` true, the specified `unit` in the JSON is "meters" instead of the ontology sample\'s "meter". Also, `linear_speed` is not specified in the input, so the JSON value of 1 is reasonable but given without supporting information from the text command.']
Advance for a total of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['4; The natural language command is equivalent to the JSON command. However, the speed is not mentioned in the natural language command and, thus, it is assumed in JSON which could be any reasonable value. Hence, it is not exactly conform.']
Travel straight ahead covering a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];["5; The command asks for a forward movement for a specific distance which is perfectly translated in the JSON structure. The speed wasn't specified, but any reasonable value is accepted."]
Go forward a length of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['4; Mostly conform. The natural language command approximately aligns with the JSON information in describing a forward move action. The distance parameters match perfectly ("5 meters" in the command, and "distance": 5, "unit": "meter" in the JSON). However, the "linear_speed" parameter in the JSON does not have a matching element in the command. But as the command doesn\'t specify it, any reasonable value is acceptable.']
Turn left and continue for 10 seconds.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];["2; The natural language command only partially matches the JSON structure. Although the action 'rotate' could potentially be used to interpret 'Turn left', the parameters provided in the command do not quite match the ones in the JSON (specifically, the time duration is not represented in the JSON). Additionally, the command 'continue for 10 seconds' does not match any of the available actions in the JSON structure."]
Make a left turn and keep going for 10 seconds.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['1; Only partially conforms. The natural language command instructs to turn left and then go for 10 seconds. There is no JSON structure that follows this command as the imitation of moving forward for a certain period of time and "is_clockwise" parameter\'s value isn\'t clearly specified in the natural language command. However, the rotation part is correctly represented in the provided JSON structure.']
Go left and continue for 10 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": false, "unit": "seconds"}}'];['1; The natural language command instructs to "go left" which indicates a direction but not necessarily an action of moving in this given ontology. The JSON structure provided includes "move" but adds parameters that aren\'t indicated or implied in the natural language command - like "is_forward." The "distance" parameter in the JSON structure has a value that is measured in seconds which would be more appropriate for a "time" parameter rather than "distance". Therefore, the conformity is low.']
Take a left turn and continue for a duration of 10 seconds.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "seconds"}}'];['2; The natural language command instructs a left turn and continue, which partially aligns with the JSON structure for rotation. The parameters "angle" and "is_clockwise" for rotation are accurately represented in the JSON. However, the natural language command further mentions to rotate for a duration of 10 seconds, which isn\'t represented accurately within the JSON structure (angular_velocity is given as 10 instead). The "move" action in the natural language command is totally missing in the JSON structure.']
Proceed by turning left and maintaining that direction for 10 seconds.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "seconds"}}'];['1; Although the action "rotate" matches, the parameters do not correspond. The natural language command gives a time duration ("10 seconds"), whereas the JSON structure accepts an angle and angular_velocity, not a time duration. Also, the "is_clockwise" has a value false which doesn\'t align with the "turning left" instruction.']
Rotate counterclockwise by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; The natural language command perfectly conformed with the JSON structure. The action "rotate" was correctly identified, and the parameters "angle", "is_clockwise", and "unit" were correctly assigned, even with an unspecified "angular_velocity".']
Turn 90 degrees counterclockwise.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; The natural language command "Turn 90 degrees counterclockwise" exactly matches the JSON structure as it correctly identifies the "action" as "rotate" and matches all of the parameters "angle", "is_clockwise", and "unit" with appropriate values. The "angular_velocity" value is accepted as no specific value was provided in the command.']
Rotate in the opposite direction by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command perfectly matches the provided JSON structure. The action "rotate" is correctly identified and the parameters "angular_velocity", "angle", "is_clockwise" and "unit" are effectively used and congruent with the command.']
Perform a counterclockwise rotation of 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['4.5; The action and most parameters match correctly, including the unit of measurement and the direction of rotation. However, the "angular_velocity" value does not match because it was not specified in the natural language command.']
Move in a counterclockwise direction, turning by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['4; Almost all aspects are matching correctly, but the "angular_velocity" value in the JSON structure doesn\'t match the natural language command as it was not specified in the command. The rest of the JSON keys conform to the command given.']
Back up 2 meters and stop.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": false, "unit": "meter"}}'];['5; The natural language command "Back up 2 meters and stop" matches perfectly with the action "move" in the JSON structure. Parameters such as "distance": 2, "is_forward": false, "unit": "meter" are also exactly represented in the JSON structure. Although "linear_speed" is not mentioned in the command, it\'s a reasonable value in the JSON structure and does not affect the overall conformity of the command and the structure.']
Move back a distance of 2 meters and come to a halt.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": false, "unit": "meter"}}'];["4; The JSON structure somewhat matches the command. The 'action' key is correct and 'distance', 'is_forward' and 'unit' parameters are correctly acknowledged in the params. However, the 'linear_speed' parameter is not mentioned in the command but it is assumed in the JSON, and the command to 'come to a halt' is not represented in the JSON structure."]
Reverse by 2 meters and come to a stop.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "meter"}}'];['4; The natural language command is well-represented by the JSON structure, with "Reverse by 2 meters" corresponding to the "move" action, "distance": 2, "is_forward": false, and "unit": "meter". However, the command "and come to a stop" is not directly translated in the JSON structure which might deduct the score by 1 point.']
Retreat 2 meters and bring yourself to a standstill.,['{"action": "move", "params": {"linear_speed": 0, "distance": 2, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform. The command "Retreat 2 meters and bring yourself to a standstill" matches perfectly with the JSON structure which represents an action to move with parameters consisting of a distance of 2 units, not moving forward (hence retreating), and coming to a standstill (represented by a linear speed of 0).']
Step backward 2 meters and cease movement.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform. The JSON structure matches the command given, with all parameters accurate including "move" as the action, a reasonable linear speed of 1, a distance of 2 meters specified and "is_forward" set to false, indicating backwards movement.']
Move forward at a speed of 0.5 meters per second for 6 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": true, "unit": "meter"}}'];['4; The natural language command correctly matches the JSON structure in terms of movement and speed. However, it does not directly provide the distance but provides the time and expects to calculate distance from speed and time, hence does not completely conform to the JSON structure. Also, temporal parameter (time) is not included in the given ontology.']
Proceed ahead for a duration of 6 seconds at a velocity of 0.5 meters per second.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": true, "unit": "meter"}}'];['4; Partially conform. Although the JSON structure correctly represents the action of moving at a specific speed, the natural language command specifies a duration, not a distance. However, the JSON does not have parameter for duration. The assumed distance of 3 meters in JSON is calculated assuming constant speed which may hold in ideal situations but not always.']
Advance for 6 seconds while maintaining a speed of 0.5 meters per second.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": true, "unit": "meter"}}'];['4; The action matches correctly in the JSON as "move". The "linear_speed" parameter is exactly given in the command as 0.5. The "unit" is correctly identified as "meter". The only discrepancy is the "distance" parameter, which is not explicitly given in the command and thus the guessed value of 3 is reasonable but it is based on the assumptions made from the speed and time mentioned in the command (0.5m/s for 6 seconds gives a distance of 3 meters) which can be misleading.']
Travel forward for a period of 6 seconds, covering a distance of 0.5 meters in each second.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": true, "unit": "meter"}}'];["4; The natural language command partially matches with the JSON structure but the distance has been calculated as the command mentions covering a distance of 0.5 meters in each second for a period of 6 seconds which gives a total distance of 3 meters, but natural language command doesn't specify the total distance explicitly."]
Execute a movement in the forward direction, achieving a velocity of 0.5 meters per second for a duration of 6 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command asks for a forward movement with a velocity of 0.5 m/s. This information is correctly encapsulated in the JSON structure under the keys: "action" corresponding to "move", "params" with "linear_speed" of 0.5, "is_forward" as true and the "unit" as meter. Though the command specifies, a duration and the JSON has distance, considering the relation of distance= speed x time, it\'s translated correctly to distance with a value of 3.']
Turn right and move forward for 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];["3; The action command 'turn right' is not reflected in the JSON structure which accounts for the missing part of the translation to JSON. However, the 'move forward for 1 meter' part of the command is correctly translated to JSON."]
Make a right turn and proceed ahead for a distance of 1 meter.,['{"action": "move", "params": {"linear_speed": 1.0, "distance": 1, "is_forward": true, "unit": "meter"}}'];['2; The JSON command accurately captures the "proceed ahead for a distance of 1 meter" part of the command in "move" action, however, it does not capture the "Make a right turn" part of the command. Thus, only partial conformity with the natural language command.']
Take a right turn and continue moving straight for a distance of 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['2; The given JSON structure only covers the "continue moving straight for a distance of 1 meter" part of the command not the "Take a right turn" portion. Therefore, the command partially matches with the provided JSON structure.']
Head to the right and advance forward for 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['5; The natural language command and the JSON information match correctly as both refer to moving forward a specific distance. The sample ontology keys ("action", "params", "linear_speed", "distance", "is_forward", "unit") are all correctly applied in the JSON representation of the command.']
Rotate right and proceed ahead for a length of 1 meter.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];["5; The natural language command perfectly matches with the JSON information and its keys. The 'rotate' action specifies the direction which is translated to a clockwise rotation in the JSON. Similarly, the 'proceed ahead' command is correctly translated to a forward move over a distance of 1 meter in the JSON."]
Rotate clockwise by 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Turn in a clockwise direction until you have rotated 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Perform a 180-degree clockwise rotation.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Rotate 180 degrees in the clockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];["4.5; The provided JSON matches the action (rotate), direction (is_clockwise: true), and angle (angle: 180) stated in the natural language command. However, the given angular_velocity (10) does not match the sample ontology (0.35). Still, this doesn't significantly impact the overall conformity as the natural language command didn't specify the angular_velocity. So, any reasonable value is acceptable."]
Turn to the right until you are facing the opposite direction.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Move backward for 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false}}'];['2; The natural language command partially matches the JSON structure. The action "move" and parameter "is_forward" with value false are represented correctly. However, "linear_speed" is arbitrarily set to 1, and "distance" is misinterpreted as time in the natural language command. It\'s crucial to note that the time unit "seconds" does not exist in the sample ontology.']
Go in reverse for a duration of 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "seconds"}}'];['3; The JSON structure reflects the action properly - the robot has to move. However, the "distance" key wrongly measures time ("3 seconds") instead of distance. Also, the "linear_speed" value could be relevant, but it is not mentioned in the command, so the default value of 1 is acceptable.']
Reverse your movement for a total of 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "second"}}'];['3; The natural language command instructs the action of moving in reverse for a specific duration (3 seconds), which is well represented in the JSON structure with the "move" action, "linear_speed" of 1 and movement direction of "false" for not moving forward (or reversing). However, the "distance": 3 should have been "time": 3, to be in terms of seconds, as specified in the natural language command. The use of "distance" as a key for time is not accurate.']
Backtrack for a period of 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "seconds"}}'];["2; Only partially conforming. The action and 'is_forward' parameters match correctly, the 'unit' parameter is not present in the sample ontology. The command specification of 'backtrack for a period of 3 seconds' does not implicitly provide information about 'distance' or 'linear_speed'."]
Take a 3-second step backwards.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false}}'];['1; The JSON structure partially matches the command. The action "move" and direction match with "is_forward": false. However, the natural language command doesn\'t specify the distance, but indicates a time period (3 seconds), not directly translatable to the JSON parameters where "distance" is in unspecified unit and "linear_speed" is accounted. No unit of time is accounted in the JSON structure.']
Turn left and continue for 7 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}}'];['2; The natural language command has no equivalent for "move" in the given JSON structures. The command specifies a rotation not included in the JSON structure and a move command with distance specified, but the direction being forward and not specified as left. Therefore, it doesn\'t fully match with the JSON structure.']
Take a left turn and proceed straight ahead for a distance of 7 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}}'];['2; There is a mismatch in the natural language command and the provided JSON structure. The command mentions a turn action, while there is no "rotate" action in the JSON. The "move" action is partially matched because the \'distance\' parameter is given in the command, but the \'linear_speed\' value is not mentioned in the command.']
Make a left turn and keep going for 7 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}}'];['2; The JSON partially matches the command. The move action, distance, is_forward, and unit parameters are correctly interpreted. However, the command of making a left turn which is an action of rotation is not represented in the JSON structure at all.']
Go left and carry on for a distance of 7 meters.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 7, "is_forward": false, "unit": "meter"}}'];['4; Almost conform. The natural language command corresponds well to the provided JSON structure. The action of moving is correctly interpreted as "move". The distance parameter also matches with the value of 7 meters. However, the "go left" part of the command isn\'t properly represented in JSON. The movement direction isn\'t simply forward or backward.']
Head to the left and continue for a length of 7 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meters"}}'];['4; The natural language command usually specifies moving to the left, which could imply a rotation before moving forward. However, the provided JSON structure only covers the forward movement and does not include the possible rotation action. The structure does correctly capture the distance parameter from the natural language command.']
Move forward at a speed of 1 meter per second for 4 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true}}'];['5; The natural language command perfectly matches the provided JSON structure. It has the exact action "move" and it specifies all parameters correctly and these parameters ("linear_speed", "distance" and "is_forward") exist in the JSON structure. The command also establishes a unit ("meter") to indicate speed, but this is not indicated in the JSON structure. However, this does not affect the conformity score since it can still be understood that the unit system used by the system should be "meters".']
Proceed ahead for a duration of 4 seconds with a velocity of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "second"}}'];['4; While the action and some parameters match, there is no "duration" in the original ontology and also, the unit doesn\'t match, as in the JSON it corresponds to the "distance" key but in the command, it refers to the time.']
Advance for 4 seconds, maintaining a speed of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "seconds"}}'];['4; Mostly conform. The command mostly matches the JSON structure, but there\'s a discrepancy: the "unit" in the JSON is "seconds", which doesn\'t correspond to a unit of distance in the command ("meter" should be used if taking the distance as 4 meters assuming the robot travels 1 meter per second for 4 seconds). Here, the "unit" seems to pertain to time rather than distance.']
Travel forward for 4 seconds, moving at a rate of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "seconds"}}'];['5; Exactly conform.']
For a period of 4 seconds, move ahead at a speed of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform.']
Rotate counterclockwise by 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform.']
Change the orientation by 45 degrees in a counterclockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];["5; Exactly conform. The natural language command specifies the action 'rotate' which matches with the JSON. It mentions the exact angle of rotation, direction, which are present in the corresponding JSON structure."]
Turn left by 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];["4; The natural language command aligns with the JSON structure but the angular_velocity specified in the JSON structure isn't mentioned in the command. However, it doesn't contradict it."]
Rotate anticlockwise by an angle of 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];['4; The natural language command matches the JSON structure almost correctly. The angular_velocity value being 10 is accepted as it is not specified in the command, but in the natural language command, the rotation is specified to be anticlockwise, which is not matched in the JSON structure (is_clockwise is true).']
Adjust the position by rotating in the counterclockwise direction with an angle of 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];['4.5; The natural language command matches with the JSON structure except the parameter "angular_velocity" which is not mentioned. But a reasonable value for "angular_velocity" is used in the JSON, which counts for minor deduction.']
Go straight for 8 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "meter"}}'];['5; The provided natural language command perfectly matches with the JSON structure for moving a specific distance forward, including the type of action and parameters such as distance and the direction (forward). The linear_speed was not specified in the command, but a reasonable value of 1 is included in the JSON.']
Proceed in a straight line for a distance of 8 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "meters"}}'];['5; The natural language command exactly conforms to the JSON structure. The action "move" corresponds with the "action" key in the JSON, and all parameters ("distance", "is_forward", "unit") are also specified in the command. The "linear_speed" is not specified in the natural language command but a reasonable default value is present in the JSON.']
Continue in a straight direction for a span of 8 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The command "Continue in a straight direction for a span of 8 meters" perfectly matches the JSON structure with \'move\' action. The parameters like linear_speed and is_forward are not specified in the command, but they are correctly assumed in the JSON. The distance is correctly specified as 8 meters, in accordance with the command.']
Maintain a straight path for a duration of 8 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "meter"}}'];['5; The natural language command matches the JSON structure perfectly. The "move" action is invoked in the command as well as in the JSON structure. All parameters ("linear_speed", "distance", "is_forward" and "unit") that exists in the command are also present in the JSON. The directions specified in the command (maintain a straight path) matches with "is_forward": true in the JSON. The distance "8 meters" is exactly indicated in the command and the JSON. Although the command does not specify "linear_speed", it\'s value in JSON is accepted as it is a reasonable speed.']
Stay on course for a distance of 8 meters ahead.,['{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "meter"}}'];["5; The natural language command matches perfectly with the provided JSON information. All parameters are properly assigned, even though the linear_speed is not mentioned in the command, it's given a reasonable value in the JSON so it is acceptable."]
Turn right and move forward for 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "second"}}'];['2; The natural language command mentions turning right, however, there is no JSON action corresponding to this command in the provided list. The move command matches partially but the distance specified in the command indicates time (seconds), not a distance as required by the JSON format.']
Proceed straight for 2 seconds after making a right turn.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}} ', '{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];['4.5; Almost a complete match, but the "linear_speed" value is not specified as a speed, but as a time duration in the JSON structure, which doesn\'t match the original command. The rotation matches well with the command.']
Take a right turn and continue moving ahead for a duration of 2 seconds.,['{"action": "rotate", "params": {"angular_velocity": 90, "angle": 90, "is_clockwise": true, "unit": "degrees"}},', '{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];["4; While the commands generally conform to the given JSON structures, there is a discrepancy. The move command in the natural language command specifies a duration (2 seconds) whereas the JSON command specifies a distance parameter. While they could conceivably refer to the same overall action (moving for 2 seconds does imply a certain distance), they are not exactly the same thing. In the provided ontology, time parameter for moving action is not mentioned. Therefore, it doesn't completely match."]
Make a right turn and advance forward for 2 seconds.,['{"action": "move", "params": {"linear_speed": 1.0, "distance": 2, "is_forward": true, "unit": "seconds"}}'];["1; The natural language command asks for two specific actions - a right turn and an advancement forward. The provided JSON only includes information about the movement forward, but there's nothing regarding the action of turning right."]
After turning right, keep moving forward for a period of 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];["2; The JSON structure vaguely corresponds with the natural language command, it describes to 'move' in a certain 'distance' 'forward'. However, it misses the turning right action the command mentions, and the 'distance' here is measured in duration(time) not actual distance."]
Move backward for 4 meters and stop.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meter"}}'];['4; The natural language command asks for a "move" action specifically in a backward direction for a certain distance, which matches well with the corresponding JSON structure. However, there\'s no specification for linear_speed in the natural language command and the command does not specify to "stop" which does not exist in the sample keys. So, the match isn\'t perfect.']
Reverse for a distance of 4 meters and come to a halt.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 4, "is_forward": false, "unit": "meter"}}'];['5; The natural language command correctly matches the JSON structure. The command of moving in reverse, represented in the JSON as "is_forward": false, for specified distance of 4 meters is accurately taken from the natural language command. The command of coming to a halt is inferred to be included within the conclusion of the move action.']
Go back for 4 meters and then come to a stop.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meters"}}'];['4; The JSON structure conforms mostly to the natural language command, but the command to "come to a stop" is not represented in the JSON.']
Take 4 meters in reverse and cease movement.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meter"}}'];['4; The JSON structure closely matches the natural language command as it correctly describes the action of moving and its parameters (unit of measurement, distance, and direction). However, the command to "cease movement" is not represented in the JSON.']
Travel in the opposite direction for a distance of 4 meters and then pause.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meter"}}'];['4; Almost entirely conforms. The natural language command specifies the action of moving in the opposite direction (implying not forward), for a specific distance of 4 meters. These aspects are fully reflected in the provided JSON structure. The command also includes an action to pause, which is not shown in the JSON and is therefore not fully accounted for. The linear speed is also not specified in the command, but is included in the JSON, albeit with a reasonable value.']
Rotate clockwise by 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The natural language command matches perfectly with the JSON structure. The action \'rotate\' is correctly identified and all parameters from the command (\'angle\': 270, \'is_clockwise\': true, \'unit\': "degrees") are correctly captured in the JSON. The \'angular_velocity\' has not been specified in the command, but a null value in JSON is accepted because its value is not specified in the natural language command.']
Turn to the right by 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The natural language command gives details about an action of rotation in a certain direction (right) and by a certain degree (270), which is exactly reflected in the corresponding JSON structure. The JSON also includes an added parameter of "angular_velocity", which wasn\'t provided in the language command but is still reasonable given the context.']
Move in a clockwise direction, rotating 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['4; The natural language command matches closely with the JSON structure. However, "angular_velocity" value isn\'t specified in the given command and yet is assumed as null.']
Spin in a clockwise manner, completing a 270 degree rotation.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The natural language command perfectly matches the provided JSON structure. The "rotate" action, "angular_velocity", "angle", "is_clockwise", and "unit" parameters are present in both the command and the JSON.']
Rotate by 270 degrees in a clockwise fashion.,['{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Turn left and continue for 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];["2; The natural language command requests a turn, but the JSON structure provided does not describe a rotation operation. It only covers the movement operation (for 3 meters forward). The 'rotate' action is missing in the JSON representation."]
Make a left turn and keep going for a distance of 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['4; The natural language command corresponds to the JSON structures, but the values for "angular_velocity" and "linear_speed" are not specified in the command, so the current values in the JSONs can be arbitrary.']
Proceed straight for 3 meters after making a left turn.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['4; The command slightly conforms with the JSON commands provided. The command implies a "move" action with a distance of 3 meters which is accurately reflected in the JSON structure. However, it also implies a rotate action ("making a left turn") which is not reflected in the provided JSON structure. Additionally, the linear speed value doesn\'t match the natural language command; it is not specified in the command.']
After turning left, travel straight for 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['2; The JSON structure correctly represents the action "move" with correct parameters "distance", "is_forward" and "unit". However, it lacks the action "rotate" that the initial command suggests ("After turning left"). It also assigns an arbitrary value to "linear_speed", which isn\'t suggested by the given command.']
Take a left and continue on for a distance of 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meters"}}'];['1; The natural language command indicates that the robot should turn left, which should involve the rotation action instead of a "move" action only. However, in the provided JSON, a rotation action is not indicated. The command to continue a distance of 3 meters is represented correctly in the JSON.']
Move forward at a speed of 0.3 meters per second for 5 seconds.,['{"action": "move", "params": {"linear_speed": 0.3, "distance": 1.5, "is_forward": true, "unit": "meter"}}'];["4; The JSON corresponds to the command of moving forward, with the correct speed specified. However, the distance is inferred based on the duration and speed in the natural language command, which is not in the JSON structure. But this calculation is reasonable in this context. Hence it's not exactly conform but close."]
Proceed ahead for a duration of 5 seconds at a velocity of 0.3 meters per second.,['{"action": "move", "params": {"linear_speed": 0.3, "distance": 1.5, "is_forward": true, "unit": "meter"}}'];['4; Almost all the parameters provided in the command match with the JSON structure. However, the command specifies the duration while in the JSON, distance is calculated instead.']
Advance at a rate of 0.3 meters per second for a period of 5 seconds.,['{"action": "move", "params": {"linear_speed": 0.3, "distance": 1.5, "is_forward": true, "unit": "meter"}}'];['4; The JSON object correctly represents the command "Advance at a rate of 0.3 meters per second for a period of 5 seconds.", but the calculation of distance should be 0.3 * 5 = 1.5 instead of 2. There are no non-conformities with the keys of the sample ontology, the only problem is with the value of distance key which should be 1.5 not 1.']
Travel forward at a speed of 0.3 meters per second, maintaining it for 5 seconds.,['{"action": "move", "params": {"linear_speed": 0.3, "distance": 1.5, "is_forward": true, "unit": "meter"}}'];['4; The action "move" and all parameters (linear_speed, is_forward, unit) match perfectly. The value for "distance" is not clearly stated in the natural language command but it is reasonably considered as the product of speed and time (0.3 *5). However, the time element of 5 seconds mentioned in the command is not captured in the JSON structure.']
Go straight ahead for 5 seconds while maintaining a velocity of 0.3 meters per second.,['{"action": "move", "params": {"linear_speed": 0.3, "distance": 1.5, "is_forward": true, "unit": "meter"}}'];["4; The JSON struct is mostly accurate with regards to the given command. The action 'move' and parameter 'linear_speed' match the command. The command does not specify whether the movement is forward, but 'is_forward': true is a reasonable assumption. However, the command mentions going straight for 5 seconds, not a specific distance. The calculated distance (1.5 meters) is based on the given velocity (0.3 m/s) and time (5 sec), but this calculation is not explicitly mentioned in the command. Thus, the 'distance' parameter should have been formulated as a calculation or equation, or it should be clarified in the command.", '']
Rotate counterclockwise by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform.']
Turn 60 degrees counterclockwise.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command perfectly matches the JSON information, it commands a "rotate" action, specifies the angle as 60, and indicates that the rotation should be counter-clockwise which aligns with "is_clockwise": false. The unit and angular velocity are not specified in the natural language command so any reasonable value for these parameters in the JSON is accepted.']
Rotate in the opposite direction by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 5, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];['4; The JSON structure corresponds well to the command given "Rotate in the opposite direction by 60 degrees.". However, the value of "angular_velocity" being 5 doesn\'t match well with the sample ontology, although it may be a reasonable speed.']
Rotate to the left by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": null, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];['3.5; Partially conform. The JSON structure matches the command in action and angle. However, the direction of rotation specified in the command (to the left) isn\'t equivalent to the "is_clockwise" parameter in the JSON structure (false usually signifies right/ clockwise rotation). The "angular_velocity" parameter in the JSON doesn\'t have an equivalent in the command, but any value is accepted since the parameter isn\'t specified in the command.']
Make a counterclockwise rotation of 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];['5; The natural language command matches perfectly with the JSON information. The action "rotate", parameters such as "angle", "is_clockwise", and "unit" are all correctly represented in the JSON. However, note that the "angular_velocity" in JSON is arbitrarily set as 10, which is reasonable because the natural language command doesn\'t specify it.']
Go straight for 6 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "seconds"}}'];['4; The action in the JSON structure matches with the natural language command (\'move\') and the \'is_forward\': true implies going straight as commanded. However, in the JSON structure, the "distance" is given as 6 but in the natural language command it\'s mentioned as \'6 seconds\' which corresponds more to time than distance. Our ontology doesn\'t provide a \'time\' parameter for the \'move\' action. Thus, the JSON is somewhat conforming but not exactly.']
Proceed in a straight line for a duration of 6 seconds.,['{"action": "move", "params": {"linear_speed": "undetermined", "distance": "undetermined", "is_forward": true, "unit": "second"}}'];['4; While it is clear the natural language command corresponds to the "move" action, the lack of information regarding linear speed and distance in the command prevents a perfect match to the JSON structure. Is_forward defaults to true as it is a forward motion that is indicated.']
Keep moving forward in a straight path for 6 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "second"}}'];['4; There is a partial conformity between the natural language command and the JSON structure. The "action" key matches, and some of the parameters match such as distance and is_forward, but the linear_speed value doesn\'t match with the command and the unit is given as "second" which doesn\'t really make sense for moving in a straight line. It should be a unit of length.']
Maintain a straight course for 6 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "seconds"}}'];['3; The JSON structure partially matches the command. The "move" action in the JSON corresponds with the command to "Maintain a straight course". However, the "distance" key in the JSON should be time-related (like "duration") rather than spatial-related since the command specifies "for 6 seconds", not a specific distance. Also, the "unit" in the JSON structure is incorrectly set as "seconds" which is a unit of time, it should be a unit of either distance(meters) or speed(m/s) that fits with the "move" and "distance" key. Therefore, the matching is partially correct.']
Continue in a straight direction for a period of 6 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "seconds"}}'];['4; Partially conform. The JSON structure correctly represents the action "move" and the direction "forward" in the given natural language command. However, the command mentions the time (6 seconds) and not the distance. The JSON has distance instead of a time attribute which makes it not perfectly conforming.']
Turn right and move forward for 7 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}}'];['4; The JSON command correctly represents the part of moving forward for 7 meters in the natural language command, but does not include the "Turn right" action and does not match with the rotate action from the example JSON structures.']
Take a right turn and proceed straight ahead for a distance of 7 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}}'];['2; The natural language command involves both rotation and movement but the JSON executes only movement action. The rotation part of the command is not represented in the JSON. Hence partial match.']
Make a right-hand turn and continue moving forward for a length of 7 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": true, "unit": "degrees"}},', '{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform.']
Head to the right side and advance for a distance of 7 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meters"}}'];['2; The natural language command partially conforms to the JSON structure. The action and parameters \'distance\' and \'unit\' match, but \'linear_speed\' and \'is_forward\' are not specified in the natural language command, hence their values are randomly assigned in JSON. The command "Head to the right side" does not have its equivalent in the JSON structure provided.']
Rotate to the right and travel straight for 7 meters.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meters"}}'];['4; Partially conform. The natural language command does not specify "angular_velocity" or "linear_speed" in the JSON structure, but the other parameters match appropriately. Also, "unit" for "move" action is \'meter\' in ontology but \'meters\' in provided JSON.']
Move 2 meters forward.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meters"}}'];['4.5; The JSON command structure corresponds to the natural language command, but "linear_speed" value is present in the JSON, which is not mentioned in the natural language command, so there is a small mismatch. Otherwise, the keys and values in the JSON are correctly translated from the natural language command.']
Proceed straight ahead by a distance of 2 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['5; The natural language command indicates a forward motion for a specific distance, and it perfectly corresponds to the provided JSON structure. All required parameters (action as "move", distance specified, is_forward as True and unit as "meter") exist in the JSON.']
Advance 2 meters in the forward direction.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['4; While the natural language command matches the JSON structure well, the JSON\'s "linear_speed" parameter is not specified in the natural language command, hence the deducted point.']
Take a step forward for a distance of 2 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['4.5; The natural language command matches with the JSON action "move" and all parameters like "distance", "is_forward" and "unit" are specified correctly. However, "linear_speed" is not specified in the natural language command, and while the provided value is reasonable, the lack of specificity in the command prompts a slight deduction.']
Move straight ahead, covering a distance of 2 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command corresponds perfectly to the JSON structure in terms of action, distance, movement direction, and unit used.']
Turn left and move forward for 5 seconds.,['{"action": "move", "params": {"linear_speed": 1.0, "distance": 5, "is_forward": true, "unit": "seconds"}}'];['3; The JSON structure somewhat matches the command. The action "move" is referred to in the command and the parameter "is_forward" matches with the command\'s "move forward". However, the command doesn\'t specify linear_speed or unit: "seconds". In the real world context, \'move forward for 5 seconds\' does not necessarily imply a distance or a speed. Also, the command \'Turn left\' is not matched in the JSON.']
Move forward for 5 seconds after turning left.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}},', '{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "seconds"}}'];['4; The client\'s move command matches the second JSON structure ("action": "move"), so the user\'s intention is correctly interpreted. However, the unit of distance is set as "seconds" in the JSON, which might not be intended as it generally denotes "meters" in a similar context. The rotation command given by the user ("turning left") is correctly interpreted in the first JSON structure ("action": "rotate"). However, the specific angular velocity and angle in the client\'s command are not specified, so any reasonable values are accepted in the JSON structure.']
After making a left turn, proceed forward for 5 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "second"}}'];["2; The natural language command references making a turn but there is no JSON structure provided for the 'rotate' action. The 'move' action with the 'is_forward' parameter set to true only partially matches the natural language command. The 'distance' parameter in the JSON structure is mismatched as the natural language command specifies a time duration (5 seconds) and not a distance."]
Take a left turn and continue moving forward for 5 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "seconds"}}'];['1; The natural language command instructs to "Take a left turn" however, this is not reflected in the given JSON structure. The JSON structure only includes the command for moving forward which is only part of the natural language command. Therefore, the JSON structure does not fully conform to the natural language command.']
Start moving forward for 5 seconds after making a left turn.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}} ', '{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "seconds"}}'];["3; Partial match. The action commands match but some parameters inside the JSON do not match with the natural language command. In the rotation command, 'angular_velocity' is not mentioned in the sentence, in the 'move' command, 'distance' is measured in 'seconds' instead of 'meter'."]
Rotate counterclockwise by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['4; The natural language command and the JSON structure in principle match, as it involves a "rotate" action, the direction is counterclockwise (which corresponds to "is_clockwise": false in JSON), and the unit is given as "degrees". The angle also corresponds to the command, being 90 degrees. However, the "angular_velocity" mentioned in JSON is not specified in the command, but it\'s not a necessary parameter in this context -- it can vary, so that\'s not a problem. The score can\'t be a perfect 5 only due to this discrepancy, hence it\'s 4.']
Rotate 90 degrees counterclockwise.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform.']
Perform a counterclockwise rotation of 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; The JSON structure accurately matches the natural language command. It correctly defines the "action" as "rotate" and provides the appropriate parameters - "angular_velocity", "angle", "is_clockwise", and "unit" - with values that conform to the command.']
Rotate by 90 degrees in the counterclockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['4; The natural language command matches well with the JSON structure but the value for "angular_velocity" is not specified in the command, so we cannot compare and confirm whether the natural language command completely conforms with the JSON structure.']
Turn left by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 90, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; The natural language command asking to turn left by 90 degrees perfectly matches with the JSON structure provided in terms of action and parameters concerned with rotation. The only parameter added is "angular_velocity" which is considered as reasonable value.']
Move 3 meters backward.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "meters"}}'];['3; The JSON correctly interprets the action of moving and the distance of 3 units. However, the linear speed is arbitrarily set to 1 while there is no such information in the command. Also \'meter\' should have been used in "unit" instead of \'meters\' to match with the example ontology. Lastly, the JSON captures the \'backward\' movement correctly through the \'is_forward\': false key-value pair.']
Go back 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "meter"}}'];["4.5; Almost correct matching with the 'move' action in the ontology, but the 'linear_speed' value in the command is not mentioned in the Natural Language command, hence the match is not perfect."]
Retreat 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform.']
Step 3 meters in reverse.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform. The JSON structure accurately represents the action of moving a certain distance in reverse which matches with the natural language command mentioned.']
Travel in the opposite direction for 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "meter"}}'];["5; Exactly conform. The natural language command matches exactly with the JSON structure. The action is 'move', which is an available action in the ontology. The parameters linear_speed and unit have reasonable values, 'distance' matches exactly with the command '3 meters', and 'is_forward' is set to false indicating 'opposite direction'."]
Turn right and move forward for 1 meter.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}}'];['4; The JSON commands correctly represent the natural language command with the keys from the sample. However, the value for "angular_velocity" does not match exactly with the natural language command as it is not specified in the command.']
Take a right turn and proceed straight ahead for a distance of 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];["3; The natural language command partially matches the JSON structure. The 'move' action with distance parameter is correctly extracted but the direction ('right turn') from command is ignored."]
Make a right turn and advance ahead for a distance of 1 meter.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}},', '{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform.']
Head to the right and continue moving forward for 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['4; The JSON structure conforms highly to the natural language command, correctly interpreting the action as "move" and assigning the distance to move forward as 1 meter, as suggested in the command. However, the natural language command implies a specific direction ("to the right") that is not captured and represented in the JSON structure. It also assigns a "linear_speed" of 1, which is not specified in the command. Thus, not all details are perfectly captured.']
Rotate to the right and proceed in a forward motion covering a distance of 1 meter.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['5; The provided JSON structures accurately represent the natural language command given. The \'rotate\' and \'move\' actions are correctly converted with appropriate parameters - direction of rotation (clockwise), distance, linear speed (an assumed reasonable value), and the direction of movement (forward). The unit for the movement action is "meter" which is also explicit in the instruction.']
Go to the living room and stop.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living Room"}}}'];['5; The natural language command is perfectly converted into the JSON structure shown. The command requests an action to "go_to_goal" which matches the JSON action. The specified parameter "location" is set as "Living Room" which is in line with the command\'s desire to go to the living room. The type of the value is correctly identified as a string.']
Please proceed to the living room and come to a halt.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living Room"}}}'];['4; While the command accurately correlates with the "go_to_goal" action and the location parameter in the first JSON structure, the command to "come to a halt" is not represented in any of the given JSON structures. Therefore, it is not a complete match.']
Make your way to the living room and cease moving.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living room"}}}'];['5; The natural language command precisely conforms to the JSON structure, as the "go_to_goal" action and the destination "Living room" is correctly defined.']
Head to the living room and stand still.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living Room"}}}'];['5; Exactly conform. The command accurately asks for the action "go_to_goal" with the parameter "location" set to "Living Room", matching perfectly with the provided JSON structure.']
Move towards the living room and come to a stop.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "living room"}}}'];['4; The command and JSON structure match well. The "go_to_goal" action and "location" parameter conform to the sample keys. Though the exact stop action is not specified in JSON, the command to move towards the living room matches well.']
Move 4 meters forward at a speed of 2 meters per second.,['{"action": "move", "params": {"linear_speed": 2, "distance": 4, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command matches perfectly with the JSON structure, with all parameters specified accurately in the command.']
Proceed ahead by a distance of 4 meters while maintaining a velocity of 2 meters per second.,['{"action": "move", "params": {"linear_speed": 2, "distance": 4, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform.']
Travel in the forward direction for 4 meters with a constant speed of 2 meters per second.,['{"action": "move", "params": {"linear_speed": 2, "distance": 4, "is_forward": true, "unit": "meter"}}'];["5; Exactly conform. The natural language command specifies an action of moving forward a certain distance with a certain speed, which perfectly matches the JSON structure provided. The parameters 'distance', 'linear_speed', 'is_forward', and 'unit' are also mentioned and their values match with those mentioned in the command."]
Advance 4 meters in the forward direction while maintaining a velocity of 2 meters per second.,['{"action": "move", "params": {"linear_speed": 2, "distance": 4, "is_forward": true, "unit": "meter"}}'];["5; Exactly conform. The natural language command perfectly matches with the corresponding JSON command where action is 'move', linear speed is 2, distance is 4, the direction is forward and the unit of measurement is meter."]
Propel oneself forward at a rate of 2 meters per second, covering a distance of 4 meters.,['{"action": "move", "params": {"linear_speed": 2, "distance": 4, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform.']
Rotate clockwise by 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];["4; The parameters in the provided JSON structure match with the instruction given in the natural language command - to rotate clockwise by 180 degrees. The only parameter that doesn't have a value (angular_velocity) is acceptable to be null according to the instruction provided. A point is deducted because angular_velocity could have been given a reasonable value instead of null."]
Turn 180 degrees in a clockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['4.5; The action and the parameter keys match the sample ontology and the natural language command completely. The only difference is the value assigned to the key "angular_velocity". But, according to the guidelines, even though the value isn\'t specified in the command, any reasonable value in the JSON is accepted. Hence the deducted -0.5.']
Perform a 180-degree clockwise rotation.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];["5; The natural language command completely matches with the JSON structure, including the action 'rotate' and the parameters 'angle', 'is_clockwise', and 'unit'. The value of 'angular_velocity' was not specified in the command, but its presence in the JSON is acceptable as any reasonable value is accepted."]
Rotate by 180 degrees in the clockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 90, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['4; The "angular_velocity" value in the JSON structure deviates from the natural language command which does not specify it. But as per the instruction, because the specific information is not provided in the command, any reasonable input in that field is acceptable. Therefore, there is a high level of accordance, but not complete.']
Turn in a clockwise fashion, rotating 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 5, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Turn left and move forward for 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['3; The command does include moving forward, which is correctly represented in the JSON. However, the command to turn left is not reflected in any JSON structure. The "rotate" action would have been more appropriate to reflect the "Turn left" command. The linear_speed value in the JSON is not specified in the natural language command but an accepted reasonable value is used.']
Make a left turn and proceed straight ahead for a distance of 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": true}}'];["5; Exactly conform. The natural language command perfectly matches with the provided JSON structure. The 'rotate' action is properly encoded in the JSON with appropriate values, indicating a left turn (`is_clockwise: false`, and `angle: 90` degrees). The 'move' action is also correctly represented with the specified distance of 3 meters (`distance: 3` and `is_forward: true`)."]
Take a left and continue moving forward, covering a span of 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['2; The natural language command instructs the robot to move forward for 3 meters, which matches the "move" action in the JSON. However, the "rotate" action is implied in the command to "take a left", but is not reflected in the provided JSON. The JSON incorrectly assumes a default "linear_speed" value of 1 which is not specified in the natural language command.']
Rotate to the left and advance for 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meters"}}'];['4.5; Almost perfect conformity. The angular velocity is not specified in the command, but with a value of 1 in the JSON it is still reasonable. However, the command specifies to "rotate to the left" which typically assumes a 90 degree rotation counter-clockwise, while the JSON provided only indicates a 40 degree rotation. Therefore, the rotation angle in the JSON does not match the natural language command perfectly.']
Shift towards the left and travel straight for a distance of 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['2; The natural language command contains two actions: rotating (shift towards the left) and moving (travel straight for a distance of 3 meters). The provided JSON structure only contains the moving action, with the correct distance parameter. However, it lacks the rotation action, hence the low conformity score.']
Move 2 meters backward at a speed of 0.5 meters per second.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": false, "unit": "meter"}}'];['4; The JSON structure correctly represents the action "move" specified in the command with the correct parameters "linear_speed", "distance", and "unit". The direction of the movement is correctly inferred ("is_forward": false) from the command instruction of "backward". However, The exact ontology term for the direction of the movement isn\'t specified in the sample keys, so "is_forward" might not be the correct key for all uses.']
Back up 2 meters with a velocity of 0.5 meters per second.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform.']
Go in reverse for a distance of 2 meters at a rate of 0.5 meters per second.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform.']
Retreat at a speed of 0.5 meters per second for a duration that covers a distance of 2 meters.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": false}}'];['5; Exactly conform. The natural language command matches perfectly with the JSON information. The action is moving, the linear speed is 0.5, the distance is 2, and the robot is not moving forward i.e., retreating as specified.']
Travel backwards at 0.5 meters per second, covering a distance of 2 meters.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": false, "unit": "meter"}}'];['5; The natural language command perfectly matches with the JSON structure by mentioning the action to be performed, linear speed, distance to be covered, direction of movement, and the unit of measure.']
Go to the bedroom and stop.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}}}'];['3; Partial Conformity. The natural language command corresponds with the JSON structure for the command \'go_to_goal\'. The specified location has been switched from "Kitchen" to "Bedroom". However, the command "stop" does not match any action from the provided JSON structures.']
Please proceed to the bedroom and come to a halt.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "bedroom"}}}'];['4; The natural language command mostly matches the JSON structure. The "go_to_goal" action is correctly interpreted with the required "location" parameter. However, the command to "come to a halt" is not explicitly converted into a JSON command structure, leading to a small mismatch.']
Make your way to the bedroom and cease your movement.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}}}'];["5; The natural language command perfectly matches the JSON structure, the action 'go_to_goal' is correct and parameter value 'Bedroom' is present in the JSON."]
Head to the bedroom and pause.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}}}'];["1; The natural language command is only partially represented in the JSON. The 'go_to_goal' action to the 'Bedroom' location is represented, but the command to 'pause' is not present in the JSON."]
Go to the bedroom and stand still.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}}}'];['5; The command \'Go to the Bedroom\' perfectly matches the JSON structure given for "go_to_goal". The "location" parameter is correctly identified as "Bedroom". Although the "stand still" part of the command does not correspond to any action or parameter in the JSON structures, it doesn\'t cause any non-conformity, and thus doesn\'t affect the score.']
Rotate counterclockwise by 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command asks for a counter-clockwise rotation by 45 degrees, which matches perfectly with the JSON command that has "rotate" action with parameter "angle" as 45, "is_clockwise" as false, and "unit" as "degrees". Even though the "angular_velocity" is not mentioned in the natural language command, its presence in the JSON doesn\'t affect the conformity score according to the rules.']
Turn 45 degrees in the counterclockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];['5; The natural language command exactly matches the JSON information. The rotation action is correctly identified, the angle is correct and the direction is correctly identified as counterclockwise, which corresponds to "is_clockwise": false in the JSON structure. The angular_velocity key is not specified in the command, but it contains a reasonable value in the JSON structure.']
Rotate anticlockwise at an angle of 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];['4; The command matches the JSON structure but the angular_velocity in the JSON does not match with the natural language command. We cannot determine the angular_velocity from the natural language command. However, the rest of the keys and values match correctly.']
Rotate left by 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command is fully represented by the JSON structure. The "action" is correctly set to "rotate" and the "params" have appropriate settings for "angular_velocity", "angle", "is_clockwise" and "unit".']
Perform a 45-degree counterclockwise rotation.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];['4; The "action" and "params" keys in the JSON map correctly to the natural language command, but the value for "angular_velocity" doesn\'t match the unspecified speed in the command. The other parameters ("angle", "is_clockwise", "unit") match the natural language command perfectly.']
Turn right and move forward for 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['2; The command matches the "move" action and includes most of the necessary parameters (distance, is_forward, unit), but does not match completely because the linear_speed value is set to 1 in the JSON while the natural language command does not suggest a specific speed. The JSON also does not include a "rotate" action to represent the "turn right" part of the command.']
Proceed forward for a distance of 4 meters after making a right turn.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['2; The JSON structure partially matches the command as the move action is correctly represented. The "distance": 4 and "is_forward": True are properly captured. However, the phrase "after making a right turn." signifies a rotate action which is not present in the provided JSON syntax. Therefore, a JSON for rotate action should be also included.']
Take a right and continue moving ahead for 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['2; A part of the command i.e., moving ahead for 4 meters matches the JSON structure. However, the JSON structure does not account for "Taking a right" which is missing from the command.']
After making a right turn, advance straight for a distance of 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['4; Although the JSON structure matches the intended action of moving in the natural language command, the command also specifies that a right turn should be made. This part is missing from the JSON instruction, hence the slightly lower score.']
Make a right-hand turn and proceed forward for 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['3; Only the action to move forward matches but not the action to turn right. The JSON commands lack an action for turning.']
Move 1 meter forward at a speed of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform.']
Proceed ahead by 1 meter with a velocity of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform.']
Advance forward by a distance of 1 meter, maintaining a speed of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command matches perfectly with the JSON structure. All specified parameters in the command ("linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter") are represented correctly in the JSON.']
Go one meter ahead, moving at a rate of one meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];["4; Almost all elements conform. However, in the command, the speed is specified as one meter per second, but in the JSON it's given as 0.5 which does not match the command."]
Travel forward for 1 meter while maintaining a speed of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command instructs a forward motion over a distance of 1 meter with a specific speed. This directly translates to the JSON structure provided, with "action" as "move", a "distance" of 1, and a "linear_speed" of 1. This matches exactly with the sample ontology keys.']
Rotate clockwise by 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Turn 270 degrees in a clockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];["5; The command and the JSON structure match perfectly. The action 'rotate' is correct and all parameters ('angular_velocity', 'angle', 'is_clockwise' and 'unit') are also correct. The parameter 'angle' value is exactly specified in the natural language command, while the 'angular_velocity' value isn't specified but it is accepted as it has a reasonable value. The 'is_clockwise' value in the JSON information matches with the direction specified in the command, and the 'unit' is appropriate for the 'angle' parameter."]
Rotate by 270 degrees in a clockwise manner.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Execute a clockwise rotation of 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Shift the orientation by 270 degrees in a clockwise fashion.,['{"action": "rotate", "params": {"angular_velocity": 90, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['5; The JSON exactly matches the natural language command. The action "rotate" is correctly identified, and the parameters "angle" and "is_clockwise" are accurately taken from the command. The "angular_velocity" does not match exactly but is a reasonable value.']
Turn left and move forward for 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];['3; Partially conform. The command asks for a "turn left" action which is not completely addressed in the JSON as there is no "rotate" action included. However, "move" action is correctly parsed with is_forward as true but the "distance" parameter is irrelevant here when the time "2 seconds" is mentioned not the distance itself. In such a case, the parameters would depend on what the unit of linear_speed is representing.']
Proceed forward for 2 seconds, then make a left turn.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "second"}} ', '{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['3; Partial match. The "move" action in the command matches with the "move" action in the JSON, as well as "unit" as "second", but the distance isn\'t properly defined because moving forward for two seconds is different from moving a distance of 2 units (there\'s a missing relationship with speed). For the "rotate" action, although mentioned in the command, the actual angle and direction of rotation are not specified in the natural language command and so the JSON does not accurately represent the command.']
Take a left turn and continue moving straight ahead for 2 seconds.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}} ', '{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];["3; Partial conformity. The JSON for rotation corresponds with taking a left turn, but the 'angular_velocity' value doesn't match the command if considered. The JSON for movement also matches 'continue moving straight ahead', however, the 'distance' should be a measure of length (meters, feet..) and not time ('seconds'). Although, the speed and is_forward values are suitable which was not clearly mentioned in the command which is acceptable as per guidelines."]
Make a left turn and drive forward for 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "second"}}'];['3; Partial conformity. The "move" action and "is_forward" parameter are correctly represented in the JSON structure. However, the "make a left turn" part of the command is not represented at all in the JSON structure and the interpretation of driving forward for 2 seconds as a distance of 2 in units of seconds is questionable.']
After turning left, continue moving straight for 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];['1; The JSON structure includes a move action, which is implied in the "continue moving straight" part of the command. However, the natural language command specifies a duration ("for 2 seconds") rather than a distance, which is what the JSON structure requires, hence the low score. Furthermore, the command to turn left cannot be matched to any action in the JSON structures, causing further inconsistencies.']
Move 3 meters backward at a speed of 1.5 meters per second.,['{"action": "move", "params": {"linear_speed": 1.5, "distance": 3, "is_forward": false, "unit": "meter"}}'];['4; The JSON structure mostly matches the natural language command with the correct action "move" and correct parameters such as "linear_speed" as 1.5, "distance" as 3 and "unit" as "meter". However, the natural language command doesn\'t specify if the movement is forward or backward and the JSON structure could have "is_forward": false or "is_forward": true, but the JSON structure has "is_forward": false. Matching is not perfect due to the ambiguity in the natural language command regarding the "is_forward" parameter.']
Go backwards for a distance of 3 meters at a velocity of 1.5 meters per second.,['{"action": "move", "params": {"linear_speed": 1.5, "distance": 3, "is_forward": false, "unit": "meter"}}'];['4.5; It is correctly translated to JSON that matches the ontology,vbut the action name should be the same as the sample ontology, "move", not "go".']
Reverse direction and travel a distance of 3 meters at a speed of 1.5 meters per second.,['{"action": "move", "params": {"linear_speed": 1.5, "distance": 3, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform. The natural language command perfectly matches with the JSON structure in terms of action (move), linear speed (1.5), distance (3), direction (reverse, hence "is_forward": false), and unit (meter).']
Retreat by 3 meters, maintaining a constant speed of 1.5 meters per second.,['{"action": "move", "params": {"linear_speed": 1.5, "distance": 3, "is_forward": false, "unit": "meter"}}'];["5; The natural language command exactly matches the JSON structure gives instruction for the action 'move' with specified parameters on linear speed, distance and direction which are represented by the same keys in the JSON structure."]
Travel backwards for 3 meters, maintaining a velocity of 1.5 meters per second.,['{"action": "move", "params": {"linear_speed": 1.5, "distance": 3, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform.']
Go to the dining room and stop.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Dining Room"}}}'];['5; Exactly conform.']
Proceed to the dining room and come to a halt.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "dining room"}}}'];['4; The JSON structure correctly identifies the action "go_to_goal" and the location to go to as "dining room". However, the natural language command also specifies to "come to a halt" which isn\'t represented in the JSON command.']
Head over to the dining room and pause.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Dining room"}}}'];['4; The action "go_to_goal" and value of "Dining room" match correctly with the command. However, the command includes "pause" which is not represented in the JSON.']
Make your way to the dining room and bring yourself to a stop.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "dining room"}}}'];['4; Subject\'s action hardly matches with the "go_to_goal" action key. However, "bring yourself to a stop" action does not correlate with any JSON structure. Furthermore, "location" is rightly identified as "dining room".']
Move towards the dining room and cease your motion.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "dining room"}}}'];['2; The JSON structure does correspond to the command of moving to a location, but the location specified ("dining room") does not match with the location in the command ("kitchen"). Furthermore, the JSON structure corresponding to the action of stopping the motion is missing.']
Rotate counterclockwise by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];['4; The JSON structure matches and includes all the commands and parameters mentioned in the natural language command. However, the value for "angular_velocity" does not match because it wasn\'t specified in the command, yet it\'s given an arbitrary value in the JSON.']
Turn left by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command specifies a rotation action, which matches the JSON structure provided. Also, the values for the "angle" (60) and the "unit" ("degrees") are stated explicitly in the command, which are correct in the JSON format provided. The direction of rotation ("is_clockwise") is also correctly inferred as false from the command "turn left". "angular_velocity" isn\'t specified in the command, but a reasonable value of 10 is used in the JSON.']
Rotate in the opposite direction by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];['5; The command correctly identifies the rotation action, the angle to be rotated, the direction of rotation as opposed to clockwise and the unit of measurement in degrees. The JSON also accurately represents this information. The angular_velocity is not mentioned in the natural language command so any value for it in the JSON is acceptable.']
Execute a 60-degree counterclockwise rotation.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false}}'];['5; The command perfectly matches with the JSON structure. The action "rotate" is called with acceptable parameters: the "angular_velocity" (any reasonable value is allowed since it\'s not specified in the command), the "angle" is correctly given as 60, and "is_clockwise" is correctly marked as false for a counterclockwise rotation.']
Rotate anticlockwise by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];['4; There is a mismatch only in the value of \'angular_velocity\' between the command and the JSON. All other parameters match perfectly, including the action "rotate", direction as counterclockwise represented as "is_clockwise": false, the angle of rotation, and the unit as degrees.']
Move forward for 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command asks for a forward movement which is correctly represented in JSON with the action "move" and the parameter "is_forward" set to true. The distance is correctly captured as 5 meters. Linear speed is not mentioned in the command but is reasonably represented in the JSON structure.']
Proceed ahead for a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['5; The natural language command gives clear instructions to move ahead (is_forward: True) for 5 meters. This can be translated into the JSON structure provided, except for the linear_speed, which is given a reasonable value of 1 as it is not specified in the command. Therefore, all the keys in the JSON structure conform to the command.']
Advance straight ahead for 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];["4; The action and parameters in the JSON structure align with the command but the 'linear_speed' value in the JSON does not match the command, as the command doesn't specify a speed."]
Travel forward for a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command matches perfectly with the provided JSON structure. The "move" action is correctly used along with "distance", "is_forward" and "unit" keys. The values of the mentioned keys in the command also match with that of the sampled ontology.']
Go in the forward direction for 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['5; The natural language command gives instructions for a forward motion for a specific distance, these are correctly and precisely translated in the JSON structure. The action "move", direction as "is_forward" and "distance" as 5 meters match perfectly. Even though the linear speed isn\'t specified in the command, it is a reasonable value.']
Rotate counterclockwise by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command accurately matches the JSON structure. The "rotate", "angle", "is_clockwise", and "unit" commands are all present and accurately represented in the JSON. The "angular_velocity" is not specified in the natural language command, but its value in the JSON is reasonable.']
Turn 90 degrees counterclockwise.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The JSON perfectly matches the command. The action "rotate" is present in the JSON and in the command, and the params ("angle": 90 and "is_clockwise": false) are also exactly matching the command of turning 90 degrees counterclockwise. The "angular_velocity": 10 and "unit": "degrees" are reasonable values for the parameters not specified in the command.']
Rotate anticlockwise by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command asked for a rotation of 90 degrees in an anticlockwise direction which matches the JSON structure\'s "rotate" command. The "angular_velocity" is reasonable as it was not specified in the natural language command.']
Rotate to the left by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];["4; The natural language command matches with the JSON command correctly, as it directs to rotate, specifies the angle and the direction. However, the angular_velocity doesn't match perfectly - the natural language command doesn't specify the speed of the rotation while the JSON structure does."]
Change the orientation to the left by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];["5; The JSON structure matches perfectly with the given command. The action 'rotate' and parameters like 'angle': 90, 'is_clockwise': false and 'unit': 'degrees' are correctly mentioned. Although 'angular_velocity' value doesn't match exactly with the command, any reasonable number is accepted according to the instructions."]
Move backward for 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "seconds"}}'];['3; The command partially conforms to the JSON structure. The action "move" and the keys ("linear_speed", "distance", "is_forward", "unit") are all correctly used. However, in the command "move backward for 3 seconds", the interpretation of 3 seconds as parts of "distance" is not quite applicable as it should be related to time. Therefore, the natural language command could be misinterpreted in the JSON. Also, "linear_speed" is not specified in the command but appears in the JSON structure.', '']
Reverse for a duration of 3 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 1.5, "is_forward": false, "unit": "seconds"}}'];['3; The JSON structure includes the "action" as "move" and the direction is appropriately specified as "is_forward": false which is in line with the "Reverse" command. However, the "distance" key isn\'t supposed to be in this JSON structure as it\'s not mentioned in the natural language command and instead there should be a "duration" key. The "unit" is also correctly mentioned as "seconds" which matches with the natural language command.']
Go in reverse for a period of 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "second"}}'];['4; The JSON structure mostly conforms to the natural language command; however, the "is_forward" key should ideally be false given the command is to go in reverse. The "distance" parameter should also be understood as a duration for moving backwards, not necessarily a physical distance.']
Travel backwards for a total of 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "seconds"}}'];['4; The action "move" does match and most parameters in the JSON match with the command including "linear_speed" and "is_forward". However, the "distance" is not directly specified in the command, rather a duration of the action is mentioned. The unit is "seconds" which does not match with the sample ontology where the unit for the action "move" is given in "meter". However, the instruction does imply a certain interpretation of \'distance\' in terms of time spent moving, which is reasonable but not exact.']
Move in the opposite direction for 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "seconds"}}'];["2; Only partially matching. The natural language command requests a movement for a duration ('3 seconds'), rather than a distance. The JSON structure provided calculates a movement for a distance, not a specific time duration. Furthermore, the value of 'linear_speed' parameter is not mentioned in the natural language command, so its value in the JSON structure ('1') cannot be confirmed as correct or incorrect."]
Turn left and move forward for 2 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['3.5; Partial conformity. The given command instructs to "turn left" before "moving forward". The JSON structure contains the "move" command, however, the corresponding JSON structure for "turn left" command (rotate action) is missing. Thus, partial conformity exists with the given ontology and missing values for linear speed are assumed to be fine.']
Proceed forward for 2 meters after making a left turn.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['2; The natural language command only partially matches with the JSON structure. The "move" action is correctly interpreted and the "distance", "is_forward", and "unit" parameters are correctly defined. However, the "linear_speed" parameter is not mentioned in the natural language command and the command includes a left turn which isn\'t reflected in the provided JSON structure. Therefore, the "rotate" action should have also been included but isn\'t.']
Make a left turn and advance for 2 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['1; The natural language command includes two parts: making a left turn and advance for 2 meters. However, the provided JSON structure only includes the action of moving a certain distance, which corresponds to the "advance for 2 meters" part of the command. The "make a left turn" part of the command is not present in the JSON, hence the conformity score is 1.']
Take a left and continue forward for a distance of 2 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['2; The JSON structure partially matches the command. The command does mention moving forward for a certain distance, which corresponds to the "move" action in the JSON. However, there is no existing JSON command for taking a left turn in the set of provided JSON structures which leaves the command partly unmatched.']
Move ahead for 2 meters after making a leftward turn.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}}'];['3; The command partially matches the JSON structure. The action "move" and the params distance, is_forward, and unit match correctly with the specified parameters and their values. However, there is no mention of "linear_speed" in the command nor there is a command to make a leftward turn.']
Make a U-turn and move in the opposite direction for 10 seconds.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];["4; Partially conform. The JSON for 'action': 'rotate' with 180 degrees matches with the command to make a U-turn. However, the natural language command to move in the opposite direction for 10 seconds does not match the JSON as no such action or parameters are described in the given samples."]
Perform a U-turn and proceed in the opposite direction for a duration of 10 seconds.,['{"action": "rotate", "params": {"angular_velocity": 180, "angle": 180, "is_clockwise": true, "unit": "degrees"}} ', '{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": false, "unit": "second"}}'];["4; Partially conform. The commands given are highly related to the JSON structures, however, the values 'angular_velocity' and 'distance' do not comply with the command given. 'Angular_velocity' should not be 180 and 'distance' in moving action should not be dependent on time (10 seconds)."]
Execute a U-turn and travel in the opposite direction for a time span of 10 seconds.,['{"action": "rotate", "params": {"angular_velocity": 180, "angle": 180, "is_clockwise": false, "unit": "degrees"}}'];['3; Partially conform. The natural language command refers to a rotation and travel in the opposite direction. The JSON representation correctly identifies the rotation action, however, the "move" action is missing so it\'s not completely conforming with the command. Also, the provided parameters in JSON for rotation are not specified in the natural command, but they\'re reasonable.']
Turn around and travel in the opposite direction for a duration of 10 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "seconds"}}'];["2; The natural language command partially matches with the 'move' action in the JSON structures. However, the command specifies the duration of the movement instead of distance. The provided JSON only adresses 'distance', and the parameters 'linear_speed' and 'is_forward' are not mentioned in the command. The 'unit' in JSON structure doesn't conform with the time unit specified in the command."]
Perform a U-turn and move in the opposite direction for 10 seconds.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 180, "is_clockwise": true, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": false, "unit": "second"}}'];['4; The command and the JSON structures are mostly conform, however, in the second JSON structure: "linear_speed" and "distance" values should not be fixed as 1 and 10 in the context of the command. Also, "is_forward" parameter should be true. Seeing that robot performs a U-turn beforehand, moving forward would actually mean moving in the opposite direction as commanded. Lastly, distance is not mentioned in the command, therefore it can\'t be defined as a fixed value. Instead, the unit should be seconds and the value should represent the time (10 sec) the robot should continue this action.']
Rotate clockwise by 180 degrees and stop.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; The command has been accurately converted into JSON format. The action of "rotate" matches correctly, the parameters "angle", "is_clockwise" and "unit" are present and have their appropriate values, although the "angular_velocity" does not match, it was not specified in the natural language command so the given value is accepted.']
Perform a 180-degree clockwise rotation and then come to a halt.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; The command perfectly matches the JSON structure. The "rotate" action with an angle of 180 degrees in a clockwise direction is correctly interpreted. The angular_velocity is not specified in the natural language command, thus any reasonable value is accepted.']
Execute a clockwise rotation of 180 degrees and then cease movement.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; The natural language command exactly matches the JSON structure with "action": "rotate" and appropriate parameters including the specified rotation angle of 180 degrees and the direction of rotation as clockwise.']
Turn right by 180 degrees and then stop.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; The JSON structure correctly and completely follows the given command. The "rotate" action is right, with correct angle of 180 degrees and direction (is_clockwise is set to true since it involves a right turn). The use of "unit" key with value "degrees" is also aligned with the command. The "angular_velocity" value is not given in the command, but a reasonable value is assigned.']
Rotate in a clockwise direction by 180 degrees and then come to a stop.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The natural language command correctly matches the JSON schema for the action "rotate". The parameters in the command such as the direction (clockwise) and angle (180 degrees) are present in the JSON structure. Although no "angular_velocity" is specified in the command, it is accepted to have any reasonable value in the JSON.']
Move diagonally to the right for 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['1; The natural language command is only partially implemented in the JSON structure. The "move" and "distance" parameters can be found in the JSON, but not "diagonally to the right".']
Go right at an angle for a distance of 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['3; The JSON structure does not perfectly match the natural language command. Although the "move" action, "distance" and "unit" parameters are correct, the command also includes a directional element "Go right at an angle" which would better align with the "rotate" action in the ontology. The JSON structure does not represent this. Also, it specifies a "linear_speed" that wasn\'t mentioned in the command.']
Travel in a diagonal direction to the right covering a distance of 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['1; The natural language command instructs to travel in a diagonal direction, which might involve a combined movement and rotation action. However, the provided JSON structure only includes linear movement action and does not account for the specified direction ("to the right"). The \'distance\' parameter matches correctly but the \'linear_speed\' in JSON is assumed, it\'s not mentioned in the command.']
Proceed at a diagonal towards the right, moving 4 meters.,['{"action": "move", "params": {"linear_speed": null, "distance": 4, "is_forward": true, "unit": "meters"}}'];['1; The JSON structure has the action of "move" which is aligned with the command to move. The "distance" parameter is declared correctly as 4 meters. However, there\'s no information presented in the command or JSON about the linear_speed, so it should have been defined. Also, the command to move specifically in a diagonal to the right is not represented in the JSON structure.']
Move to the right diagonally, covering a distance of 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];["2; The natural language command doesn't completely match with the JSON information. The 'move' action is present but the direction 'right diagonally' is not represented in the JSON and the 'linear_speed' in the JSON is not specified in the natural language command."]
Turn right and move forward for 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];["3; Although the natural language command mentions moving forward for 1 meter which is mentioned in the JSON structure, there is no mention of turning right which suggests a rotation action or specifying an angle and direction; hence it's a partial match."]
Make a right turn and proceed one meter forward.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['1; The JSON structure partially matches the natural language command. The "move" action and related parameters like "distance" and "is_forward" conform to the part of the command about proceeding one meter forward. However, there is no information provided for making a right turn in the JSON, which is a separate action not incorporated here. Also the value for "linear_speed" is not aligned with the command.']
Take a right and continue moving ahead for a distance of 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];["1; The natural language command mentions a rotation ('Take a right') which is not represented in the provided JSON structure. While the 'move' action with a distance of 1 meter is represented correctly in the JSON, the lack of an corresponding rotation action in the JSON suggests only partial conformity with the natural language command."]
Rotate to the right and advance straight ahead for 1 meter.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}},', '{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command asks for a rotation to the right, which is correctly represented in the JSON as a clockwise rotation. It then requests an advancement of 1 meter ahead, which is properly encoded in the JSON with the "move" action and distance of 1 meter.']
Facing towards the right, progress forward for a distance of 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['4; Most of the command is properly converted to JSON. However, the direction of the movement (facing towards the right) is absent in the JSON structure. The action, distance, direction of movement (forward), and unit (meter) are correctly captured. The linear_speed is not specified in the original command but a reasonable value is provided in the JSON structure.']
Move in a zigzag pattern for 8 seconds.,['{"action": "move", "params": {"linear_speed": "undetermined", "distance": "undetermined", "is_forward": true, "unit": "seconds"}}'];['1; Partial match. The command specifies a movement but "zigzag" pattern is not supported in the JSON structure. JSON structure defines tactical movements with defined values like distance, linear speed and direction which do not apply to a "zigzag" pattern. However, the duration of the movement ("8 seconds") could possibly be interpreted as distance or linear speed, but this is a stretch as there\'s no clear correlation.']
Perform a zigzag movement continuously for a duration of 8 seconds.,['{"action": "move", "params": {"linear_speed": "undefined", "distance": "undefined", "is_forward": true, "unit": "seconds"}}'];['0; The natural language command instructs to perform a \'zigzag\' movement, which is not represented in any of the JSON structures. The provided JSON shows a "move" command with "linear_speed", "distance", "is_forward", and "unit" as parameters. These parameters do not precisely capture the zigzag motion specified in the command. Additionally, in the command, there is a time duration mentioned which is not represented in the JSON structure.']
Traverse in a serpentine motion for 8 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "seconds"}}'];['1; The natural language command poorly matches the JSON structure. Although the action "move" and parameter "is_forward: true" align with the command\'s intent to traverse, the \'serpentine motion\' (suggesting rotation or a non-linear trajectory) isn\'t reflected in the JSON. Furthermore, using "distance" key with "seconds" as a unit is wrong. It\'s also worth noting that a serpentine motion would likely include alternating actions of "move" and "rotate", which isn\'t presented in the given JSON structure.']
Alternate your path in a zigzagging pattern for the next 8 seconds.,['{"action": "ignore", "params": {}}'];['0; The command mentions an action of "zigzagging" which does not conform to any of the JSON structures provided (go_to_goal, move, rotate). There\'s no JSON structure or equivalent action for "zigzagging" in the provided sample ontology. Therefore, the command cannot be converted to a JSON structure based on the provided samples.']
Execute a back-and-forth motion resembling a zigzag for a total of 8 seconds.,['{"action": "move", "params": {"linear_speed": "undetermined", "distance": "undetermined", "is_forward": true, "unit": "seconds"}}'];["1; The natural language command suggests a more complex movement (zigzag) than what is represented in the JSON command, which only specifies a simple forward movement. Also, there is no clear indication in the natural language command for the parameters such as 'linear_speed', 'distance'. Plus, the 'unit' in the JSON command is wrong as it shows 'seconds' instead of 'meter'. The JSON command should not consider duration (seconds), instead it should use distance metrics (meters). So, there's a slight match but not much."]
Rotate counterclockwise by 45 degrees and move forward for 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 45, "is_clockwise": false, "unit": "degrees"}},', '{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": true, "unit": "meter"}}'];['5; The natural language command entirely matches with the corresponding JSON structures. The action "rotate" includes "is_clockwise" set as "false" for counterclockwise rotation, and the "angle" is 45 degrees, which is specified in the command. The action "move" includes "is_forward" as "true" for moving forward and the "distance" is 3 meters, also specified in the command. The values of "angular_velocity" and "linear_speed" are reasonable and align with the command\'s implied urgency. The "unit" for both actions is appropriately set.']
Turn left by 45 degrees and advance for a distance of 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command is properly represented by the two JSON structures. The first JSON structure matches the "Turn left by 45 degrees" command with the right "action" as "rotate" and correct "params" including "angle", "is_clockwise" and "unit". The second JSON structure corresponds to the "advance for a distance of 3 meters" command with the "action" as "move" and appropriate "params" including "distance", "is_forward" and "unit".']
Rotate anti-clockwise at an angle of 45 degrees and proceed ahead for a span of 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['4.5; The JSON structures describe all the actions of rotation and movement as mentioned in the command, but they do not accurately correspond to the details provided in the natural language command. The angular_velocity and linear_speed values differ from what one might expect based on the command. However, without specific values given for these parameters in the command, the existing values could be considered reasonable.']
Pivot in a counterclockwise direction by 45 degrees and travel a distance of 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 45, "is_clockwise": false, "unit": "degrees"}},', '{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The JSON structures match the natural language command perfectly. The rotation action, specifically the counterclockwise direction and angle, is properly represented. The move action with the specified distance is also accurately reflected in the respective JSON structure.']
Shift to the left by 45 degrees and continue moving forward, covering a distance of 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 45, "angle": 45, "is_clockwise": false, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];["4; The commands in natural language mostly conform to the corresponding JSON structures. For the rotation action, the JSON incorrectly uses 'angular_velocity' as 45 instead of a reasonable arbitrary value as it was not specified in the command. The rotation direction is correctly inferred to be 'is_clockwise': false for turning to the left. For the moving action, the 'distance' matches with the command but the 'linear_speed' was not specified in the command, so any reasonable value should be accepted. The direction of the movement 'is_forward' is correctly set to true."]
Move backward and stop at the nearest obstacle.,['{"action": "move", "params": {"linear_speed": 1.0, "distance": 1, "is_forward": false}}'];['1; The natural language command talks about moving backward until an obstacle is met, but the provided JSON structure lacks a parameter to handle the "stop at nearest obstacle" action. Furthermore, the natural language command does not give specifics about linear speed or distance, although the values provided in the JSON structure are practical and reasonable.']
Reverse and come to a halt once you reach the closest object in your path.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": false, "unit": "meter"}}'];["2; The natural language command matches with the 'move' action in the JSON structure. The parameter 'is_forward' is set to false which aligns with the 'reverse' instruction. However, the command specifies stopping near the closest object, which doesn't align with any parameter in the JSON structure. Furthermore, the 'distance' parameter is not specified in the command and '1' in JSON does not necessarily reflect a reasonable value for the scenario in command."]
Back up and cease movement upon reaching the nearest obstruction.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": false, "unit": "meter"}}'];['4; The command corresponds well to the JSON structure with action as "move" and it identifies that the movement is not "forward", however, the command does not explicitly say how far to back up or what speed to use, so the values for "distance" and "linear_speed" don\'t perfectly match with the natural language command. It also doesn\'t address stopping at the nearest obstruction in the JSON structure.']
Retreat and come to a stop when you encounter the closest barrier.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];['1; The "move" action and the "is_forward" attribute matches the natural language command of retreating. However, the NL command also includes reaching the closest barrier and stopping, which is not represented in the JSON structure. Moreover, the suggested JSON structure suggests a specific linear speed and distance, parameters that are not specified in the NL command.']
Go in reverse and stop once you reach the nearest obstacle.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];['3; Partially conform. The direction of movement (in reverse) is correctly represented in the JSON structure in "is_forward": false. No reference is made to stopping at the nearest obstacle and distance is simply a reasonable assumed value. Unit and linear_speed are reasonable values, not based on the natural language command.']
Turn left and move in a curved path for 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "meter"}}'];["2; The command to turn left and move in a curved path has been converted to a basic move action in the JSON. There's no mention of the turning or the curved path in the JSON, only the distance is correctly matched. The linear_speed and is_forward params are reasonable values but not specifically stated in the command."]
Take a left turn and travel in a curved trajectory covering a distance of 6 meters.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 6, "is_forward": true, "unit": "meters"}}'];['1; The natural language command refers to a left turn and a curved trajectory which doesn\'t match with the plain "move" action and straight distance in the JSON. Additionally, the directionality and curvature of movement are not captured in the JSON. It only correctly provides the "distance" parameter.']
Make a leftward turn and proceed along a curving route spanning 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "meter"}}'];['1; The natural language command indicates a specific movement direction ("leftward turn") which is not represented in the given JSON structure. The command also refers to a "curving route", which isn’t reflected in any of the parameters in the JSON structure (where only linear speed and distance are specified). That said, the distance parameter in the natural language command matches with that in the JSON. The "move" action also loosely aligns with the general intent of the natural language command to "proceed".']
Go left and follow a curved path for a distance of 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "meter"}}'];["1; The JSON structure represents a movement action with specified 'linear_speed', 'distance', 'is_forward' and 'unit' parameters. However, the direction of the movement (left) and shape of the movement path (curved) specified in the natural language command don't align with the JSON structure's 'move' action in a straight forward direction. The JSON can't handle 'go left' or 'curved path'."]
Regulate your movement to the left and travel in a curved trajectory for 6 meters.,['{"action": "move", "params": {"linear_speed": null, "distance": 6, "is_forward": true, "unit": "meter"}}'];['2; The natural language command involves a curved trajectory, which implies a combined linear and angular movement. However, the JSON provided only accounts for linear movement in a straightforward direction, and no mention of a change in direction (rotation/curvature) as required by the given command is present in the JSON structure.']
Move forward at a speed of 1 meter per second for 10 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "seconds"}}'];['4; The structure of the JSON matches well with the command, and all parameters mentioned in the command are present in the JSON except for "unit". The action is correctly identified as "move", "linear_speed" is correctly set to 1, "distance" to 10, and "is_forward" to true. However, "unit" in the JSON is "seconds" instead of "meter" which is not perfectly conform with the command.']
Proceed ahead at a velocity of 1 meter per second for a duration of 10 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform.']
Advance at a rate of 1 meter per second for 10 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}}'];['5; The natural language command perfectly matches the JSON structure. The action "move" is correct and the parameters linear_speed, distance, is_forward and unit are all correctly identified and translated to JSON. The unspecified value of "is_forward" in the natural language command is assumed to be true because the bot is asked to "advance", indicating forward movement.']
Go straight ahead, maintaining a speed of 1 meter per second for a period of 10 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true}}'];['4; The JSON structure provided partially matches with the command given, it correctly interprets the action to be "move" and properly captures "linear_speed" as 1 and "distance" to be 10. However, the command mentions "for a period of 10 seconds" which can not be translated to "distance" in the JSON structure. Also, "unit" key is missing in the JSON.']
Travel forward for 10 seconds, covering a distance of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "seconds"}}'];['4; The natural language command mostly matches the JSON information. The action move and params such as linear_speed and is_forward are correctly interpreted. However, the natural language command speaks of movement in terms of time ("for 10 seconds"), while the JSON struct contains a "distance" parameter, not a "time" one. Despite this, the intention of moving forward for a distance (10 seconds * 1 meter/second = 10 meters) can be reasonably inferred.']
Rotate clockwise by 30 degrees and continue moving forward for 4 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 30, "is_clockwise": true, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 0.5, "distance": 4, "is_forward": true, "unit": "meter"}}'];['5; The natural language command perfectly matches both JSON structures. The command to rotate is present with an angle of 30 degrees and a clockwise direction which matches the JSON structure. Similarly, the command to move forward for 4 meters is also present and matches the JSON structure.']
Move forward for 4 meters and rotate in a clockwise direction by 30 degrees.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}, ', '{"action": "rotate", "params": {"angular_velocity": 10, "angle": 30, "is_clockwise": true, "unit": "degrees"}}'];["4; The given JSON structures partially match the given command. The action of 'move' and its parameters 'distance' and 'is_forward' as well as 'unit' match with the command. Similarly, the action 'rotate' and its parameters 'angle', 'is_clockwise' and 'unit' are correctly described. However, the values of 'linear_speed' and 'angular_velocity' do not exist in the command. Hence, the command does not exactly conform to the JSON structures."]
Rotate 30 degrees clockwise and then proceed to move forward for 4 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 30, "is_clockwise": true, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": 0.5, "distance": 4, "is_forward": true, "unit": "meter"}}'];["5; The two JSON structures correctly represent the natural language command, with the rotation direction, angle, movement direction and distance accurately portrayed. The angular_velocity and linear_speed values don't match exactly since they weren't specified in the command, but the values chosen are reasonable."]
After rotating 30 degrees clockwise, continue moving forward for 4 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 30, "is_clockwise": true, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform.']
Rotate to the right by 30 degrees and then proceed with a forward movement of 4 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 30, "is_clockwise": true, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['4.5; The JSON structures mostly match the natural language commands. The rotate action, angle, and direction are correctly translated. However, the angular_velocity is arbitrary and not specified in the command. Similarly, for the move action, the distance and direction are correct but the linear_speed is not mentioned in the command.']
Move in a circular path with a radius of 2 meters for 7 seconds.,['{"action": "move", "params": {"linear_speed": "undetermined", "distance": "undetermined", "is_forward": true, "unit": "meter"}}'];['1; The JSON structure only refers to a "move" action but does not account for the "circular path" or "radius" mentioned in the natural language command. Also, the "7 seconds" duration from the command is not represented in the JSON structure, which signifies the mismatch even though the command can be partially implemented by the move action.']
Circle around with a radius of 2 meters for a duration of 7 seconds.,['{"action": "rotate", "params": {"angular_velocity": "undetermined", "angle": "undetermined", "is_clockwise": "undetermined"}}'];['1; The command mentions "circle around" which may imply the action "rotate", but without a clear direction, value for "is_clockwise" cannot be determined which is required as per the ontology. Moreover, other parameters like "angular_velocity" and "angle" in the JSON structure do not have corresponding information in the command.']
Perform circular movement with a radius of 2 meters for 7 seconds.,['This action is not defined in the given ontology, hence it cannot be converted to json.'];["0; The command 'Perform circular movement with a radius of 2 meters for 7 seconds' does not match any of the given JSON structures as there are no keys for such action in the ontology."]
Rotate along a circular trajectory with a 2-meter radius for 7 seconds.,['{"action": "rotate", "params": {"angular_velocity": 2, "angle": 7, "is_clockwise": true, "unit": "seconds"}}'];["1; The 'angle' parameter in the JSON does not conform to the natural language command, which specifies a time duration, not an angle for the rotation. The natural language command also mentions a 'radius', which is not reflected in any of the JSON keys. In addition, the 'unit' is not specified as 'seconds' in the provided ontology."]
Traverse a circular path, covering a distance of 2 meters, for a duration of 7 seconds.,['{"action": "move", "params": {"linear_speed": 0.2857142857142857, "distance": 2, "is_forward": true, "unit": "meters"}}'];["2; The JSON structure roughly matches the natural language command as it involves movement and distance. However, it lacks 'duration' parameter, and the 'linear_speed' calculation is not mentioned in the command and it is not related to the 'circular path' mentioned in the command. Also, the unit should be 'meter' according to the sample ontology, not 'meters'."]
Turn right and move forward for 5 seconds, then revert back.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "seconds"}}'];["0; The natural language command (turn right and move forward) seems to indicate 2 actions (rotate and move), but JSON structure only represents the 'move' action and not the 'rotate' action. Furthermore, the JSON structure includes parameters not mentioned in the command (linear_speed) and excludes parameters mentioned in the command (time duration of 5 seconds and the revert back action are not accounted for in the JSON structure)."]
Make a right turn and proceed forward for 5 seconds, then return back.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "seconds"}}'];['2; The natural language command does not perfectly match the JSON structures. The movement command in the natural language command aligns with the move action in the JSON structures. However, the specified unit of "seconds" is not appropriate for distance. In addition, there is a missing equivalent for \'return back\' in the JSON structures.']
Take a right turn and advance ahead for 5 seconds, then go back in reverse.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "seconds"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": false, "unit": "seconds"}}'];['2; The first and second JSON structures cover rotation and linear movement which match with "Take a right turn" and "advance ahead for 5 seconds". However, for the "then go back in reverse" part a reverse action is not provided within the action keys of the JSON. Additionally, the "unit" used for "distance" in the JSON is "seconds" which is likely to be a time unit instead of a spatial unit.']
Rotate to the right and move straight ahead for 5 seconds, then reverse the direction.,['{"action": "rotate", "params": {"angular_velocity": "default", "angle": "default", "is_clockwise": true, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": "default", "distance": "default", "is_forward": true, "unit": "seconds"}}, ', '{"action": "move", "params": {"linear_speed": "default", "distance": "default", "is_forward": false, "unit": "seconds"}}'];['2; The command does not specify the values for "angular_velocity", "angle", "linear_speed", and "distance". Moreover, the "unit" in the JSON structures should ideally align more closely with the command — for example, it should be "degrees" for the rotation angle, and "meters" for the distance. However, the actions (\'rotate\' and \'move\') along with parameters like \'is_forward\' and \'is_clockwise\' do align correctly.']
Change direction to the right and go forward for 5 seconds, then reverse back.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "seconds"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": false, "unit": "seconds"}}'];['1; The provided JSON structures do partially match the command, however, the command cannot be represented accurately as the command mentions changing direction and reversing back, but the JSON does not reflect this and only states the forward movement action. There is no action or parameter related to changing direction or rotation in the JSON structures, hence it partially conforms to the command.']
Move along the perimeter of the room for 1 minute.,['{"action": "move", "params": {"linear_speed": null, "distance": null, "is_forward": true, "unit": "minute"}}'];['0; The sample JSON does not align with the natural language command. The "go_to_goal" command does not have "perimeter" or "room" as an option for location, and the "move" command does not have time ("minute") as a unit. Also, there is no specification for moving along a perimeter in the sample JSON structures.']
Walk around the edges of the room for 1 minute.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "minute"}}'];['0; The natural language command does not match any JSON structures. The action "walk around" and parameter "edges of the room" do not conform with the sample ontology. Also, the time unit "minute" in the JSON structure is also not part of the sample keys.']
Circulate along the boundary of the room for 1 minute.,['{"action": "move", "params": {"linear_speed": 1, "distance": 60, "is_forward": true, "unit": "minutes"}}'];['1; The command talks about circulating along the boundary of the room for 1 minute, but the JSON structure represents moving forward for 60 minutes at a linear speed. The command and JSON do not align well with each other. In the JSON, "distance" is measured in minutes which doesn\'t conform to typical units of distance. It could be assumed that the robot should move for 60 minutes, but this doesn\'t match the 1 minute from the command. Also, circulating isn\'t the same as straightforward movement. No mention of rotation to make complete circle which should be included for "circulating along the boundary".']
Patrol the perimeter of the room for 1 minute.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Perimeter of the room"}}}'];['2; The JSON structure partially matches the natural language command. While the location “Perimeter of the room” is correctly inferred from the command, the action "go_to_goal" does not fully capture the intent of the command to "Patrol", which involves constant movement. Furthermore, there is no mapping for the duration of 1 minute in the JSON.']
Traverse the outer edges of the room for 1 minute.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Outer edges of the room"}}}'];['2; The command "Traverse the outer edges of the room for 1 minute" suggests a complex set of movements, which the given JSON structure, "go_to_goal", may not fully encompass. The parameter value "Outer edges of the room" could be interpreted as a location to move to, but it does not account for the duration specified in the command. Thus, there is a partial but insufficient match.']
Rotate counterclockwise by 60 degrees and move forward for 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}},', '{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": true, "unit": "meters"}}'];['5; Exactly conform. The natural language command is fully and correctly represented by the JSON structure. The "rotate" action specifies an angle of 60 degrees and movement in a counter-clockwise direction, corresponding to "is_clockwise": false. The "move" action specifies a forward movement, "is_forward": true, for a distance of 3 meters, which matches with the JSON perfectly.']
Turn left by 60 degrees and proceed ahead for a distance of 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 60, "angle": 60, "is_clockwise": false, "unit": "degrees"}} ', '{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['4; The JSON structures mostly conform to the natural language command. The action "rotate" and "move" corresponds correctly, including their parameters. However, the "angular_velocity" is wrongly used as the value is similar to the "angle", while it is supposed to indicate the speed of rotation, not the degree.']
Rotate anticlockwise by 60 degrees and advance 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 0, "angle": 60, "is_clockwise": false, "unit": "degrees"}}', '', '{"action": "move", "params": {"linear_speed": 0, "distance": 3, "is_forward": true, "unit": "meter"}}'];['4; The natural language command is mostly converted correctly into the JSON structures. The "rotate" action is correctly identified with the "is_clockwise" parameter set to false to represent anticlockwise movement, the "angle" to 60 degrees, and the "unit" to degrees. The "move" action too is correctly identified with "distance" set to 3 and "unit" as meter. However, "linear_speed" in the "move" action and "angular_velocity" in the "rotate" action are set to 0 in the JSON, while no such speed constraints were mentioned in the natural language command. This causes a minor mismatch, hence the score of 4.']
Face left and travel straight for 3 meters after rotating 60 degrees counter-clockwise.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command was accurately converted to the JSON structure. The "rotate" action correctly captures the counter-clockwise rotation of 60 degrees, and the "move" action correctly determines the parameters of moving forward a distance of 3 meters. Despite values of "angular_velocity" and "linear_speed" are not specified in the natural language command, the provided values in the JSON structure are reasonable.']
Make a 60-degree left turn and move forward 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": true, "unit": "meter"}}'];['4; The natural language command corresponds to both JSON structures fairly well. The "rotate" command itself, the "angle" value, the "is_clockwise" value (false meaning a left turn), and the "unit" all align properly. For the "move" command, the "distance" and "is_forward" (true indicating moving forward) values conform. However, the natural language command doesn\'t mention linear speed, and the "angular_velocity" value in the JSON structure doesn\'t match the command.']
Move forward at a variable speed for 10 seconds.,['{"action": "move", "params": {"linear_speed": "variable", "distance": 10, "is_forward": true, "unit": "seconds"}}'];['2; While the action "move" and the direction "is_forward" match, "seconds" is not included in the sample ontology for unit in the move action, it has "meter" as unit. Furthermore, "variable" speed is not a reasonable value for linear_speed which expects a numerical value.']
Proceed ahead for a duration of 10 seconds, adjusting the speed as necessary.,['{"action": "move", "params": {"linear_speed": "adjustable", "distance": "adjustable based on time and speed", "is_forward": true, "unit": "seconds"}}'];["3; The action 'move' and 'is_forward' parameter matches with the command. However, 'duration' is not a recognized parameter as per the given sample ontology. Also, 'linear_speed' and 'distance' are specified in the JSON but are not explicitly mentioned in the natural language command but are indirectly inferred by 'adjusting the speed as necessary'. Thus, they are not an exact match."]
Advance for a period of 10 seconds, with variable speed.,['{"action": "move", "params": {"linear_speed": "variable", "distance": "undetermined", "is_forward": true, "unit": "seconds"}}'];["1; The action 'move' matches with the natural language command but the parameters are not well-aligned. The given command specifies a time duration, not a distance, and the speed is supposed to be variable, not a specific value like 0.5 in the JSON. The concept of time duration is not defined in the JSON structure's parameters. The 'unit' in the JSON structure is 'meter', not 'seconds'. There is some similarity but overall, it's not a good match."]
Travel forward, varying the speed, for a total of 10 seconds.,['{"action": "move", "params": {"linear_speed": "varies", "distance": "undetermined", "is_forward": true, "unit": "second"}}'];['2.5; Partially conforms. The action of moving forward is adequately captured by the "action": "move" and "is_forward": true in the JSON. However, "linear_speed": "varies" and "distance": "undetermined" are not consistent with the sample ontology or the natural language command, which doesn\'t specify variations in speed or an unknown distance. The "unit": "second" is also inconsistent with the sample ontology, which measures distance in meters, but appropriate for the duration specified in the command.']
Move ahead for 10 seconds, adjusting the speed accordingly.,['{"action": "move", "params": {"linear_speed": "adjustable", "distance": 10, "is_forward": true, "unit": "seconds"}}'];["3; The JSON structure accurately represents the action given in the command. However, it does not fully match the parameters of the command. The command does not specify the distance, only the time (unit: seconds) the action should be carried out for, which is not a parameter considered in the move action in the sample ontology. The “adjustable” value of the parameter “linear_speed” also seems to be added according to the user's interpretation instead of a direct conversion from the command."]
Move backward and stop 1 meter away from the designated target.,['{"action": "move", "params": {"linear_speed": 1.0, "distance": -1, "is_forward": false, "unit": "meter"}}'];['4; The command and JSON structure match except for "linear_speed" which wasn\'t specified in the command so the value "1.0" in the JSON is a reasonable placeholder. But "distance" is indicated as -1 in JSON while in the command it assumes the robot will stop before reaching the target, not moving back. This should be a positive distance.']
Reverse direction and come to a halt at a distance of 1 meter from the specified target.,['{"action": "move", "params": {"linear_speed": 0, "distance": 1, "is_forward": false}}'];['4; The natural language command mostly conforms with the JSON structure. It correctly identifies the need to move, the presence of a distance and the direction of the movement (is_forward as False). However, it does not specify a linear speed, which is assumed to be 0 in the JSON structure based on the phrase "come to a halt". This might not accurately reflect the action as "come to a halt" might also imply a gradual decrease in speed. Additionally, the natural language command refers to a "specified target", but does not provide a location or goal as in the ontology.']
Go in the opposite direction and pause when you are 1 meter away from the assigned target.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];["2; The assigned command asks to pause when the entity is 1 meter away from the assigned target. However, the JSON structure doesn't reflect this information. Consequently, while there is a partial match between the command and the JSON structure (which reflects moving in the opposite direction), critical details are missing. The lack of the go_to_goal action further reduces the conformity score."]
Retreat and come to a stop, maintaining a distance of 1 meter from the designated target.,['{"action": "move", "params": {"linear_speed": 0.1, "distance": 1, "is_forward": false, "unit": "meter"}}'];['4; Almost conform. The natural language command asks the system to move to a distance of 1 meter from a target, but it is not clear from the command that this distance is a stop distance. The JSON structure correctly represents this action as a move. However, the command includes "retreat" which suggests a backward motion, but the JSON structure has the "is_forward" parameter set to false, which means the direction isn\'t accurately represented.']
Move in a reverse motion and cease motion once you are 1 meter away from the specified target.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];['3; Partial conformity. The "is_forward" key matches perfectly with the text command\'s "reverse motion" and the "unit" and "distance" fields match with the "1 meter" in the command. But there\'s no mention of "linear_speed" in the command, so the \'1\' exact value is a bit of an assumption. Moreover, the phrase "cease motion once you are 1 meter away from the specified target" suggests a goal or target location, which is not represented in the JSON structure.']
Move forward for 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['3; Partly conforms. The natural language command corresponds to the "move" action and it specifies "is_forward" as true and "distance" as 1 meter. However, the "linear_speed" is not mentioned in the command, but a reasonable value of 1 is assumed in the JSON, which may or may not be accurate. Hence, it\'s not a perfect match.']
Proceed ahead by 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform.']
Advance for a distance of 1 meter.,['{"action": "move", "params": {"linear_speed": 1.0, "distance": 1, "is_forward": true, "unit": "meter"}}'];['4; The natural language command is mostly matched with the JSON structure. The "action" is "move" which is correct and all parameters are included. The "linear_speed" value is not specified in the natural language command and accepted as a reasonable value, which is 1.0 in the JSON structure. Whereas in the command, the speed is not mentioned. That\'s why it can\'t be rated as a perfect match.']
Travel in a forward direction for 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform.']
Go straight for a span of 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];["4.5; The natural command instructs to go straight for a distance of 1 meter. This precisely matches the JSON instruction where the 'action' is 'move' and 'distance' is 1. However, 'linear_speed' in the JSON structure is not specified in the command, though its presence does not contradict anything. Therefore the score is slightly less than 5."]
Rotate counterclockwise by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; The command matches perfectly with the JSON structure. "Rotate" is the action, "is_clockwise" parameter is set to false indicating counterclockwise rotation, "angle" is correctly set to 90 and "unit" is correctly set to degrees. Though "angular_velocity" is not mentioned in the command, its value in JSON is accepted as it\'s a reasonable one.']
Turn left by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command perfectly matches the provided JSON structure. The action "rotate" and all of its parameters: "angular_velocity", "angle", "is_clockwise" and "unit" are correctly specified. The given angle of rotation is also mentioned in the command as "90 degrees" and the direction of rotation is indicated as "left" which translates to "is_clockwise: false" in JSON format.']
Rotate anticlockwise by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform.']
Rotate to the left by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];["5; Exactly conform. The natural language command exactly matches with the JSON structure. The action 'rotate' is correctly applied. All the parameters ('angular_velocity', 'angle', 'is_clockwise', 'unit') are also mentioned. The 'angle' is correctly given as 90 degrees and rotation direction as counterclockwise (is_clockwise = false)."]
Spin counterclockwise by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 30, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['4.5; The natural language command correctly corresponds to the "rotate" action of the JSON structure, along with the correct selection of "angle" and "is_clockwise" parameters. However, the "angular_velocity" value provided in the JSON (30) doesn\'t match the NLP command, which doesn\'t specify a velocity.']
Move backward for 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false}}'];['3; While the action and the keys under "params" in the JSON command generally align with the natural language command, the "distance" key in the JSON structure implies spatial movement rather than temporal duration. The natural language command specifies a time duration ("2 seconds") which doesn\'t exactly correspond with the "distance" key in the JSON command. Furthermore, there is no corresponding key in the JSON structure that would translate to a time duration.']
Go backward for a duration of 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "seconds"}}'];['0; The JSON structure does not match the natural language command at all. The action "move" does not possess a duration property in the ontology, yet the command specifically mentions moving for a certain duration. Furthermore, the "distance" parameter is erroneously assigned the value for duration, and there is no parameters in the JSON structure to represent the direction (backward) indicated in the command.']
Reverse direction and continue for 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "second"}}'];["4; The JSON structure has the right action command and 'is_forward' key is correctly assigned to false indicating reverse direction. However, the commands 'continue for 2 seconds' is not clearly represented in the JSON. Although 'distance' is set to 2, this seems to imply a distance in meters, not a duration in seconds, so it doesn't align perfectly with the natural language command."]
Retreat for a period of 2 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": false}}'];['2; The command for retreating is partially described by the JSON structure as it includes movement and direction (not forward). However, the command specifies a time period for retreat, not a distance, which is not specified in the JSON structure or the sample keys.']
Take a step back and hold for 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "step"}}'];["1; The JSON structure corresponds to the action of moving, however, the 'linear_speed' is not provided in the natural language command so it cannot be confirmed if the 'linear_speed' of 1 is correct. Also, the duration of the movement, mentioned in the command as 'hold for 2 seconds', is not reflected in the JSON structure at all. Therefore, the match is not precise."]
Turn left and move forward for 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['4; The JSON action is correct as the command is about making a move. However, the "turn left" portion of the command does not appear to be represented anywhere in the JSON. Other parameters, such as distance, is_forward, and unit are correctly represented as per the natural language command. Therefore, the matching is not exact but fairly close.']
Take a left turn and proceed ahead for a distance of 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];["3; The JSON structure partially matches the command. The 'move' action and the 'distance' parameter in the natural language command match with the JSON, but there is no mention of a 'left turn' in the provided JSON structure.", '']
Make a leftward turn and continue moving straight ahead covering a distance of 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}},', '{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meters"}}'];['5; The natural language command asks for a leftward turn which is correctly represented in the rotate action with is_clockwise set to false and the move action correctly represents the ask for moving straight for a distance of 3 meters. The other parameters in the JSON are not specified in the natural language command but they have reasonable values.']
Rotate to the left and proceed forward, covering a distance of 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];["4.5; While the natural language command is properly represented by the two JSON commands present, there is a slight mismatch in the 'angular_velocity' and 'linear_speed' values, which are unspecified in the natural language command and could therefore have any reasonable values."]
Go left and move straight ahead for 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['3; The given JSON structure mostly aligns with the given command. The "action" : "move" and "unit" : "meter" match, The "distance" : 3 is also specified in the command. However, "linear_speed": 1 and "is_forward" : true aren\'t explicitly mentioned in the command. Moreover, the command to go left isn\'t accurately represented in the JSON structure.']
Move at a speed of 2 meters per second for 5 seconds.,['{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meter"}}'];['4; The natural language command matches the JSON structure for the "move" action. The "linear_speed" parameter is correctly given as 2. However, the natural language command specifies a duration of movement ("for 5 seconds"), not a "distance." The JSON structure includes a calculated "distance" of 10 meters, which suggests correctly inferring that the robot should move for 5 seconds at 2 meters per second. While the inference is logical, it does not strictly match the natural language command. Hence, the score is not a perfect 5.']
Travel with a velocity of 2 meters per second for a duration of 5 seconds.,['{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meter"}}'];['3; The natural language command doesn\'t mention if the movement is forward, hence it could be in any direction. Also, the calculated "distance" in JSON according to duration and velocity is 10, which is not mentioned in the natural language command. But, the action name \'move\' and parameter \'linear_speed\' with value 2 conform well to the command. Therefore, partial conformity.']
Maintain a pace of 2 meters per second for a period of 5 seconds.,['{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meters"}}'];["5; All values given by the natural language command are accurately represented in the JSON structure. The action of 'move' and the details under 'params' all perfectly match."]
Perform movement with a speed of 2 meters per second over a span of 5 seconds.,['{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "seconds"}}'];["4; The command mostly matches the JSON structure but the unit key in the JSON structure uses the value 'seconds', whereas in the ontology structure, 'meter' is mentioned as the unit for distance and not the time. Therefore, there might be a mismatch in interpreting the units."]
Cover a distance at 2 meters per second for a time period of 5 seconds.,['{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command correctly matches with the JSON structure, considering that the keys in the JSON structure are present and their corresponding values in the natural language command are correctly inferred.']
Rotate clockwise by 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Rotate by 180 degrees in a clockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The natural language command specifies an action of rotation by 180 degrees in a clockwise direction, and this matches with the JSON structure which specifies the same "rotate" action, with the angle of 180 degrees and rotating clockwise.']
Perform a clockwise rotation of 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": null, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Turn 180 degrees in a clockwise manner.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; The natural language command perfectly matches with the JSON information. The action "rotate" is correctly identified with appropriate parameters like "angular_velocity", "angle", "is_clockwise" and "unit" which are in accordance with the given command.']
Rotate in a clockwise fashion, making a 180-degree turn.,['{"action": "rotate", "params": {"angular_velocity": undefined, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];["5; Exactly conform. The natural language command perfectly matches with the JSON structure. The action 'rotate' and parameters 'angle', 'is_clockwise' and 'unit' are all accurately demonstrated. The 'angular_velocity' is not specified in the command, but it is present in the JSON, which is acceptable as per the rules."]
Move forward for 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command accurately maps to the JSON, with the action of moving, the direction being forward, the distance being 4 and the unit being meter.']
Proceed straight ahead, covering a distance of 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['5; Almost all elements of the command are translated correctly in the JSON. The given command didn\'t specify the linear speed, so "1" is a reasonable value and is accepted in the JSON. The command mentioned moving forward for a certain distance, which perfectly matches "action: move", "distance": 4, "is_forward": true, and "unit": "meter" in JSON.']
Advance forward, spanning 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command matches the JSON information provided - the command of moving forward, distance, and unit are all included. Even though the speed is not specified in the natural language command, it is a reasonable value.']
Take 4 steps in the forward direction.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "step"}}'];["2; The JSON structure correctly identifies the action ('move') and the direction of the movement ('is_forward': True). However, the natural language command talks about steps, but the unit in the JSON structure is not mentioned as 'step' and also, there is no parameter for 'linear_speed' mentioned in natural language command."]
Travel a distance of 4 meters, moving in the forward direction.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['4.5; The natural language command correctly refers to the action "move" and specifies the "distance", "is_forward" parameter values exactly. The "unit" parameter is also correct. However, the natural language command doesn\'t specify the "linear_speed", which is filled in the JSON structure. Hence, a small deduction in the score.']
Turn right and move backward for 1 meter.,['{"action": "move", "params": {"linear_speed": 1.0, "distance": 1, "is_forward": false, "unit": "meter"}}'];["2; The JSON structure partially matches the natural language command. It covers the movement and direction (backward for 1 meter) and unit is correct ('meter'). However, the action 'turn right' from the command isn't represented in the JSON. The 'linear_speed' doesn't match as the speed isn't specified in the command."]
Rotate to the right and travel in reverse for a distance of 1 meter.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];["4; The natural language command has been translated well into the JSON structures. The rotation command is executed as expected with 'is_clockwise' set to true indicating a right turn. The move command is also executed well in reverse with 'is_forward' set to false. However, the speed parameters 'angular_velocity' in rotation action and 'linear_speed' in move action have been arbitrarily filled, the natural command doesn't specify them."]
Make a right turn and proceed backwards for a length of 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];['4; The JSON command correctly accomplishes part of the natural command (moving backwards a certain distance), however, it does not cover making a right turn. The rotation action and correct parameters for turning are not present in the JSON command. Therefore, it is close to the natural language command, but not exactly conforming.']
Shift to the right and travel in the opposite direction, covering a distance of 1 meter.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": false, "unit": "meter"}}'];['3; The natural language command partially matches with the proposed JSON structure. The "move" action and the "distance" and "unit" parameters are correctly specified, but the JSON also includes "linear_speed" which isn\'t specified in the command. Furthermore, the command mentions "Shift to the right" which doesn\'t correspond to anything in the JSON structure.']
Face right and move backwards, covering a distance of 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];['4; The JSON structure correctly applies the natural command to an action of moving. It correctly includes the "distance" set at 1 unit and the "is_forward" set at False to denote the backward movement. However, the instruction to "face right" is not captured in the JSON format. Also, the "linear speed" value set is not explicitly mentioned in the natural language command.']
Rotate counterclockwise by 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];['4; Almost conform. The command matches the JSON information provided with correct "action" and "params" keys for "rotate" operation. However, the "angular_velocity" does not match exactly as it\'s not specified in the command but is set as 1 in the JSON.']
Rotate anti-clockwise by a 45-degree angle.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];["4; The natural language command aligns well with the JSON structure in terms of action and params. However, the 'angular_velocity' value doesn't get specified in the natural language command."]
Turn left by 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];['4; The command mostly conforms to the JSON. The "rotate" action, "angle", and "unit" values match correctly. But there is ambiguity in "is_clockwise" parameter because turning left is counter clockwise rotation whereas the JSON value is false and "angular_velocity" value in the JSON structure does not match with the natural language command as it is not specified in the command.']
Rotate in a counterclockwise direction by 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];["4; The command matches well with the JSON structure, it represents the action 'rotate' correctly and includes the parameters 'angle' and 'is_clockwise'. However, 'angular_velocity' value in the JSON structure is arbitrary, it wasn't specified in the command."]
Rotate to the left by 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];["4; Mostly conform. The action and params of the JSON match the command, but the values of angular_velocity do not match. The value in the command is unspecified hence any reasonable value should be accepted. Thus, a -1 point for correct value not being specified for 'angular_velocity'."]
Move forward for 10 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "seconds"}}'];['2; The natural language command specifies a time duration ("10 seconds") for the action, not a distance. In the provided JSON structure, the unit used for the "move" action\'s "distance" parameter is "meter", not "seconds". Therefore, the JSON does not fully match with the natural language command.']
Proceed straight ahead for a duration of 10 seconds.,['{"action": "move", "params": {"linear_speed": 1.0, "distance": 10, "is_forward": true, "unit": "seconds"}}'];["3; The command is partially matched. Although the 'move' action fits, parameters used in the JSON is not completely accurate according to the command. The command speaks about time (seconds) while the JSON structure speaks about distance with a linear speed. Furthermore, 'unit: seconds' doesn't exist in the given sample ontology, it should be 'meters'."]
Advance continuously for a period of 10 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "seconds"}}'];['1; The natural language command and the JSON structure don\'t match sufficiently. In the command, the action is to "Advance for a period of 10 seconds.", while the JSON structure indicates a linear_speed and distance without any mention of time duration. Therefore, the keys in the sample JSON don\'t perfectly conform to the natural language command.']
Travel forwards for a span of 10 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true}}'];["2; The JSON structure is partially correct. It contains the correct 'action' but the 'distance' parameter is supposed to refer to an actual distance, not a span of time. However, it does correctly interpret 'forwards' to mean 'is_forward': True. The 'unit' key is missing."]
Progress ahead for a time interval of 10 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "seconds"}}'];["2; The action in the JSON structure matches with the natural language command about moving forward. However, the parameters such as linear_speed, distance, is_forward, and unit in the JSON do not match correctly. The time interval mentioned in the natural language command does not translate into distance and the unit seconds isn't applicable in this scenario. Furthermore, the linear_speed is also not mentioned in the natural command but is present in the JSON."]
Turn left and move at a speed of 1 meter per second for 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];["1; The natural language command asks the robot to turn left and move which implies both rotation and movement. However, the JSON structure only includes the movement part and doesn't obey the action of rotation. Also, in the JSON structure, 'is_forward' is set as true without any such command in the natural language command."]
Proceed forward for 2 seconds at a speed of 1 meter per second after making a left turn.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];["0; The JSON structure does not match the natural language command. It indicates a 'move' action with parameters 'linear_speed', 'distance', 'is_forward', and 'unit' that is potentially in line with 'Proceed forward for 2 seconds at a speed of 1 meter per second', but it does not account for 'after making a left turn', which would require a 'rotate' action in the current keys context. Furthermore, the 'unit' is set to 'seconds', which does not match any given structure, as the unit for moving should be in 'meters'."]
After making a left turn, travel at a velocity of 1 meter per second for a duration of 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['4; The command\'s context is about moving forward in a direction, which matches with the action "move" from the JSON structure. The parameters, "linear_speed" (1 in the command) and "distance" (2 in the command) have been correctly identified. But absent are parameters for making a left turn. Hence, the command only partially matches the JSON structure.']
Make a left-hand turn and continue moving forward for 2 seconds with a speed of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];['1; The given natural language command describes an initial rotation action before moving forward, but the corresponding JSON structure only includes the "move" action. The rotation action ("Make a left-hand turn") is not represented in the JSON. The JSON does however correctly depict the move action as per the command.']
Rotate to the left and then proceed straight ahead for 2 seconds at a velocity of 1 meter per second.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];['4; The commands to \'rotate\' and \'move\' are correctly translated to their respective JSON structures, including most parameters. However, the rotation angle and direction is not specified in the natural language command, so the JSON\'s choice of a 90 degrees left rotation seems arbitrary. Similarly, moving "for 2 seconds at a velocity of 1 meter per second" should translate to a distance of 2 meters, not merely 2 units without specifying the type of units.']
Move backward for 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "meter"}}'];['4; Mostly conform. The natural language command corresponds well to the JSON structure. However, the JSON\'s "linear_speed" parameter is set to 1, while the natural language command does not specify a speed. Also, the command asked for the robot to move backward (is_forward: false) which was correctly interpreted in the JSON structure.']
Go back 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform. The natural language command specifies an action of movement over a specific distance in the opposite direction (backwards), which aligns perfectly with the JSON structure, noting the direction of movement as "is_forward": false.']
Reverse your direction and travel 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform. The natural language command asks for a movement in the reverse direction for a distance of 3 meters. This can be interpreted exactly in the given JSON structure, with the action being "move", the distance being 3, is_forward set to false indicating the reverse direction, and the unit of distance being meters. The linear speed isn\'t mentioned in the command and hence any reasonable value is acceptable, here it is 1.']
Retreat for a distance of 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "meter"}}'];['3; The action "move" and the units match perfectly However, the "linear_speed" is not mentioned in the command but it is present in the JSON. The "is_forward" key has a reverse value in JSON to the command with the command saying "retreat" which means moving backward and JSON having the value as "false". It does satisfy backward moving but does not match exactly with the key "is_forward".']
Take 3 steps backwards.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "steps"}}'];['4; The JSON structure included most of the necessary information. However, the "unit" value in JSON is "steps," which is not mentioned in the sample ontology. If we consider "steps" as a reasonable measure unit, then the score can be 4 due to the correct action (move) and parameters (distance, is_forward). The linear_speed given in JSON does not contradict the command since its value is not specified in the natural language command.']
Rotate clockwise by 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 90, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The natural language command "Rotate clockwise by 270 degrees" corresponds precisely to the provided JSON structure. The "action" key is "rotate", as the command instructs, and the "params" dictionary includes the correct "angle", "is_clockwise" as True, and "unit" keys. The "angular_velocity" key is not specified in the command, but any reasonable value is accepted according to the instructions.']
Rotate 270 degrees in a clockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 90, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];["3.5; The action and parameters in the natural language command match with the JSON structure but the value of 'angular_velocity' in the JSON does not match with the command. The command does not provide information about the angular velocity."]
Perform a clockwise rotation of 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];["5; Exactly conform. The natural language command asks for a clockwise rotation of a specific number of degrees, which directly matches with the provided JSON structure where the 'action' is 'rotate', the 'angle' is specified and 'is_clockwise' is set to 'true'. The 'angular_velocity' isn't specified in the natural command but has a reasonable value given in the JSON, which is acceptable."]
Turn right by 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 60, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['4.5; The command is well translated into the JSON structure, however the "angular_velocity" of 60 does not appear in the original command, hence the slight deduction in score. The rest of the information including the rotation, angle, directions and unit are accurately portrayed.']
Rotate by 270 degrees in the clockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 5, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['4.5; The command is mostly in conformity with JSON structure. The action, angle, rotation direction (is_clockwise) and the measurement unit are all correctly identified and converted into JSON. But the "angular_velocity" is not specified in the command and the value given in JSON is arbitrary, hence the slight reduction of score.']
Move forward for 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['4; The natural language command specifies an action of moving forward for a certain distance, which corresponds to the JSON structure with action "move". The params fields "distance", "is_forward", and "unit" are mentioned in the command and correctly extracted in JSON. However, "linear_speed" that is not mentioned in the command is extracted in the JSON, due to this reason it loses a point.']
Proceed ahead for a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meters"}}'];["5; All elements in the natural language command are present in the JSON structure: the action 'move', parameters 'distance', 'is_forward' and 'unit'. Linear speed's value is unspecified in the command but the given value in JSON is accepted as per instructions."]
Advance 5 meters in the forward direction.,['{"action": "move", "params": {"linear_speed": 1.0, "distance": 5, "is_forward": true}}'];['4; The JSON structure correctly identifies the action "move" and the parameter "distance" with correct value 5. It also correctly identifies the "is_forward" parameter as true. However, the "linear_speed" is 1.0 but this was not mentioned in the natural language command.']
Take 5 meter steps forward.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['5; The natural language command corresponds exactly to the JSON information. The action of moving (i.e., "Take steps"), the direction ("forward"), and the distance (5 meters) are all included. The linear speed is not specified in the command, but any reasonable value is accepted.']
Go ahead and travel a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];["4.5; The natural language command corresponds with the 'move' action in the JSON structure. 'distance' and 'unit' are correctly mentioned as 5 and 'meter' respectively. However, although 'is_forward' is correctly identified as True, the 'linear_speed' in the JSON does not correspond to any particular feature in the natural language command, albeit being a reasonable value."]
Turn right and move at a speed of 1.5 meters per second for 4 seconds.,['{"action": "move", "params": {"linear_speed": 1.5, "distance": 6, "is_forward": true, "unit": "meter"}}'];['2; The JSON structure is partially conforming to the command. The movement action with parameters such as linear_speed, distance, is_forward, and unit are correctly identified from the natural language command. However, the command to "turn right" is not represented in JSON structure, and it would ideally require an \'action\' using \'rotate\' with \'is_clockwise\' set to true. The calculation of distance using the time parameter given in the command "(1.5 m/s * 4 s = 6 m)" shows an additional interpretation step that may not be represented in this context.']
Make a right turn and proceed at a velocity of 1.5 meters per second for a duration of 4 seconds.,['{"action": "move", "params": {"linear_speed": 1.5, "distance": 6, "is_forward": true, "unit": "meters"}}'];["2; The JSON only adheres to the 'move' action of the command as it contains 'linear_speed' and 'is_forward' keys. The 'duration' parameter in the command is not captured by JSON. Also, the 'rotate' action to make a right turn is not captured in the JSON. The 'unit' specified in the JSON also corresponds to the unit of 'distance' and not 'speed' as mentioned in the command."]
Rotate to the right and advance with a velocity of 1.5 meters per second for a total of 4 seconds.,['{"action": "move", "params": {"linear_speed": 1.5, "distance": 6, "is_forward": true, "unit": "meter"}}, {"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}'];['1; The natural language command does not correspond well with the provided JSON structures. While elements of the \'move\' and \'rotate\' actions are present in the command (rotation, speed), there are discrepancies. Specifically, the direction of rotation is specified in the command but not in the JSON, the specified velocity in the command and estimated distance in the JSON doesn\'t match ("1.5 meters per second for a total of 4 seconds" should result in a distance of 6 meters, but it\'s computed as 60 in the JSON), and the rotation angle in the JSON does not correspond to any details in command.']
Take a rightward turn and travel at a speed of 1.5 meters per second for a period of 4 seconds.,['{"action": "move", "params": {"linear_speed": 1.5, "distance": 6, "is_forward": true, "unit": "meter"}}'];['2; The command suggests a movement and provides the speed and duration, which are not the keys in JSON structure. However, the command does not specify in which direction the movement must occur (forwards or backwards) and the calculated distance doesn\'t match with the natural language command since in the command there was no explicit talk about it. Besides, there\'s no JSON structure related to the "rightward turn" action in the command.']
Go right and maintain a speed of 1.5 meters per second for a time span of 4 seconds.,['{"action": "move", "params": {"linear_speed": 1.5, "distance": 6, "is_forward": true, "unit": "meter"}}'];['3; The JSON structure partially conforms to the given command. The action and parameters for linear speed and unit are correct, however, the "distance" attribute is derived from multiplying the speed and the time (which is not clearly provided in the command but assumed). The command does not mention moving forward, but it was assumed in the JSON. Also, the command mentioned \'right\' direction, which is not reflected in the JSON structure.']
Rotate counterclockwise by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform.']
Turn left by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 15, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];['4; The natural language command and JSON somewhat match. The "rotate" action is properly interpreted, and the "angle" value provided in the command is correctly reflected in the JSON. However, the command doesn\'t specify anything about "angular_velocity", so the JSON\'s "angular_velocity" value isn\'t tied to the language of the command and the natural language doesn\'t specify the direction of rotation so "is_clockwise" is assumed, otherwise it mostly conforms with the provided sample ontologies.']
Move in an anti-clockwise direction by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];['5; The natural language command and the JSON information match perfectly. The action "rotate" is present in the command and is correctly represented in the JSON. The parameters, such as "angular_velocity", "angle", "is_clockwise" and "unit" are also appropriately represented. Although the "angular_velocity" value in the JSON command is not specified in the natural language command, it is a reasonable value and therefore accepted.']
Rotate in the opposite direction by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];['4; The natural language command matches with the JSON structure, but the angular velocity specified in JSON does not match with the command as it does not specify any velocity.']
Perform a counterclockwise rotation of 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 30, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform.']
Move forward for 2 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['4.5; The JSON structure is almost perfect for the given natural language command, however, the "linear_speed" value in JSON doesn\'t match the unspecified speed in the command.']
Proceed straight ahead for a distance of 2 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['5; The natural language command precisely instructs to move forward a certain distance which matches perfectly with the JSON structure provided. The action "move" , "is_forward": true and "unit": "meter" align correctly. The specific distance in the command (2 meters) is also accurately reflected in the JSON structure as "distance": 2. The "linear_speed" is not mentioned in the command, but as per guideline any reasonable value is accepted.']
Advance onward by 2 meters.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true}}'];['4.5; The JSON structure is largely matched with the natural language command, it specifies the "move" action, the "distance" parameter is set to the correct value of 2, and "is_forward" is set to true as instructed by "Advance onward". No unit provided in the natural language command, so "meter" in JSON is acceptable. The only difference lies in "linear_speed": it is set to 0.5 in the JSON, but the command does not specify this value. It is a reasonable value, however, and without instruction to the contrary in the command, it can be considered to conform with the intention of the command. Therefore, a small deduction is made.']
Travel straight ahead, covering a distance of 2 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['5; The command is accurately reflected in the JSON structure, with the action of moving straight ahead corresponding to the "move" action in the JSON, and the distance of "2 meters" correctly represented. However, the linear_speed is not mentioned in the command, but it is assigned 1 in JSON, which is an accepted reasonable value.']
Take 2 meters forward.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command specifies a distance and direction of "2 meters forward," and the given JSON structure correctly uses these parameters in the "move" action, with "distance" set to 2, "is_forward" set to true, and "unit" set to "meter". Any reasonable value for "linear_speed" is accepted as it is not specified in the natural language command, and in this JSON, the "linear_speed" is appropriately set to 1.']
Turn left and move at a speed of 0.5 meters per second for 10 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}}'];['2; The JSON structure correctly represents the "move" action along with the correct parameters "linear_speed", "is_forward" and "unit", but the "distance" parameter is incorrect as it does not match the command of moving for 10 seconds. Additionally, the command to turn left is missed in the JSON structure, thus it only partially matches the natural language command.']
Make a left turn and travel at a velocity of 0.5 meters per second for a duration of 10 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meters"}}'];['2; There\'s a partial match with the JSON structure. The natural language command specifies a movement with a certain speed, which corresponds to the "move" action in the JSON. However, the JSON includes distance and direction (forward) which aren\'t specified in the command. Additionally, the command refers to a left turn which would correspond to a rotate action in the JSON, but there\'s no such JSON structure.']
Rotate to the left and proceed forward at a rate of 0.5 meters per second for a period of 10 seconds.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}}'];["2; The action types match with the commands but the parameters in the JSON structure don't align with values given in the natural language command.", "The 'rotate' action's 'is_clockwise' parameter is correctly identified as false from 'rotate to the left', but 'angular_velocity' and 'angle' don't match any information given in the command. The 'move' action has correctly identified 'linear_speed' as 0.5 from '0.5 meters per second', and 'is_forward' as true from 'proceed forward', but the 'distance' parameter does not match the given distance value 'for a period of 10 seconds'."]
Take a leftward turn and travel with a speed of 0.5 meters per second for 10 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meters"}}'];['1; The given JSON structure has an action of "move" which does match the command\'s instruction to travel. However, the command specifies to "Take a leftward turn" which aligns to the "rotate" action from the sample ontology keys, not present in the supplied JSON. The linear speed and unit do conform, but the command\'s specified time duration ("for 10 seconds") does not align to the distance parameter in the JSON structure. The forward movement is assumed and accepted.']
Face left and advance at a pace of 0.5 meters per second for 10 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}}'];['3; The JSON command provides correct parameters for part of the natural language command: it captures the movement speed and direction (forward), as well as the speed unit (meters). However, the distance is not correctly generated from the statement "for 10 seconds" and the rotation or facing direction mentioned in "Face left" is completely left out. Hence, the match is partial.']
Move backward for 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "meter"}}'];["4; The action matches correctly with 'move'. The parameters of 'distance' and 'unit' match with a value of '6' and 'meter' respectively. However, the value for 'is_forward' aligns to 'false' representing moving backwards. The 'linear_speed' value is assumed to be 1 due to lack of specification in command, which is acceptable according to the instructions. The only discrepancy is the direction of movement. The command specifies moving backward, but in the keys there is no backward or reverse key, so is_forward is made false. Although it follows logically, it's not an exact match to the ontology."]
Go back 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "meter"}}'];['4; Although the natural language command largely matches with the JSON structure in terms of moving a certain distance, the "linear_speed" field in the JSON does not have a corresponding mention in the command. Thus, the score is deducted by 1.']
Reverse direction and move 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "meter"}}'];['4.75; Almost all the information in the command matches the JSON structure. But the linear_speed value is not provided in the command, the value in the JSON is accepted as it\'s a reasonable value. However, the change of direction ("Reverse direction") should logically mean a change in "is_forward": False, as the default is assumed to be True, but since this is not made explicit, this results in a slight reduction in score.']
Retreat for a distance of 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "meter"}}'];['4; The command matches the action "move" and the units "meter" correctly. However, the "linear_speed" parameter is not specified in the command but has a value in the JSON structure. Also, though "retreat" does imply the movement is backward, it would be more accurate if "is_forward": false is explicitly stated in the command.']
Travel in the opposite direction and cover a distance of 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform. The natural language command matches perfectly with the JSON information. The "move" action, "distance" and "is_forward" parameters are correctly expressed.']
Move forward for 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['5; The command "Move forward for 5 meters" perfectly matches the JSON structure, with all the respective keys present. The "linear_speed" has a value of 1 which is a reasonable value. Although it\'s not mentioned in the natural language command, it\'s accepted.']
Proceed straight ahead for a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['4; The JSON structure correctly represents the action ("move") and some of the parameters ("distance", "is_forward", "unit") mentioned in the command. However, the "linear_speed" value in the JSON structure does not match the command since the speed is not specified in the command, but it shows a reasonable value of 1 which is acceptable.']
Advance by 5 meters in a forward direction.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true}}'];['5; The natural language command accurately describes the action and parameters stated in the JSON structure. It is moving forward (is_forward:true), at any given speed (linear_speed: 1) for a specified distance (distance: 5).']
Go ahead for a span of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meters"}}'];['4; The natural language command matches well with the JSON command as the robot is required to move a certain distance. However, no specific speed is mentioned in the natural language command, so the value of "linear_speed" is assumed as 1, which is subjective and may not exactly conform to the user\'s demand. Therefore, due to this ambiguity, the score is one point less than 5.']
Cover a distance of 5 meters by moving forward.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform.']
Rotate counterclockwise by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command correctly translates to the JSON information with the correct information for "action" and "params". The "angular_velocity" in the JSON structure can have any reasonable value since it is not specified in the natural language command.']
Turn 90 degrees counterclockwise.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['4; The JSON structure almost perfectly aligns with the natural language command. The "rotate" action is correctly identified, and the parameters "angle" and "is_clockwise" are correctly set to "90" and "false" respectively, as requested in the command. However, the "angular_velocity" value of "10" doesn\'t correspond to anything in the natural language command. The command simply doesn\'t specify a certain angular_velocity, so any value would be acceptable. ', 'However, using a high value like "10" could imply a faster turn than what might be inferred from the "Turn 90 degrees counterclockwise" command, which could misrepresent the command\'s intent.']
Rotate in a counterclockwise direction by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform.']
Rotate anti-clockwise by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform.']
Make a 90-degree counterclockwise rotation.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; The command perfectly matches the JSON structure. The action is "rotate" which is clearly defined, and parameters like "angle" (90 degrees), "is_clockwise" (False for counterclockwise) are all included in the JSON, complying with the keys in the sample ontology. The "angular_velocity" is not specified in the natural language command, but it has a reasonable value in JSON and doesn\'t affect the overall conformity of the command to the JSON structure.']
Stop.,['{"action": "", "params": {}}'];["0; The natural language command 'Stop.' does not match any of the provided JSON structures. The 'action' key in all the JSON structures is either 'go_to_goal', 'move', or 'rotate', none of which corresponds to 'stop'. Moreover, the 'params' keys in the JSON structures do not match anything specified in the command."]
Cease.,['{}'];['0; The natural language command does not correspond to any of the given JSON structures. Even though the JSON structures are blank, the command is not related to any actions or parameters specified in the ontology.']
Halt.,['{}'];["0; The natural language command 'Halt' is not found in the JSON structures and does not conform to any action in the sample ontology."]
Pause.,['{"action": "", "params": {}}'];['0; The command "Pause" doesn\'t match with any of the provided JSON structures. Hence, no information can be extracted from the command according to the sample keys.']
Terminate.,['{}'];["0; The natural language command 'Terminate.' does not match with any of the provided JSON structures. The command implies an action of stopping or ending which is not available in the sample keys of the JSON structures."]
Reverse for 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "seconds"}}'];['4; The JSON structure captures the action \'move\' and the direction \'reverse\' is correctly interpreted as \'"is_forward": false\'. The duration is also correctly captured under \'distance\'. However, the \'unit\' should have been \'seconds\', not \'meters\'. This might cause confusion as typically, the \'distance\' parameter would be associated with meters and not time. A more appropriate conversion could be something like \'time\' instead of \'distance\', depending on the sample ontology, which is not disclosed in this case.']
Reverse for a duration of 2 seconds.,['{"action": "move", "params": {"linear_speed": -1, "distance": 2, "is_forward": false}}'];['2; There is partial conformity in the JSON structure to the natural language command. The `action` key is correctly identified as `move`, however, the use of `duration` in the natural language command is not represented in the JSON structure. Also, the JSON structure includes the `is_forward` parameter to indicate the direction of movement, this is aligned with `reverse` in the natural language command. But the natural language command does not specify the distance or the unit, which is included in the JSON structure. Thus, the JSON does not exactly match with the command.']
Go back for 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "seconds"}}'];["3; The action 'move' and parameters 'is_forward' and 'unit' match the command 'Go back for 2 seconds'. However, distance cannot be measured in seconds, which is not consistent with the ontology's keys, and linear_speed is present in JSON but not in the natural language command."]
Move in reverse for 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "seconds"}}'];["4; The command matches the JSON structure closely, however, the 'unit' key in the provided JSON is for distance not for time."]
Go in the opposite direction for 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "second"}}'];["4; Although the command matches the JSON structure well in terms of keys and parameters, the direction is not clearly defined in the JSON data. It only specifies that the movement is not forward ('is_forward': false) which can be inferred as 'opposite direction', but it does not explicitly state this in the value fields."]
Turn left and move forward for 10 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}}'];['0; The natural language command instructs to first turn left, which is not reflected in the JSON command. The JSON command only represents the part of moving 10 meters forward, ignoring the initial rotation command.']
Proceed forward for a distance of 10 meters after making a left turn.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}}'];['1; From the command, two actions are inferred: rotate and move. However, the JSON structure contains only the move action and is missing left turn (rotate) action. There is a mismatch of actions between the command and JSON structure.']
Make a left-hand turn and continue straight ahead for a distance of 10 meters.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}}'];['4; The JSON structures correctly convey the command actions of turning and moving straight ahead. However, the values for "angular_velocity" in the first JSON structure and "linear_speed" in the second JSON structure are not mentioned in the natural language command, so it cannot be stated definitively if these values are correct. Moreover, the direction of the turn (left) is also not represented correctly in the is_clockwise param in the first JSON as left should be false (counter clockwise). Therefore, it\'s a pretty close match, but not perfect.']
After turning left, continue moving straight ahead for a total of 10 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meters"}}'];["4; While the JSON information is conforming closely to the command, it misses the 'rotate' action in the beginning where the subject should turn left."]
Execute a left turn and then travel forward for a distance of 10 meters.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}}'];['4.5; The JSON structures generally match the command given. The rotation is correctly interpreted as a left turn and the action to move forward by 10 meters is correctly structured. However, the natural language command did not specify the angular velocity for rotation or the linear speed for forward movement, so the given values in the JSON structures (1 for both) could be any reasonable speed, thus half a point is deducted.']
Move backward for 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false}}'];["3; The action and parameters 'is_forward' and 'distance' match the command, but 'linear_speed' and 'unit' have not been specified in the natural language command."]
Go back for a duration of 3 seconds.,['{"action": "move", "params": {"linear_speed": -1, "distance": 3, "is_forward": false, "unit": "meters"}}'];['2; The natural language command partially matches with the JSON. In the JSON structure, "move" action correctly correlates with the verbal command "go back". However, it seems that there is a confusion between distance and duration. Although the unit used in the JSON structure is "meters" which signifies distance, the command specifies a duration of "3 seconds", not a specific distance value. In addition, the linear_speed parameter value of "-1" does not directly align with the natural language command.']
Reverse movement for a period of 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false}}'];['3; The natural language command is partially matched with JSON. The "move" action and "is_forward" parameter are correctly captured, but the "distance" in the JSON is not accurate as the command specifies a time period not a distance. Also, the "linear_speed" is not mentioned in the command instead, so any value in JSON would be reasonable, but this missing value lowers the overall conformity.']
Retreat for 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "seconds"}}'];["4; The natural language command mostly conforms with the JSON structure. While the action and parameters match ('move', 'is_forward' set to false), there is a mismatch in the value referred to: the command says 'retreat for 3 seconds' but the JSON structure presents this distance in a unit of 'seconds', which isn't a unit of distance."]
Take a step back for a duration of 3 seconds.,['{"action": "move", "params": {"linear_speed": -1, "distance": 3, "is_forward": false, "unit": "seconds"}}'];['1; The natural language command is about moving backwards but in the given JSON, "unit" has a value of "seconds" which does not relate to the distance parameter. Furthermore, the value of "linear_speed" is also specified in terms of duration rather than speed.']
Rotate clockwise by 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; The given command exactly matches the provided JSON structure. The "rotate" action, "angle" parameter, "is_clockwise" orientation, and "unit" are all correctly identified and the values provided in the command are correctly initialized in the JSON structure.']
Perform a 180-degree clockwise rotation.,['{"action": "rotate", "params": {"angular_velocity": 15, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];["5; The natural language command perfectly matches with the JSON structure. The action 'rotate' is correctly used, the parameters 'angular_velocity', 'angle', 'is_clockwise', and 'unit' exist in the sample keys, and they are used correctly. The parameter values provided in the JSON ('15', '180', 'true', 'degrees') are reasonable for the task of performing a 180-degree clockwise rotation."]
Rotate in a clockwise direction by 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];["4; The action and parameters match with the sample keys and values are reasonable. However, the 'angular_velocity' value in JSON doesn't match with command, as the command doesn't give information about it."]
Turn right and rotate 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['4; Although angular_velocity isn\'t given in the natural language command, the JSON\'s value is reasonable. However, the direction of rotation is not specified in the natural language command, for the JSON "is_clockwise" is assumed to be true.']
Execute a rotation of 180 degrees in a clockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 90, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['4.5; The only non-conformity is the "angular_velocity" value which is not defined in the natural language command. Therefore a reasonable value has been used.']
Turn right and move forward for 8 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "meters"}}'];["2; The JSON structure partially conforms to the natural language command. In the command, there is a 'turn right' action which is not represented in the JSON. The 'move' action in the JSON partially matches with the 'move forward for 8 meters' portion of the command. However, the natural language command does not specify the 'linear_speed', so any value for it is accepted. Furthermore, the unit of distance is given as 'meters' instead of 'meter' as specified in the sample ontology."]
Proceed forward for a distance of 8 meters after making a right turn.,['{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "meters"}}'];['3; Although the action "move" and some of the parameters like "distance", "is_forward" and "unit" are matching with the natural language command, the command also instructs to "make a right turn" which should take place as a "rotate" action, thus this part of the command is not reflected in the given JSON structure.']
Take a right turn and continue moving straight ahead for a duration of 8 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "meter"}}'];['3; The JSON structure captures the motion action correctly which is to move forward a distance of 8 meters. However, the part of the command that requires a right turn is not represented in the JSON structure. Hence, it is partially conforming.']
After making a right-hand turn, advance 8 meters in a forward direction.,['{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "meter"}}'];['4; Partially conform. The JSON structure correctly matches the "move" portion of the command, with a forward movement of 8 meters. However, it does not include the action of making a right-hand turn described in the natural language command.']
Rotate to the right, then travel straight ahead for a distance of 8 meters.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "meter"}}'];['5; The natural language command perfectly matches the JSON structures. The first command "Rotate to the right" matches with the action "rotate" and correct parameters of angle and clockwise rotation. The second command "travel straight ahead for a distance of 8 meters" matches with the action "move" and appropriate parameters of distance and forward direction. The unspecified values in the natural language command (angular_velocity and linear_speed) are filled with reasonable values in the JSON.']
Move forward for 1 meter and stop.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['5; The JSON structure matches correctly with the natural language command. The "move" action is correct and all parameters ("linear_speed", "distance", "is_forward", "unit") are correctly set according to the command.']
Proceed straight ahead for a distance of 1 meter and come to a halt.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['4; The JSON structure corresponds to the command but the "linear_speed" value does not match - it is set to 1 in the JSON while not specified in the command. Any reasonable value should be accepted thus resulting in one point deduction.']
Advance one meter ahead and then come to a stop.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];["4; The action and params given in the JSON structure partially match the natural language command. The command 'Advance one meter ahead and then come to a stop' corresponds to the action 'move', and the params, linear_speed, distance, is_forward, unit, are implied. However, the term 'come to a stop' is not represented in the JSON structure."]
Travel in the forward direction for a length of 1 meter and then cease movement.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The command perfectly matches with the JSON structure providing the necessary action ("move") and parameters (linear_speed, distance, is_forward, unit) as per the sample ontology.']
Move ahead for a distance of 1 meter, and then bring the movement to a stop.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['4; The JSON structure correctly matches the action and the parameters required by the natural language command, but does not include a subsequent action to bring the movement to a stop this is less likely represented in the JSON structure.']
Rotate counterclockwise by 135 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 135, "is_clockwise": false, "unit": "degrees"}}'];['5; The natural language command and the JSON structure match perfectly. The command "Rotate counterclockwise by 135 degrees" aligns with the "rotate" action defined in the JSON. The "angle" parameter is correctly mentioned as 135 degrees and the "is_clockwise" parameter is correctly identified as false (since the rotation is counterclockwise). The "angular_velocity" value is not specified in the natural language command, but its presence within the JSON is acceptable.']
Rotate 135 degrees counterclockwise.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 135, "is_clockwise": false, "unit": "degrees"}}'];['4.5; Mostly conform. The action and parameters requested in the natural language command match well with the JSON structure, but the "angular_velocity" in the JSON structure does not entirely conform as its value was not specified in the natural language command. However, it still falls within the acceptable range as any reasonable value is accepted when not specified.']
Turn 135 degrees counterclockwise.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 135, "is_clockwise": false, "unit": "degrees"}}'];["4; The natural language command matches the JSON structure partially. The action type and the value for rotation angle in degrees are accurate. However, the rotation direction (counterclockwise) is not correctly matched in JSON structure ('false' should be 'true' as rotation is counterclockwise). The angular velocity is not mentioned in the command but a reasonable arbitrary value is given."]
Rotate anticlockwise by 135 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 135, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform.']
Perform a 135 degree counterclockwise rotation.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 135, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform.']
Move backward for 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "meter"}}'];['4.5; Almost exactly conformed. The command indicated the direction correctly, but it didn\'t specify the "linear_speed" value, which has been accepted in JSON as it understands the necessity of speed while moving.']
Go in reverse for a distance of 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "meter"}}'];['5; The natural language command accurately describes the action and parameters provided in the JSON block. The action of moving in reverse (represented as "is_forward": false) and the specified distance of 6 meters are both clearly indicated. Although the linear speed is not specified in the command, the given value in the JSON is acceptable.']
Take 6 steps back.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "steps"}}'];['5; Exactly conform.']
Retreat 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "meter"}}'];['5; The natural language command perfectly matches with the JSON structure regarding the "move" action. The command of retreating states a backward motion, which is indicated as "is_forward": false in JSON. The distance of retreat is also correctly reflected as 6 meters in the JSON. A linear_speed is provided in the JSON, though it is not stated in the command, this is acceptable as per guidelines. The unit of distance "meter" is also consistent. ']
Travel 6 meters in the opposite direction.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "meter"}}'];["5; Exactly conform. The natural language command's specifications of moving, distance, opposite direction, and unit of measure are correctly represented by the JSON structure. The unspecified speed is also properly filled with a reasonable value."]
Turn left and move forward for 4 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "seconds"}}'];["2; The JSON structure provided corresponds to the 'move' action in the ontology, and the 'is_forward' parameter correctly matches with the command to 'move forward'. However, the parameter 'linear_speed' is not present in the command and the 'distance' parameter in the JSON is not appropriate for representing the duration of 4 seconds mentioned in the command. Moreover, the command to 'Turn left' does not match with any action or parameters in the JSON structure."]
Take a left turn and proceed straight ahead for a duration of 4 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "seconds"}}'];['3; Partial match. The JSON instruction is correct in directing a "move" action with parameters indicating forward movement. However, there is no JSON structure included that corresponds to the "Take a left turn" part of the command. The unit of distance too is not properly matched to the command, which mentions a time duration rather than a distance.']
Make a leftward turn and continue moving forward, maintaining the motion for 4 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "second"}}'];["0; The natural language command asks for a left turn and movement forward, but the JSON structure only accounts for forward movement with no rotation action mentioned. The commands aren't matching."]
Pivot to the left and advance forward for a period of 4 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "seconds"}}'];['3; The action "move" is represented correctly in the JSON, as well as parameters like "is_forward". However, the natural language command includes an operation of "pivot to left" which is not represented in the JSON structured command. Additionally, the distance parameter is tied to a "period of 4 seconds" in the natural language command, which is interpreted as a distance in the JSON, and there\'s no key in the JSON that suggests a duration or time period. The unit should be "meter" instead of "seconds".', '']
Rotate in a leftward direction and proceed straight ahead, ensuring that the movement lasts for 4 seconds.,['{"action": "rotate", "params": {"angular_velocity": null, "angle": null, "is_clockwise": false}}', '{"action": "move", "params": {"linear_speed": null, "distance": null, "is_forward": true, "duration": 4, "unit": "seconds"}}'];["2; Some keys from the JSON structure match with the natural language command such as the rotation action and movement action but the 'duration' key for movement does not exist in the JSON structure. In addition, the parameters for angular_velocity in the rotation action and linear_speed and distance in the movement action are not mentioned in the command."]
Rotate clockwise by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 60, "is_clockwise": true, "unit": "degrees"}}'];['4; Mostly conform. The command matches the "action": "rotate" structure from the JSON list, and the values are reasonably close. However, the natural language command does not specify the "angular_velocity", so any value would be considered acceptable. The JSON for the "angle" is also slightly off – the command mentions rotating 60 degrees while the JSON mentions 40 degrees, which isn\'t a major discrepancy but does differ from the original command.']
Turn 60 degrees in a clockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The natural language command exactly matches the JSON structure in terms of action ("rotate") and parameters ("angular_velocity", "angle", "is_clockwise", "unit") are present with the requested values.']
Rotate the object by 60 degrees in the clockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": true, "unit": "degrees"}}'];['4.8; While the JSON structure matches the command quite well, using the "rotate" action and the appropriate parameters, the angular_velocity value given in JSON does not match with the natural language command. As it\'s not specified in the command, it should not affect the score significantly.']
Move in a clockwise direction, making a 60 degree turn.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The natural language command accurately represents the "rotate" action in the provided JSON structure with an angle of 60 degrees in a clockwise direction. Although the "angular_velocity" value isn\'t specified in the natural language command, the suggested value in the JSON is accepted.']
Rotate 60 degrees in a clockwise manner.,['{"action": "rotate", "params": {"angular_velocity": 5, "angle": 60, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Move forward for 7 meters and stop.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}}'];["5; The natural language command matches perfectly with the JSON structure. The action 'move' is specified with the direction ('is_forward': true), distance ('distance': 7), speed ('linear_speed': 1), and the 'unit' of measurement is explicitly mentioned as 'meter'. The action to 'stop' isn't in the JSON because it is probably done automatically after moving the specified distance."]
Proceed straight for a distance of 7 meters and come to a halt.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}}'];['5; The natural language command aligns with the JSON structure. The command for moving a certain distance is clearly translated into the JSON especially "linear_speed", "distance", "is_forward" parameters being correctly defined in "move" action.']
Advance ahead covering a distance of 7 meters and then cease movement.,['{"action": "move", "params": {"distance": 7, "is_forward": true, "linear_speed": 1, "unit": "meter"}}'];['4.5; The natural language command exactly conforms to the JSON structure in the ontology. But it doesn\'t specify the "linear_speed" so the JSON structure with "linear_speed": 1 is considered a reasonable value as per the instructions. The reduction in score is due to the absence of the exact \'linear_speed\' in the natural language command.']
Go forward 7 meters and then come to a stop.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}}'];['4; The JSON structure correctly represents the command to move forward, with a reasonable speed not specified in the command, a correct forward direction and the exact distance. However, the command to stop mentioned in the natural language command is not presented in the JSON code.']
Move straight ahead, covering a distance of 7 meters, and then halt.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}}'];['5; The natural language command perfectly matches with the JSON information. All the parameters are correctly mentioned in the command; the action is to move, direction is forward, the distance is 7 meters and no specific speed mentioned therefore any speed value in JSON is acceptable.']
Reverse for 5 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": false, "unit": "seconds"}}'];["2; The `move` action and 'is_forward': false parameters match, however, the JSON structure is not consistent with the command in terms of the parameter values. The `unit` is expected to measure 'distance' or 'linear_speed', not time (seconds in this case). The 'distance' or 'linear_speed' in the natural language command is not specified so a reasonable value is accepted, however, it is not clear why the distance is assigned as 5."]
Reverse for a duration of 5 seconds.,['{"action": "move", "params": {"linear_speed": 0.2, "distance": 1, "is_forward": false, "unit": "seconds"}}'];['2; The action in the JSON structure aligns with the natural language command as both of them involve movement. However, the parameters in the JSON structure do not fully match with the command. The "duration" mentioned in the command is not being addressed in the JSON structure. Instead, "distance" and "unit" as "seconds" which is not clear, is provided in the JSON structure.']
Perform a 5-second reverse.,['{"action": "move", "params": {"linear_speed": 0.2, "distance": 1, "is_forward": false}}'];['5; Nearly exact conform, the action is correctly identified as "move" and the "is_forward" parameter is correctly identified as false for a reverse. The "linear_speed" and "distance" parameters are not specified in the natural language command, but the given values are reasonable. The "unit" parameter is missing in the JSON structure but this is a minor discrepancy.']
Execute a reverse motion for 5 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": false}}'];["2; The JSON structure partially matches the natural language command. The action 'move' and parameter 'is_forward': false concept is present, but there is discrepancy with the 'distance' parameter mentioned in the JSON structure, as the command indicates a time duration 'for 5 seconds', not a distance. Additionally, linear_speed parameter is also not mentioned in the command."]
Go backwards for a period of 5 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": false}}'];['2; The JSON structure has the correct action ("move") and "is_forward" parameter set to false, which matches the "Go backwards" command. However, the command specifies a period of time (5 seconds), not a distance. The JSON distance parameter does not match the command and the structure doesn\'t include a time parameter.']
Turn right and move forward for 9 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 9, "is_forward": true, "unit": "meter"}}'];['2; The command specifies both rotation and movement, but the JSON only contains the "move" action. The "rotate" action is completely missing.']
Move forward for 9 meters after turning right.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": true, "unit": "degrees"}},', '{"action": "move", "params": {"linear_speed": 0.5, "distance": 9, "is_forward": true, "unit": "meter"}}'];['4; The JSON structures generally conform to the natural language command given, but the specific value of "angular_velocity" is not provided in the natural language command, so its value in the JSON cannot be confirmed. Other than that, "90" for rotation (right), "true" for "is_clockwise", "9" for "distance", and "true" for "is_forward" are correctly interpreted and provided in the JSON structures.']
After turning right, proceed ahead for a distance of 9 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 9, "is_forward": true, "unit": "meter"}}'];["3; The move command matches properly with the natural language command, with the linear speed and direction being correct, as well as the distance of 9 matching the command of proceeding ahead for 9 meters. However, the rotation or turn command is not included in the JSON structure, thus it's incomplete."]
Take a right turn, then continue moving straight for a distance of 9 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 9, "is_forward": true, "unit": "meter"}}'];['5; The JSON structures correctly represent the given natural language command. The command for rotation with the angle (90 degrees) and direction (is_clockwise) parameters align with the first JSON. Similarly, the move command with a specified distance (9 meters) and direction (is_forward) is appropriately captured in the second JSON. Linear speed and angular velocity parameters are not specified in the command, but contain reasonable values in the JSON.']
Make a right turn and travel forward for 9 meters.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 9, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform.']
Move forward for 2 seconds and stop.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true}}'];["1; Both the natural language command and the JSON structure refer to a movement action, but the specifics don't match. The command tells the object to move forward for a certain amount of time, while the JSON structure specifies a distance to move forward. Also, the command mentions no parameters or indication for stopping, unlike what is provided in the JSON structure."]
Proceed in the forward direction for a duration of 2 seconds, then come to a stop.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "second"}}'];['1; The JSON structure correctly represents the action "move", but the "distance" key and "unit" do not match with the natural language command. In the command, there\'s a mention of time (duration of 2 seconds) instead of "distance" and "second" instead of "meter". Additionally, the command mentions stopping after moving which is not represented in the JSON.']
Go ahead for 2 seconds and then halt.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];["2; The natural language command partially matches with the 'move' JSON structure. However, there is no matching command for 'halt' in the given sample keys. Moreover, it's also unclear how the system is supposed to convert the time 'for 2 seconds' into the parameters in the given JSON structure."]
Advance for a period of 2 seconds and then cease movement.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "second"}}'];['1; The JSON structure includes correct action "move" and "is_forward" parameter, but it does not contain "linear_speed" or "unit" parameters that match with the natural language command. Also, the command talks about a "period of 2 seconds", but it\'s incorrectly represented as "distance" in the JSON structure, causing confusion.']
Travel forward for 2 seconds before stopping.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];["1; The natural language command partially matches the JSON structure but not exactly as the key 'linear_speed' is not specified in the natural language command. The other keys 'distance', 'is_forward', and 'unit' match the command."]
Rotate counterclockwise by 30 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 30, "is_clockwise": false, "unit": "degrees"}}'];["4; The JSON structure matches the natural language command well, with the action being 'rotate' and the parameters specifying the angle, direction, and unit of rotation. However, the 'angular_velocity' value is not specified in the command, but it's accepted since any reasonable value is fine. The reason for the score of 4 and not 5 is because of the provided 'angular_velocity' value of 10 which seems too high for a rotation action and therefore might not be considered reasonable by all."]
Turn 30 degrees counterclockwise.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 30, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform.']
Rotate in the anticlockwise direction by 30 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 30, "is_clockwise": false, "unit": "degrees"}}'];['4.5; The justification for this score is that the natural language command correctly corresponds to the JSON action "rotate" and also correctly assigns the "angle", "is_clockwise", and "unit" parameters, however the "angular_velocity" is not specified in the command, but it is correctly assumed in the JSON configuration. Although close to exact, it\'s not fully conform because of this missing information.']
Rotate to the left by 30 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 30, "is_clockwise": false, "unit": "degrees"}}'];['4; JSON structure mostly aligns with natural language command. Action "rotate" and angle with unit are matched correctly. But the "angular_velocity" value is not mentioned in the command, the provided 1 in JSON is arbitrary. The is_clockwise parameter is inferred opposite as in typical conventions, "rotate to the left" refers to counterclockwise rotation which means is_clockwise should be false but since directional sense may vary with context, this discrepancy is tolerable.']
Rotate in a counterclockwise direction, making a 30-degree turn.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 30, "is_clockwise": false, "unit": "degrees"}}'];['4; Mostly conform. The "angular_velocity" is not specified in the natural language command. However, it has a reasonable value in the JSON. All other parameters match perfectly.']
Reverse for 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform. The command \'Reverse for 4 meters.\' is perfectly represented in the JSON structure. The "action" key correctly represents "move", the "distance" key correctly represents "4", the "is_forward" is rightly marked as false indicating backward motion, and the "unit" is accurately noted as "meter". Although the "linear_speed" is not specified in the original command, it is reasonably set as 1 in the JSON object, which is acceptable according to the rules.']
Move back for a distance of 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meter"}}'];["5; Exactly conform. The natural language command accurately corresponds with the JSON structure. The action 'move' is reflected, the distance is correctly specified as '4', 'is_forward' is set to false indicating moving back, and the 'unit' is correctly stated as 'meter'. Even though 'linear_speed' is not specified in the natural language command, it is reasonably assumed to have any value and in this case is '1'."]
Go in reverse for a span of 4 meters.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 4, "is_forward": false, "unit": "meter"}}'];['5; The natural language command perfectly corresponds to the provided JSON structure as all the parameters such as reverse movement (is_forward: false), distance of 4 meters are exactly represented in the JSON object.']
Retreat 4 meters in the opposite direction.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meter"}}'];["5; The natural language command precisely matches the JSON information. The action is 'move', the direction is opposite and 'is_forward' equals false, the distance is 4 units (meters) and the linear_speed has a reasonable value of 1."]
Travel backwards, covering a distance of 4 meters.,['{"action": "move", "params": {"linear_speed": 1.0, "distance": 4, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform. The JSON structure perfectly matches the natural language command. It defines the \'move\' action which is equivalent to \'travel\', the direction is specified as \'backwards\' which aligns with "is_forward": false and the \'distance\' is correctly set as 4 meters.']
Turn left and move forward for 6 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "seconds"}}'];['2; The JSON partially matches the natural language command. The "move" action and "is_forward" parameter are correctly represented. However, the natural command asks for a left turn which is not represented in the JSON, and the "distance" parameter does not fit the command. The command specifies a duration of 6 seconds, not a distance.']
Proceed forward for 6 seconds after making a left turn.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}} ', '{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "seconds"}}'];['4; The natural language command and JSON structures partially conform. The action "rotate" and parameters like "angle", "is_clockwise", "unit" match perfectly, though "angular_velocity" wasn\'t specified in the command, so any value should be accepted. But, for the "move" action, the distance is wrongly interpreted as 6 seconds according to the JSON against the correct interpretation of move for 6 seconds. This may cause confusion as \'distance\' usually implies spatial measurement, not temporal. The "linear_speed" is also not specified in the command.']
Make a left turn and advance for 6 seconds.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}} ', '{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "seconds"}}'];['4; The natural language command is correctly translated in the JSON structures, but the value for the "angle" key is not explicitly specified in the command and the "unit" key in the second JSON structure should be "meter" as there\'s no information in the ontology for it to be "seconds".']
Move ahead for 6 seconds after turning to the left.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "seconds"}}'];['4; The JSON command correctly captures the two distinct actions conveyed by the natural language command ("turning to the left" and "move ahead for 6 seconds"). However, the angular_velocity, linear_speed are populated with values not specified in the command, so there is a minor mismatch. Also rotation unit is given as \'degrees\' instead of direction as left or right, same for linear motion, unit is given as \'meter\' but in command it\'s specified as \'seconds\'. Hence, the score isn\'t perfect.']
After veering left, continue straight for 6 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "seconds"}}'];["1; While the natural language command suggests a movement, the exact parameters such as distance or speed are not specified unlike the JSON structure that follows. And there's no mention of 'veering left' in the JSON command, it's only indicating a forward movement."]
Move forward for 5 meters.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meters"}}'];['5; The natural language command exactly conforms to the JSON structure. The "move" action is present with all required parameters specified. The direction of movement ("is_forward": true) and distance to be moved ("distance": 5, "unit": "meters") match the command, and a reasonable value is provided for "linear_speed".']
Proceed ahead for a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['4; The natural language command accurately matches with the JSON structure with the "move" action and relevant parameters such as "distance", "is_forward", and "unit". However, the "linear_speed" parameter value is not specified in the natural language command. Thus, although the given default value in the JSON structure is acceptable a point is deducted as the exact conformity is not 100%.']
Advance straight on and cover a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];["4; Almost perfect match, but the 'linear_speed' key's value was not specified in the natural language command yet was included in the JSON with a value of 1."]
Head forward and travel 5 meters in that direction.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['4; The natural language command matches the JSON structure in terms of moving forward and the distance to be traveled. Although the speed isn\'t mentioned in the command the default speed in the JSON object is deemed acceptable. However, the JSON structure explicitly specifies "linear_speed" as 1, While there is no mention or implication of speed in the command. Hence, it\'s not a exactly matching.']
Move straight ahead and go a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['5; The JSON structure perfectly matches the natural language command. The action "move" is correctly interpreted, along with the parameters such as "distance" "is_forward", and "unit" which are all correctly provided in the command. The "linear_speed" is a reasonable value and was not specified in the command, which is acceptable.']
Turn left and move forward for 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];['1; The command instructs the system to move forward after turning left, but the JSON structure only covers the movement part, missing the instruction for the rotation.']
Move ahead for 2 seconds after turning left.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}} ', '{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];['4; The JSON structures somewhat match the natural language command. The command states to move forward for 2 seconds after turning left which is translated in the provided JSON structures. The rotation action has an anticlockwise direction as required and the movement action is forward as required. However, it assumes certain parameters like angular_velocity and linear_speed which were not mentioned in the command. The parameter "unit" in the move action json structure is "seconds" which doesn\'t exist in the sample keys.']
After turning to the left, proceed forward for a duration of 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];['2; The JSON structure corresponds to the action of moving forward, which is mentioned in the natural language command. However, the command also includes rotation which is not reflected in the JSON. Furthermore, the "unit" value is "seconds" in the JSON, but the command speaks of duration, not specific distance.']
Take a left turn and then proceed straight for 2 seconds.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "second"}}'];["3; The JSON structures partially match the natural language command. The command instructs to take a left turn which corresponds to rotation action in the JSON but it doesn't quite match since the direction of rotation is not clearly defined. The command to proceed straight for 2 seconds could theoretically match with the movement action, however, there is discrepancy in units - the command mentions seconds whereas the JSON structure uses meters."]
Make a left turn and continue moving forward for a duration of 2 seconds.,['{"action": "rotate", "params": {"angular_velocity": 30, "angle": 90, "is_clockwise": false, "unit": "degrees"}} ', '{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];["4; The JSON commands partially conform to the natural language command. The rotation is correctly described as being anti-clockwise, though the specific angle and angular velocity are not specified in the language command, and so the precise values don't necessarily match. The movement forward is correctly identified, however, in the language command it specifies a duration (time), rather than a distance. This may or may not be the same depending on the speed of movement."]
Rotate counterclockwise by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform.']
Turn in the opposite direction by an angle of 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['4; The JSON structure and the natural language command align in the action ("rotate") and the "angle" parameter, but the "angular_velocity" values (0.35 in JSON vs. 10 in command) do not match. The "is_clockwise" parameter complies with "opposite direction" in the command, implying counter-clockwise rotation. However, the conforming JSON structure would be: \'{"action": "rotate", "params": {"angular_velocity": 0.35, "angle": 90, "is_clockwise": false, "unit": "degrees"}}\'.']
Rotate anticlockwise by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];["5; Exactly conform. The command 'Rotate anticlockwise by 90 degrees.' is perfectly reflected in the given JSON. The `action` is set to `rotate` which matches the command. The `angle` is correctly captured as `90`, the `unit` is mentioned as `degrees` which matches the command and `is_clockwise` is set to `false` which correctly represents 'anticlockwise'. The `angular_velocity` does not have a specified value in the command, but it's a reasonable value, hence accepted."]
Spin to the left by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform.']
Twist counterclockwise by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; The natural language command exactly fits the JSON structure. The action \'rotate\' is present and all parameters (\'angular velocity\', \'angle\', \'is_clockwise\', \'unit\') are correctly given. The direction \'counterclockwise\' correctly translates to "is_clockwise": false in the JSON and the angle of rotation is also specified correctly.']
Move backward for 3 meters.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": false, "unit": "meter"}}'];['5; The command is perfectly converted into JSON using the sample given, with all keys and values present. The only difference is the "is_forward" value, which is False in the JSON, correctly corresponding to the "move backward" command.']
Go in reverse for a distance of 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "meter"}}'];['4; The command partially matches the JSON structure. The action "move" and the parameters "distance", "is_forward", and "unit" align correctly with the natural language command. However, the natural language command does not specify a "linear_speed", so the score cannot be a 5. The assumed speed of 1 may be reasonable but not explicitly stated in the command.']
Travel three meters in the opposite direction.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform.']
Retreat for a distance of 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "meter"}}'];['4; The JSON structure matches the command in terms of moving a certain distance, however it does not match in terms of the direction of movement. The command specifies to retreat, which implies moving backwards, but the JSON structure has "is_forward": true. The specified distance in the command and JSON structure matches. The speed is not specified in the command so the value 0.5 in the JSON is acceptable.']
Reverse your movement and cover a distance of 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "meter"}}'];['4; All the action and parameters map correctly with the JSON command, however the value for "linear_speed" is not specified in the command so it doesn\'t perfectly conform.']
Turn right and move forward for 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['4; The natural language command partially matches the JSON information. The command mentions moving forward for a certain distance, which matches the "move" action JSON structure. However, there is no JSON representation for the action "turn right" in this sample ontology, hence no full conformity.']
Proceed forward for 1 meter after turning to the right.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['1; The natural language command partially matches the JSON structure. The \'move\' action is correctly translated with the \'linear_speed\', \'distance\', \'is_forward\', and \'unit\' parameters. However, the command also implies a rotation ("turning to the right") which is not represented in the given JSON structure.']
Take a right turn and continue moving straight ahead for a distance of 1 meter.,['{"action": "move", "params": {"linear_speed": 1.0, "distance": 1, "is_forward": true, "unit": "meter"}}'];['1; The provided JSON structure partially matches the natural language command. However, the JSON lacks the "rotate" action required to execute the "Take a right turn" command. The JSON only includes the "move" action, which corresponds to the "continue moving straight ahead for a distance of 1 meter" command. The "rotate" action is missing.']
After making a right turn, proceed ahead for 1 meter.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['4; The JSON structure matches the natural language command partially. The \'move\' action is correctly represented in JSON, including the \'distance\', \'is_forward\', and \'unit\' keys. However, there is no \'rotate\' action in the given JSON which is needed to represent the "right turn" in the command. The \'linear_speed\' parameter in JSON is also not mentioned in the command, but its value is reasonable.']
Rotate to the right and then advance for a distance of 1 meter.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['4; The JSON structures conform to the commands given but there are minor discrepancies with the values. For instance, the angular_velocity is set at 1 in the JSON when it isn\'t specified in the command and could be any reasonable number such as the sample 0.35. Similarly, a specific linear_speed isn\'t provided in the command, so it shouldn\'t necessarily be set at 1 in the JSON as per this ontology. The "rotate" and "move" actions and their parameters are accurately represented by the keys, however.', '']
Move forward at a velocity of 0.5 meters per second.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}}'];['4; The natural language command matches the JSON structure well as both refer to a "move" action happening in a forward direction at a particular speed. However, a conformity point is deducted as the command didn\'t specify a distance, and the JSON has arbitrarily assigned a value of 1.']
Proceed ahead with a speed of 0.5 meters per second.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform.']
Advance with a velocity of 0.5 meters per second.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}}'];['5; The natural language command fits exactly to the JSON structure. The action "move" and the linear_speed of 0.5 is specified in both the command and the JSON. The "distance" parameter was not specified in the natural language command but a value of 1 is reasonable and an addition of is_forward = True and the unit being in \'meters\' match with the command.']
Go forward at a rate of 0.5 meters per second.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}}'];['4; Partially conform. The natural language command is correctly translated to the "move" action in the JSON. The specified "linear_speed" of 0.5 in the command matches the value in the JSON. However, "distance" isn\'t mentioned in the command but is present in the JSON.']
Travel in a forward direction at a velocity of 0.5 meters per second.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": true, "unit": "meter"}}'];['5; The command is perfectly in accordance with the given JSON structure. The action is "move", the linear_speed is 0.5, is_forward is true, and the unit is "meter". The unspecified "distance" parameter is filled in with a reasonable default value of 1, which is in line with the scoring guidelines.']
Rotate clockwise by 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];["5; Exactly conform. The natural language command 'Rotate clockwise by 180 degrees' perfectly matches with the action 'rotate' and the parameter 'is_clockwise' as true in the JSON structure. The 'angle' parameter value in JSON (180) also is compliant with the 'by 180 degrees' in the natural language command."]
Perform a 180-degree clockwise rotation.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Turn by 180 degrees in a clockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 90, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['4; The "action" and all the "params" keys are correct. The angular_velocity value is reasonable although not specified in the natural language command. However, the angular_velocity value is too high for a normal turn.']
Rotate in a clockwise manner, completing a 180-degree turn.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Execute a clockwise rotation, rotating by 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['4.5; In the natural language command, there is no specification for the "angular_velocity" key. In the JSON structure, it has a reasonable value of 10. The value for the "angle" key is 180, which matches exactly with the JSON\'s "angle" key value. And the boolean "is_clockwise" key is set to true, correctly reflecting the command\'s "clockwise rotation". The "unit" key is "degrees" in both the command and the JSON structure. The action in the JSON structure is "rotate", which correctly reflects the natural language command "Execute a clockwise rotation". The only discrepancy is the not specified angular_velocity in the natural language command.']
Move forward for 10 meters at a velocity of 2 meters per second.,['{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The JSON structure accurately represents the command to move forward at a specified speed and distance. All values are specified correctly.']
Proceed straight ahead for a distance of 10 meters, maintaining a speed of 2 meters per second.,['{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meter"}}'];['5; The JSON structure perfectly matches the natural language command as the specified action is "move" with the required parameters linear_speed, distance and is_forward having the exact specified values in the command, and unit "meter" is also correctly deployed.']
Travel in a forward direction for 10 meters, with a velocity of 2 meters per second.,['{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meter"}}'];["5; Exactly conform. The natural language command perfectly matches to the JSON structure. All parameters in the JSON structure are provided in the command including action which is 'move' and parameters linear_speed, distance, is_forward and unit."]
Go ahead for 10 meters, moving at a pace of 2 meters per second.,['{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The provided natural language command perfectly matches the given JSON structure. The command of moving forward a distance of 10 meters at a speed of 2 meters per second is properly translated into the JSON action of "move" with the correct parameters {\'linear_speed\': 2, \'distance\': 10, \'is_forward\': true, \'unit\': \'meter\'}.']
Advance for a distance of 10 meters while maintaining a velocity of 2 meters per second.,['{"action": "move", "params": {"linear_speed": 2, "distance": 10, "is_forward": true, "unit": "meter"}}'];['4; The JSON structure matches the command, however "is_forward" parameter value is not mentioned in the natural language command but it\'s assumed to be true.']
Turn left and move forward for 5 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "second"}}'];['1; Partial match. The "move" action in the JSON structure correctly matches with the command "move forward for 5 seconds". However, the direction of \'turn left\' is not represented in the provided JSON structure. Moreover, it\'s not clear if the "distance" parameter in the JSON structure is intended to represent time duration.']
Make a left turn and proceed straight ahead for a duration of 5 seconds.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}} ', '{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "seconds"}}'];['4; The JSON structures correctly capture the main actions specified in the command - rotating (turning left) and moving (proceeding straight). However, the parameters specified for the \'rotate\' action are inaccurate: the direction of rotation should be \'is_clockwise\': false (for a left turn), and no specific \'angle\' or \'angular_velocity\' is mentioned in the command. For the \'move\' action, the \'distance\' is inaccurately given as 5  - the command specifies a "duration of 5 seconds", not a distance. This likely should refer to duration if we have \'unit\': "seconds" in our ontology.', '']
Take a left and advance in a forward direction for a span of 5 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true}}'];['2; The natural language command partially conforms to the JSON structure. While it is indicative of movement in the forward direction, which matches with the action "move" and the parameter "is_forward" in the JSON, it doesn\'t specify the linear_speed and the unit itself is incorrectly mentioned as seconds whereas the JSON structure accepts only distance in meters.']
Rotate to the left and proceed ahead for a duration of 5 seconds.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}} {"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "seconds"}}'];["2; The action 'rotate' matches with the natural language command. However, the parameters 'angular_velocity' and 'angle' are not mentioned in the command. The 'is_clockwise' parameter is correctly represented as 'false' for 'rotate to the left'. For the 'move' action, the parameters 'linear_speed' and 'distance' are not mentioned in the command. Rather a 'duration' is mentioned which does not conform to the given JSON structure. The direction of movement as 'forward' is correctly represented."]
Veer left and move forward for an interval of 5 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2.5, "is_forward": true, "unit": "second"}}'];['2; The natural language command is not matched well with the JSON structures. The command of veering left is not represented in the JSON. Although "move forward" is represented in the action "move" with "is_forward": true, the command\'s parameter of moving for a specific interval of time ("5 seconds") is not reflected in the JSON structures at all. The JSON uses a distance parameter whereas the command uses time interval.']
Move backward at a velocity of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];['4; The natural language command and JSON have near perfect conformity. The scoring is not a perfect 5 because the natural language command does not specify the distance to move backward, while the JSON assumes a distance of 1. If the natural language command had specified a distance, the match would be perfect.']
Go in reverse at a speed of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 0, "is_forward": false, "unit": "meter"}}'];['4; The natural language command matches the JSON structure quite well. The "action" "move" and "linear_speed" are correct. However, the "distance" key is not specified in the command, but it is present in the JSON. Also, the "is_forward" key matches well as the command specifies to go backward (thus false). However, the distance value in the JSON structure should not be necessarily zero. It accepts any reasonable value as per the instructions. Therefore, the score is not a perfect 5.']
Travel backwards with a velocity of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];['2; The mentioned natural language command partially matches with the move action in the JSON structure. Although the "move" action and "linear_speed" parameter match, the "is_forward" key\'s value is correctly specified as False in the JSON, however, the "distance" parameter is not mentioned in the natural language command but it appears in the JSON structure.']
Move in the opposite direction at a rate of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];["4; The JSON structure almost perfectly matches the natural language command - the 'move' action and 'linear_speed' parameter are correctly represented. Additionally, the 'is_forward' parameter is correctly inferred to be false, indicating backward movement. However, the command doesn't specify a 'distance' and the JSON suggests a distance of 1 meter which is an assumption. Therefore the score is 4 instead of 5."]
Go backward at a speed of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "is_forward": false, "unit": "meter"}}'];["4; The JSON correctly interprets the action of moving and the linear speed of 1. However, the direction of movement isn't defined as 'backwards', but as 'not forward'. While in a binary system, not forward does mean backward, it's not explicitly stated in the JSON."]
Rotate counterclockwise by 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];['4.5; The action in the JSON structure matches the natural language command. Moreover, parameters like "angle", "is_clockwise", and "unit" also match exactly. However, the "angular_velocity" value given in the JSON object is not specified in the command, but falls under "a reasonable value" according to guidelines. Overall, it is almost a perfect match, just lacking the explicit speed instruction in the command.']
Rotate 45 degrees counterclockwise.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command corresponds to the JSON Structure perfectly with the action of rotating at a certain angle in a counterclockwise direction. The "angle" value even matches, and the "is_clockwise": false correctly interprets "counterclockwise". Even though the "angular_velocity" was not specified in the command, it is acceptable as any reasonable value is accepted.']
Turn left by 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command specifies a rotation action, which is correctly identified in the JSON. The rotation angle is clearly defined as 45 degrees in both the command and the JSON. The direction of rotation (left) accurately translates to "is_clockwise: false" in JSON. The parameter values are also perfectly valid under the provided ontology.']
Rotate in an anticlockwise direction by 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": null, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];["4; The action and parameters conform with the keys in the sample ontology. However, 'angular_velocity' is null because no information was given in the natural language command, hence the loss of one point."]
Rotate to the left by 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];['4.75; Most part of the JSON is conforming to the intent of the natural language command however, the angular_velocity used in the JSON which is 1 does not exist in the natural language command.']
Move forward for 7 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}}'];["4; The JSON structure correctly includes the 'action' as 'move' and 'is_forward' as true as specified in the command. The units of movement as 'meter' is also correctly included in the JSON structure, as well as the distance '7'. However, the command 'Move forward for 7 meters' does not specify a 'linear_speed', so although the key is correct, the value '1' in the 'linear_speed' parameter is an assumption and not specified in the command."]
Proceed ahead for a distance of 7 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}}'];['5; The natural language command matches exactly with the provided JSON structure. The action is "move", and the parameters such as "distance", "is_forward" and "unit" are correctly specified. Though the "linear_speed" is not specified in the command, it is approximated reasonably in the JSON.']
Advance 7 meters in the forward direction.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}}'];["5; The natural language command corresponds exactly to the JSON structure. The action 'move' is specified along with the parameters 'distance', 'is_forward' and 'unit' that are consistent with the natural language command. The 'linear_speed' is not mentioned in the command but still a reasonable value is provided in the JSON which is also permissible."]
Travel straight ahead for a length of 7 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}}'];["5; The action 'move' with parameters 'distance' 'is_forward' & 'unit' matches exactly with the natural language command asked. Even if the 'linear_speed' is not specified, it is presented in the JSON with a reasonable value."]
Go straight for 7 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}}'];['4.5; The command conforms well with the JSON structure. However, the "linear_speed" is not specified in the natural language command, so the value (1) given in the JSON is acceptable but not perfect match to the command.']
Turn right and move forward for 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['3; The JSON structure accurately represents the "move forward for 4 meters" part of the command but it doesn\'t capture the "turn right" action requested in the natural language command. The command in the JSON also inaccurately sets "linear_speed" to 1, even though the natural language command doesn\'t specify a speed.']
Take a right turn and proceed ahead for a distance of 4 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": true, "unit": "degrees"}},', '{"action": "move", "params": {"linear_speed": 0.5, "distance": 4, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command instructions are accurately translated into the given JSON information. The \'rotate\' action in JSON matches the "Take a right turn" while the \'move\' action corresponds to the "proceed ahead for 4 meters" command.']
Make a right turn and advance straight ahead covering a distance of 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];["2; The provided JSON structure only covers the 'move' action mentioned in the command. The 'rotate' action (right turn) from the command is not reflected in the JSON."]
Rotate towards the right and continue moving forward for 4 meters.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['4.5; The command matches well with the corresponding JSON structures. The "rotate" command with parameters "angular_velocity", "angle", "is_clockwise" and "unit" are sufficiently covered. The "move" command parameters "distance", "is_forward" and "unit" are also accurately represented. However, the "linear_speed" parameter value in the move action JSON is not specified in the natural language command, this value is reasonable but it is not explicit in the command, hence, points are reduced.']
Go right and travel straight ahead, covering a distance of 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['4; The natural language command matches partially with the JSON structure. The command to go straight and cover a distance of 4 meters is correctly represented, however the command to "Go right" is not represented in the given JSON.']
Move forward for 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true}}'];["3; The JSON information only partially matches the natural language command. The action 'move' and parameter 'is_forward' are correctly interpreted, however, the command specifies '3 seconds', a unit of time, as distance, which does not match with the 'distance' key in the JSON, which represents a physical distance. So there is lack of conformity in the interpretation of distance. The input of 'linear_speed' as 1 could possibly be a reasonable default value and thus moderately acceptable."]
Go straight ahead for a duration of 3 seconds.,['{"action": "move", "params": {"linear_speed": "undetermined", "distance": "undetermined", "is_forward": true}}'];['2; The command partially conforms to the JSON structure. The "move" action is correct and the direction "is_forward" is also inferred correctly. However, the duration is not a parameter in the JSON structure and neither linear_speed nor distance are specified in the command.']
Proceed in a forward direction for a span of 3 seconds.,['{"action": "move", "params": {"linear_speed": "undetermined", "distance": "undetermined", "is_forward": true}}'];['2; The JSON structure partially fits the natural language command as the action \'move\' and parameter \'is_forward\' are correct. However, the command talks about moving forward for a span of time (3 seconds), not a particular distance or speed which is represented in the JSON structure. Therefore, "linear_speed" and "distance" cannot be accurately extracted from the command. No specification of \'unit\' in the command as well.']
Advance ahead for a period of 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "seconds"}}'];['2; The "distance" key-value pair in the JSON structure is not fully aligned with the natural language command as "distance" is not described in the command. The "unit" key is set to "seconds" which is a unit of time, not distance or speed. The natural language command \'advance ahead\' does match with the "action" key as "move" and "is_forward" as true, hence partial conformity.']
Travel forward for a duration of 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true}}'];["2; The natural language command uses time (seconds) to describe movement, whereas the JSON structure describes movement in distance. The term 'duration' in the command should correspond to distance and not to time in the JSON structure. However, the 'move' action with the 'is_forward' parameter in the JSON structure is matched correctly in the command."]
Turn left and move forward for 2 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['3; The command "Turn left" hasn\'t been included in the JSON, but the "move" action is correctly represented with correct parameters.']
Proceed straight for a distance of 2 meters after making a left turn.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}}'];["3; The natural language command matches partially with JSON structure. The 'move' action with distance and unit parameters are correctly defined in JSON structure, but the natural command also mentions a left turn (which relates to the 'rotate' action in JSON), that part is not represented in the JSON."]
For a span of 2 meters, continue moving forward after taking a left turn.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['2; Only the move action and its parameters correctly match the natural language command. The command of taking a left turn which should technically result in the formation of a "rotate" action in JSON, isn\'t translated to the appropriate JSON structure.']
Make a left turn and advance ahead for 2 meters.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meters"}}'];['5; Both the rotation action and the move action information in the JSON objects completely correspond to the natural language command.']
After turning left, go straight for a distance of 2 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];["2; The JSON structure represents the part of the command about going straight for a distance of 2 meters. However, the given command also includes a turning action, which isn't represented in the JSON. Also, linear speed value is given as 1 in the JSON structure which isn't specified in the natural language command and may not be a reasonable assumption."]
Rotate clockwise by 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];["4.75; The natural language command corresponds almost precisely to the provided JSON structure. The action 'rotate' and 'is_clockwise' set to true correctly reflect the command's intent for a clockwise rotation. The 'angle' value also matches with the 270 degrees specified. The 'unit' of 'degrees' is also correct. The only inconsistency lies in the 'angular_velocity' parameter, which, while not explicitly specified in the command, might not be realistically set to 10."]
Turn to the right by 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The natural language command precisely corresponds to the JSON structure. All keys in the JSON are also contained in the command: the action is to rotate, and the parameters include the angle (270 degrees) and the direction (right, which corresponds to "is_clockwise": true). The "angular_velocity" parameter isn\'t specified in the natural language command, but is filled with a reasonable value.']
Rotate in a clockwise direction by 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 30, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];["4.5; The JSON matches with the command perfectly, the 'angular_velocity' value is reasonable although it is not specified in the natural language command. The only reason the score isn't a solid 5, is due to the significant difference in angular velocity, which may not be practical for some applications."]
Perform a 270-degree clockwise rotation.,['{"action": "rotate", "params": {"angular_velocity": 30, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The natural language command and JSON information match perfectly. The action is "rotate", the angle is specified as 270 degrees, the rotation is specified as clockwise, and the optional parameter, "angular_velocity", has been given a reasonable value. The "unit" is also correctly mentioning "degrees".']
Rotate by 270 degrees in a clockwise manner.,['{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The natural language command perfectly matches the JSON structure. The action is "rotate" and the parameters include "angle" as 270, "is_clockwise" as true, and "unit" as degrees. "angular_velocity" is not specified in the command but a null value is acceptable according to the instructions.']
Move backward for 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform. The natural language command correctly matches the JSON structure. The "action" is identified as "move", and all the necessary parameters are provided: a reasonable "linear_speed", the specific "distance" of 6 meters, the direction "is_forward" is set to false for backward, and the "unit" is set as "meter".']
Reverse direction and travel a distance of 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform. The natural language command correctly translates into the JSON structure. The action "move" is correctly determined, the "distance" set to 6, the "is_forward" attribute correctly set to false to indicate reverse direction, and the "unit" is correctly set to "meter". The "linear_speed" parameter, while not provided in the natural language command, has been reasonably set at a value of 1, which is acceptable.']
Go back 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "meter"}}'];["4; The command 'Go back 6 meters' corresponds to the JSON structure however, the linear_speed is not specified in the natural language command and is injected as 1 in the JSON which may not be a reasonable default speed though acceptable, hence slightly reducing the conformity score."]
Retreat for a distance of 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform. The JSON perfectly matches the natural language command. The "move" action is correct, and all parameters like "linear_speed", "unit", and "distance" are also correctly mentioned. The "is_forward" parameter has been set to false as the command specifies retreating (moving backward).']
Move in the opposite direction for 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "meters"}}'];["4.5; The JSON structure matches well with the command, it correctly identifies the action as 'move' and includes the correct 'distance' and 'is_forward' parameters. However, the linear_speed parameter in the command isn't mentioned, and the unit mentioned in the JSON Structure is 'meters' while in the sample ontology is 'meter'."]
Turn right and move forward for 5 seconds.,['{"action": "move", "params": {"linear_speed": "unspecified", "distance": "unspecified", "is_forward": true, "unit": "seconds"}}'];['2; The natural language command instructs to \'turn right\' and \'move forward\' simultaneously which corresponds to two different actions in JSON - \'rotate\' and \'move\'. However, in the provided JSON, only the "move" action is accounted for. There\'s no \'rotate\' action present in the JSON. The parameters mentioned in the \'move\' action JSON also do not correctly align with the natural language command, as no specific \'linear_speed\' or \'distance\' is mentioned in the command, yet \'distance\' has been included in the JSON. Furthermore, \'unit\' parameter in the JSON structure should not contain \'seconds\' value because \'seconds\' cannot be converted to \'meters\' by just multiplying or dividing by a constant. Hence, it significantly deviates from the sample ontology. Therefore, due to these errors and mismatches, the connection between the command and its corresponding JSON is weak.']
Take a right turn and proceed ahead for a duration of 5 seconds.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}', '{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "seconds"}}'];['2.5; The JSON structures partially match the command. The "rotate" JSON structure corresponds to the "Take a right turn" command. However, the command asks for a duration of movement, not a distance as stated in the "move" JSON structure. Because the units don\'t match, the conformity isn\'t perfect.']
Make a right turn and continue moving straight for 5 seconds.,['{"action": "rotate", "params": {"angular_velocity": 90, "angle": 90, "is_clockwise": true, "unit": "degrees"}},', '{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "seconds"}}'];['4; The JSON structures almost perfectly match the command. The rotation is specified correctly with the appropriate parameters. However, in the move action, the distance parameter is measured in time (seconds) which is not exactly compatible with the ontology provided. The natural language command does not specify a speed, thus "1" is an acceptable arbitrary speed value.']
Go right and advance for a period of 5 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "seconds"}}'];['2; While the command implies movement, which is consistent with the JSON structure\'s action "move", parameters used in the command such as "go right" and "for a period of 5 seconds" are not reflected in the sample keys of the ontology. The "unit" has been incorrectly given as "seconds" rather than a measure of distance. Thus, it only partially matches with the JSON structure.']
Shift to the right and travel in a forward direction for 5 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "second"}}'];['3; The action and direction of movement match with the JSON structure, but the time unit "seconds" is not in the sample ontology and distance is not correctly represented in the command or structure.']
Move forward at a velocity of 0.3 meters per second for 10 meters.,['{"action": "move", "params": {"linear_speed": 0.3, "distance": 10, "is_forward": true, "unit": "meter"}}'];['4; The command almost perfectly matches with the JSON. However, "velocity" was interpreted as "linear_speed" hence the slight discrepancy.']
Proceed ahead for a distance of 10 meters at a speed of 0.3 meters per second.,['{"action": "move", "params": {"linear_speed": 0.3, "distance": 10, "is_forward": true, "unit": "meter"}}'];['5; The JSON structure exactly matches with the natural language command, with all parameters being mentioned and their values correctly noted.']
Travel forward for 10 meters, maintaining a velocity of 0.3 meters per second.,['{"action": "move", "params": {"linear_speed": 0.3, "distance": 10, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command perfectly matches with the JSON structure, all required parameters are provided and the command falls within the example keys.']
Advance for a total of 10 meters while moving at a speed of 0.3 meters per second.,['{"action": "move", "params": {"linear_speed": 0.3, "distance": 10, "is_forward": true, "unit": "meter"}}'];["5; The JSON command matches the natural language command perfectly with 'move' action and the right parameters of 'linear_speed', 'distance', 'is_forward' and 'unit'."]
Cover a distance of 10 meters by moving forward at a velocity of 0.3 meters per second.,['{"action": "move", "params": {"linear_speed": 0.3, "distance": 10, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform.']
Rotate counterclockwise by 120 degrees.,['{"action": "rotate", "params": {"angular_velocity": 30, "angle": 120, "is_clockwise": false, "unit": "degrees"}}'];['4; The JSON structure correctly represents the "rotate" action with the correct parameters of angle and clockwise direction. However, the "angular_velocity" value doesn\'t match the command, but it\'s acceptable as the value wasn\'t specified in the command.']
Rotate 120 degrees counterclockwise.,['{"action": "rotate", "params": {"angular_velocity": 30, "angle": 120, "is_clockwise": false, "unit": "degrees"}}'];["5; The command 'Rotate 120 degrees counterclockwise' matches exactly with the provided JSON structure. The information in the JSON is conforming with the ontology and the command. 'rotate' is the action being performed, '120' is the correct 'angle' value, 'is_clockwise' is correctly set to 'false' for a counterclockwise rotation, and the 'unit' of the rotation angle is correctly specified as 'degrees'. Although 'angular_velocity' value is not specified in the command, the given value is acceptable. Therefore, the conformity score is 5."]
Perform a counterclockwise rotation of 120 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 120, "is_clockwise": false, "unit": "degrees"}}'];['5; The command exactly corresponds to the provided JSON structure - "rotate" action is correctly used, "angle" is specified to be 120 degrees and "is_clockwise" is correctly set to false indicating a counterclockwise rotation. The "angular_velocity" parameter, though not specified in the command, has a reasonable placeholder value in the JSON.']
Turn left by 120 degrees.,['{"action": "rotate", "params": {"angular_velocity": 30, "angle": 120, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command asks for a rotation (turn) operation. The JSON action is "rotate", which matches. The direction of rotation is left, which corresponds to a counter-clockwise direction, so "is_clockwise: false" is correct. The natural language command specifies an angle of 120 degrees, matching the JSON "angle": 120. The angular velocity is not specified in the natural language command, but it is given a reasonable value of 30. The unit is correctly given as degrees.']
Rotate in the opposite direction by 120 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 120, "is_clockwise": false, "unit": "degrees"}}'];['4; The natural language command matches the JSON structure for the most part. The "rotate" action and "angle" parameter is correctly interpreted. However, the "angular_velocity" parameter in the JSON doesn\'t match with the natural language command, as the speed of rotation is not specified in the command. While it is a reasonable value, it was not explicitly given in the command. Additionally, "opposite direction" isn\'t explicitly stated to be clockwise or counter-clockwise in the command, however, it\'s reasonable to assume that it means counter-clockwise, hence "is_clockwise" is false which is correct.']
Rotate counterclockwise by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 30, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; The natural language command correctly matches the provided JSON structure. Although the "angular_velocity" value does not match, any reasonable JSON value is accepted if not specified in the command, according to the guidelines. Therefore, the conformity is exact.']
Turn left by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];["4.5; The natural language command and the JSON structure match with the correct 'rotate' action and 'angle' parameter, but the 'angular_velocity' isn't mentioned in the command so although it's a reasonable value, it isn't a perfect match."]
Rotate anti-clockwise by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['4; The natural language command is almost completely matched with the JSON structure, with the exception of the "angular_velocity". The given command does not provide any information about the angular velocity, but since the JSON contains a plausible value (10), the JSON does theoretically convey the intent of the command. However, since it\'s not specified in the command, one point is deducted.']
Rotate in the opposite direction by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command \'Rotate in the opposite direction by 90 degrees\' matches completely with the provided JSON structure. The command type "rotate" is present, "angle" is exactly 90 and "is_clockwise": false indicates the opposite direction of rotation as asked in the command. The \'angular_velocity\' and \'unit\' value are reasonable and fit within the context.']
Rotate counter to the clockwise direction by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];["5; The natural language command specifies an action and all corresponding parameters that match perfectly with the JSON structure. The action 'rotate' is correctly identified, and parameters 'angle' (90 degrees), 'is_clockwise' (false), and 'unit' (degrees) are explicitly mentioned. The undefined 'angular_velocity' in the natural language command is correctly substituted with a reasonable value (10). Therefore, JSON is exactly conforming to the command."]
Move forward for 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['4; The JSON structure matches the command "Move forward for 5 meters" for the most part, but the "linear_speed" parameter does not exactly conform to the natural language command, which doesn\'t specify a speed. The JSON is otherwise complete and correct, with "action" set to "move", "distance" set to 5, "is_forward" set to true, and "unit" set to "meter".']
Proceed straight ahead for a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['5; The natural language command perfectly matches with the JSON structure, all the parameters stated in the command (proceed straight ahead for a distance of 5 meters) are correctly implemented in the JSON command and the values also match. Even the linear speed parameter not mentioned in the natural command is correctly assumed as 1 in the JSON command which is a reasonable value.']
Advance ahead by 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['5; The command is well represented in the JSON structure. The action of moving forward is specified as "move" with "is_forward" as true, and the distance to be covered is specified as 5 meters, both of which align with the natural language command. Although the linear speed is not mentioned in the natural language command, it\'s value in the JSON is reasonable.']
Travel in a forward direction, covering a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];["5; The JSON perfectly matches the user's command. Every detail from the natural language command is appropriately captured in the JSON structure. The action is 'move', the direction is captured in 'is_forward' as true, the distance is captured as 5, and 'unit' as 'meter'."]
Move straight ahead and travel a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['4; The JSON structure matches the natural language command, however, the "linear_speed" parameter is not specified in the natural language command. The value "1" is reasonable but not specified, which costs a point.']
Turn left and move forward for 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];['2; The JSON structure partially matches with the command. The action "move" and parameter "is_forward": true are correctly captured. However, the command "turn left" is not captured and "distance": 2 is misrepresented. The "distance" in JSON should correspond to actual distance, not time.']
Proceed forward for 2 seconds after turning left.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}} ', '{"action": "rotate", "params": {"angular_velocity": 90, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];["2; The natural language command indicates a rotate action (turning left) should occur first, however, in the provided JSON structures the move action is first. Additionally, the unit for the move action in the JSON structure is specified as seconds which doesn't conform with the usual distance units like meters in the sample ontology. The parameters angular_velocity and angle for the rotate action in JSON don't match the command as their exact values are not mentioned."]
After making a left turn, continue straight ahead for 2 seconds.,['{"action": "move", "params": {"linear_speed": "default", "distance": "default", "is_forward": true, "unit": "second"}}'];['1; The natural language command involves both rotation and movement actions. However, the provided JSON structure only implements the move action. The rotation or the "left turn" action is not represented in the JSON structure.']
Take a left turn and then advance forward for 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];['1; The provided JSON structure does not match the natural language command because the command specifies a turn and a movement action while the JSON only represents a movement action. The JSON does not contain a direction (left or right) which is specified in the command. Therefore, the conformity score is low.']
Rotate to the left and travel straight for 2 seconds.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];["3; The natural language command partially matches with the JSON structures. The 'rotate' action is present, and the direction ('is_clockwise': false) is correctly interpreted. However, the actual rotation angle is not specified. The 'move' action is present too, but in the JSON structure, the unit of 'distance' is interpreted as 'seconds', which doesn't make sense. There should be another parameter to indicate duration."]
Stop and wait.,['{"action": "", "params": {}}'];["0; The natural language command 'Stop and wait' cannot be translated to any of the provided JSON structures because none of them contains the required keys to perform this action."]
Cease and remain still.,['{}'];['0; The JSON structures provided primarily consist of movement and rotation commands. The natural language command to "Cease and remain still" does not have any corresponding action in the given JSON structures.']
Halt and stay put.,[''];['0; The command does not correspond to any actions or parameters in the provided JSON structures.']
Pause and remain stationary.,['{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": true, "unit": "meter"}}'];['0; The natural language command asks the robot to pause and remain stationary. However, the JSON structure is notifying the robot to move with a linear speed of 0 meters, which does not match with the command. The key "move" does not align with the command of remaining stationary.']
Desist and await further instruction.,['{}'];['0; The natural language command does not match any JSON structure because it is requesting the action to cease and wait, which does not correspond to "go_to_goal", "move", or "rotate".']
Move backward for 10 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": false, "unit": "meter"}}'];['4; The provided JSON correctly executes the action "move" with appropriate parameters, including distance and unit. However, the "linear_speed" value in the JSON does not match exactly with the natural language command, which does not specify speed. Despite this discrepancy, the overall command and action structure fits the sample ontology, so the score is high but not perfect.']
Go back a distance of 10 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": false}}'];['4; The command somewhat matches the JSON structure, with the correct action being \'move\' and \'distance\' being 10. However, the command states to "go back" implying \'is_forward\': false, which is correctly given in the JSON, but \'linear_speed\' is not specified in the command, so it is assumed to be 1 in the JSON.']
Retreat for a distance of 10 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform.']
Reverse your direction and travel 10 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": false, "unit": "meter"}}'];['5; The JSON structure accurately represents the command given. The "move" action is used with "is_forward" set to false indicating a reversal of direction. The distance to travel is also indicated correctly as 10 meters.']
Take 10 steps backward.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": false, "unit": "steps"}}'];['4.5; The parameters are conform with the ontology and the values are reasonable, but the unit of distance ("steps") does not match the ontology\'s unit ("meter").']
Rotate clockwise by 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 60, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['4; The action type and parameters match. However, the "angular_velocity" value does not conform, as it is not mentioned in the natural language command and its value in JSON format seems unrealistically high for a rotation command.']
Perform a 180-degree clockwise rotation.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; The command and the JSON structure exactly match. The action "rotate" and all parameters "angular_velocity", "angle", "is_clockwise", and "unit" are included and their values match the information provided in the command.']
Rotate in a clockwise direction by 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];["4.5; The natural language command matches the JSON structure well, with all specified parameters ('rotate', 'clockwise', '180 degrees') clearly present in the JSON. However, the angular velocity is not mentioned in the command, hence the arbitrary value of 1 in the 'angular_velocity' in the JSON, although reasonable, results in a minor deviation from a perfect match."]
Turn by 180 degrees in a clockwise manner.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['4.5; The natural language command matches the JSON apart from the "angular_velocity" key. The command does not specify the "angular_velocity", so the provided value in the JSON structure is accepted. However, given the "rotate" action being specified, the value is relatively high which could potentially influence the scoring.']
Execute a clockwise rotation of 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['4.5; The action "rotate" is correctly used and the parameter "angle" and "is_clockwise" are correctly denoted in the JSON structure. Reduced half point because the angular velocity was specified in JSON but not in the natural language command.']
Turn right and move forward for 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "seconds"}}'];['2; The JSON structure partially matches the natural language command. The command "Turn right" is not reflected in the JSON and the command "move forward for 3 seconds" is represented, but the "linear_speed": 1 doesn\'t accurately reflect how far the movement will be in the specific time of 3 seconds.']
Make a right turn and proceed forward for a duration of 3 seconds.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": 1, "is_forward": true, "duration": 3, "unit": "seconds"}}'];["3; The JSON structures partially match the natural language command. The rotate action is conform and correct but the move command in the natural language command does not specify the distance but uses time for motion's duration which is not present in the JSON command. Therefore, the duration parameter does not conform with the JSON structure."]
Take a right and continue moving straight ahead for a total of 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "seconds"}}'];['2; The natural language command does not exactly match with the JSON command structure. The "rotate" action with "is_clockwise": true and "angle": 90(assuming a right turn to be 90 degrees) is missing in the JSON command, and it is also assuming the linear speed to be 1 without it being specified in the natural language command.']
Rotate to the right and advance for a period of 3 seconds.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "seconds"}}'];["3; The natural language command mostly matches the JSON structure. However, the angular velocity for the rotation action isn't specified in the command and while there's an implied forward movement, the distance isn't mentioned in meters or marked as a unit in the JSON. The unit in JSON is given as 'seconds' which doesn't directly map with the sample ontology."]
Face towards the right and travel forward for a duration of 3 seconds.,['{"action": "move", "params": {"linear_speed": "undetermined", "distance":"undetermined", "is_forward": true, "duration": 3, "orientation": "right"}}'];['0; The JSON structure does not match the sample ontology provided. The keys "duration" and "orientation" are not found in the sample ontology.']
Go to the living room and stop.,['{"action": "go_to_goal", "params": {"location": "Living room"}}'];['4; The action in the JSON structure matches with command, but the command includes an additional action (stop) which is not accounted for in the JSON structure.']
Proceed to the living room and come to a halt.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living room"}}}'];["5; Exactly conform. The command 'Proceed to the living room and come to a halt' matches exactly with the JSON structure provided where 'Action'= 'go_to_goal' and the 'location'= 'Living room'."]
Move to the living room and cease all movement.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living Room"}}}'];["4; The JSON structure represents the first part of the command 'move to the living room' well. However, the second part of the command 'cease all movement' is not represented in JSON format."]
Make your way to the living room and stand still.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living room"}}}'];['5; The command "Make your way to the living room and stand still." perfectly maps to the JSON structure {"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living room"}}}. The "location"\'s value "Living room" in the JSON corresponds to "living room" in the command, and the action "go_to_goal" corresponds to "Make your way". The standing still part doesn\'t need a command because doing nothing is basically \'stand still\'.']
Head to the living room and remain stationary.,['{"action": "go_to_goal", "params": {"location": "Living Room"}}'];["5; The command perfectly matches with the JSON instruction to move to a specific location. In this case, the living room replaces kitchen as per the natural language command. So, the conformity is absolute. The stationary aspect of the command is a default state of the agent unless instructed otherwise and doesn't require a JSON statement."]
Move 2 meters to the left.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "meter"}}'];['2; The movement action and the distance referenced in the command align with the JSON structure. However, the direction "to the left" is not reflected in the JSON, as it only indicates "is_forward", not a lateral direction. Additionally, the "linear_speed" value doesn\'t exist in the natural language command.']
Shift your position by 2 meters towards the left.,['{"action": "move", "params": {"linear_speed": 1.0, "distance": 2, "is_forward": false, "unit": "meters"}}'];['1; Key parameters from the natural language command, such as turning or changing direction towards the left, are missing or mismatched in the JSON structure, although it correctly got the information about moving action and distance. However, "is_forward" is incorrectly mentioned as false where the command doesn\'t specify the direction as backward.']
Change your location by 2 meters in a leftward direction.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "meter"}}'];["2; The direction of the movement is not captured accurately in the JSON command. The is_forward-key in 'move'-action does not specify left or right direction, it just signals about moving forward or backwards which is not requested in the natural language command. Also, linear_speed is mentioned as 1 in JSON, but according to the sample ontology should be 0.5. The distance and unit parameters match with the natural language command."]
Relocate yourself 2 meters to the left.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "meter"}}'];['1; The direction \'left\' in the command can\'t be directly related to \'is_forward\' in the JSON structure. Instead, a "rotate" action could be inferred but no such action is explicitly requested in the command. The \'distance\' is correct though.']
Move to the left by a distance of 2 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "meter"}}'];['3; Partially conform. The action \'move\' and the parameter \'distance\' with a value of 2 conform to the natural language command. However, the provided natural language command mentions a direction of movement - \'to the left\' - that is not represented in the JSON. Furthermore, the natural language command doesn\'t specify the linear speed for the movement, but there is a value for it in the JSON. Last, the command specifically says to "move to the left", however in the JSON, the "is_forward" is false, which may not necessarily mean moving to the left. Therefore, there is a conformity but it is partial.']
Rotate counterclockwise by 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];['4.5; Almost perfect conformity. The given natural language command correctly translates to the JSON structure provided. Objects such as action is "rotate", angle is 45 and unit is "degrees". However, \'angular_velocity\' is not specified in the natural command, and while it does accept any reasonable values, the "10" in this scenario may be a little too high for a normal rotational velocity. Therefore, it doesn\'t perfectly conform.']
Turn left by 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command is perfectly matched with the JSON information; action is "rotate", angle is 45 and the unit is in "degrees". Though the angular_velocity is not specified in the natural language command it\'s mentioned as a reasonable value. The parameter is_clockwise\'s value is false which means a left rotation.']
Execute a counterclockwise rotation of 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform.']
Rotate anticlockwise by an angle of 45 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];["4; Almost conform. The natural language command matches the JSON structure, actions and parameters are correct. However, the value given for 'angular_velocity' in JSON is different from the unspecified value in the natural language command."]
Perform a 45-degree rotation in the counterclockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 45, "is_clockwise": false, "unit": "degrees"}}'];['4; The JSON mostly conforms to the command except for the angular_velocity which is not mentioned in the command. However, given the absence of this specific information, a reasonable angular velocity is provided.']
Move forward at a speed of 0.5 meters per second for 4 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}}'];['2; The natural language command and the JSON information partially match. The command asks to move forward at a speed of 0.5 meters per second for 4 seconds, however, in the JSON information, instead of time, distance (2 meters) is used. The speed matches and the direction ("is_forward": true) is also implied in the natural language command, but the measure of how far to move (time vs distance) does not match the JSON information.']
Proceed ahead for a duration of 4 seconds with a velocity of 0.5 meters per second.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}}'];["5; The natural language command precisely corresponds with the JSON structure. It defines an action to 'move' with a velocity of 0.5 meters per second (it is also specified in JSON structure as 'linear_speed'). The forward direction is implicit in proceeding 'ahead', equivalent to 'is_forward':true. The duration of the move is not directly specified in the JSON structures so it is inferred from providing velocity and distance."]
Travel in a straight line for 4 seconds, maintaining a speed of 0.5 meters per second.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "seconds"}}'];['4; The command matches the "move" action from the keys but there is a slight mismatch in the parameters. The value of "distance" parameter in the JSON command is calculated as speed * time, while in natural language command, no explicit distance is mentioned. Also, the "unit" is incorrectly mentioned as "seconds" in JSON, it should be "meter".']
Advance at 0.5 meters per second for a period of 4 seconds in a forward direction.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}}'];['3.5; The action and most of the parameters match with the natural language command, where "move", "linear speed", "is forward" and "unit" match with the command\'s action and request. However, the command mentions the time period while JSON has a "distance" parameter, calculating from speed and time mentioned in a command. So, this mismatch results in a partial conformity.']
Go forward for 4 seconds, maintaining a velocity of 0.5 meters per second.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}}'];["4; The natural language command expresses a forward movement at a certain speed, which does match the action and linear_speed key in the JSON. But the command addresses neither 'distance' nor 'is_forward' in the natural language. It mentions time but it's not a parameter in the ontology."]
Turn left and move forward for 7 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}}'];["4; Partial conformity. The JSON representation matches the action of moving forward for a distance specified in the natural language command. However, the 'rotate' action commanded as 'Turn left' in the natural language command is not represented in JSON. The JSON only represents the 'move' action."]
Make a left turn and proceed straight ahead covering a distance of 7 meters.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 7, "is_forward": true, "unit": "meter"}}'];["3; While the JSON partially matches the command, specifically the moving part, the command's request of a left turn is not reflected in the JSON. In the ontology provided, a turn would be expressed with the 'rotate' action, but this is not included in the returned JSON. So, the command only partially matches the JSON information."]
Take a left turn and continue moving ahead, advancing 7 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meter"}}'];['3; The JSON command corresponds to the action of moving forward for a certain distance which matches the natural language command. However, the natural language command also specifies a rotation (turning left) that does not have a corresponding JSON command. Additionally, the "linear_speed" value is mentioned in JSON while absent in natural language command.']
Head to the left and travel straight for 7 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "meters"}}'];['4; The natural language command "Head to the left and travel straight for 7 meters" partially matches JSON structure in terms of movement for a certain distance. The "move" action is present in the JSON and "distance" is correctly translated to "7 meters". However, part of the command, "head to the left", does not explicitly correspond to any key within the ontology.']
Rotate in the left direction and proceed forward, covering a distance of 7 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 45, "is_clockwise": false, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 0.5, "distance": 7, "is_forward": true, "unit": "meters"}}'];["4.5; The natural language command mostly conforms to the JSON structures provided. The 'rotate' action is present in the command and JSON, however, the 'angular_velocity' and 'angle' are differently evaluated. The 'move' action is also correctly interpreted, with all parameters accurately translated into the JSON. A slight deduction is made due to the discrepancy in the 'angular_velocity' and 'angle' parameters in the 'rotate' action."]
Stop and reverse direction.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];['4; The natural language command is mostly aligned with the JSON structure. It commands to "Stop and reverse direction", which could imply stopping a forward motion ("is_forward": false) and then initiating a movement. However, the "move" action is not ideal as it doesn\'t specify \'stop\' before reversing. If there could be a "stop" action in the sample ontology, it will be a perfect match. Therefore, the score is 4 because the command is inferred rather than explicitly stated.']
Come to a halt and begin moving in the opposite direction.,['{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false, "unit": "meter"}}'];['2; The JSON structure correctly signals a movement action being invoked. However, the natural language command stipulates halting before moving in the opposite direction. The JSON representation only includes the latter part of this command so it is a partial match. Furthermore, the distance parameter should not be 0 as it implies no movement.']
Cease forward motion and start moving backwards.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];['4; The natural language command is well represented by the JSON structure. But there is no indication of the distance or speed at which the command should be executed in the natural language command. It is assumed to be 1 meter at a speed of 1.']
Bring yourself to a stop and change your direction to the opposite way.,['{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false}}'];['1; The JSON structure correctly interprets the "bring yourself to a stop" part of the command by using \'move\' as an action and setting \'linear_speed\' and \'distance\' to 0. However, it doesn\'t fully capture the "change your direction to the opposite way" portion of the command as there is no indication to show a change of direction in the JSON structure. A \'rotate\' action with an angle of 180 degrees could have been used but it isn\'t as there are no \'rotate\' action elements in the JSON.']
Halt your movement and proceed in the opposite direction.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];['5; The command refers to stopping the current action and moving in the opposite direction, i.e., not-forward. This is correctly specified in the given JSON structure - the motion\'s direction is given by "is_forward": false. The speed and distance parameters have been guessed as reasonable values since they weren\'t specified in the command, which is acceptable as per the instructions.']
Move 3 meters to the right.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['3; The action matches but the command to "move to the right" does not translate exactly to "is_forward" in the JSON. Also, the "linear_speed" is not mentioned in the command but present in the JSON.']
Shift 3 meters towards the right.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "meter"}}'];['2; The action in the natural language command is partially matched with the JSON structure. The distance parameter "3 meters" is correctly captured in the JSON. However, moving "towards the right" would more closely match with a rotation action, not just a linear movement. The "is_forward" parameter doesn\'t match with the command information. Task of converting direction to right or left into forward or backward is quite complex and possibly incorrect in many contexts.']
Go 3 meters horizontally in the right direction.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['4; The command corresponds almost exactly to the JSON structure. The command instructs to move a certain distance, which matches with the "action": "move" key. The specified distance is also matched. However, the direction ("right") in the command doesn\'t have a direct equivalent in the JSON structure where only "is_forward" key is present.']
Change your position by moving 3 meters to the right.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['2; Partially conform. The natural language command instructs to "move 3 meters to the right" which match with the action "move" and the distance of 3 meters in the JSON. However, there is no specification about the direction of the movement (to the right) in the JSON structure.']
Traverse a distance of 3 meters towards the right.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];["2; The natural language command talks about moving in a particular direction (right) which is not translated into the JSON structure. Also, it doesn't specify the linear speed, however the JSON structure has a specific value for it."]
Rotate clockwise by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": true, "unit": "degrees"}}'];["4; Parameters in JSON are mostly matching the command and the 'angular_velocity' key is not mentioned in the natural language command but a reasonable value is accepted. However, the given value for 'angular_velocity' seems unrealistic given the small rotation of 60 degrees."]
Perform a clockwise rotation of 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 60, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The command is asking for a clockwise rotation of 60 degrees, which directly matches with the JSON information. "angular_velocity" doesn\'t need a specific value in the command, so 1 is accepted.']
Rotate 60 degrees in a clockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 60, "is_clockwise": true, "unit": "degrees"}}'];['4; The natural language command asks the system to rotate 60 degrees in a clockwise direction which matches with the JSON structure. However, in the JSON structure, the "angular_velocity" value is 1, which is not mentioned in the command. Despite this, the JSON structure carries out the given command effectively so the score would be 4.']
Turn to the right by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 60, "is_clockwise": true, "unit": "degrees"}}'];['4; The action and parameters match the command in terms of rotation, angle, unit, and direction. However, the "angular_velocity" is not specified in the command and the given value in the JSON (1) is thus arbitrary, which results in one point deduction.']
Rotate to the right by an angle of 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 60, "is_clockwise": true, "unit": "degrees"}}'];["4; The JSON structure correctly represents the requested action to rotate and it signifies the correct direction (right=clockwise) and the correct angle (60 degrees). But the given angular_velocity of 1.0 does not match to natural language command, as the command didn't specify the angular velocity."]
Turn right and move forward for 1 second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "second"}}'];['2; The JSON partially conforms to the natural language command. The "move" action and "is_forward" key are correctly represented in the JSON. However, the natural language command specifies a rotation (turn right) that is not represented in the JSON. The "unit" is also incorrectly represented as "second" in the JSON as the original command does not specify any units for the move action.']
Take a right turn and proceed straight ahead for 1 second.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}} ', '{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['2; Partial match. The "rotate" action in the JSON object aligns with the command to "Take a right turn", and the fact that the rotation is specified as clockwise is correct. However, the value for "angle" should be 90 for a right turn, not 40. The "move" action is mentioned in the command "proceed straight ahead" and "is_forward" set to true conforms to this command. However, the command specifies "for 1 second", but this might not necessarily translate into a "distance" parameter in the JSON object, and "linear_speed", which wasn\'t mentioned in the command, has an arbitrary value of 1. The "unit" given in both JSON objects doesn\'t match with anything specified in the command.']
Make a right turn and advance for 1 second.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}', '{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "seconds"}}'];['5; Exactly conform. The commands correctly execute a right turn using the rotate action with an angle of 90 degrees clockwise, then advance straight ahead by moving with specified distance and speed in forward direction. The units are also appropriately designated.']
Rotate to the right and move forward for 1 second.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "second"}}', '{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "second"}}'];["3; Partially conform. The natural language command's rotation direction and movement is correctly represented in the JSON structures. However, the units of rotation are specified in the JSON as degrees while the command asks for a rotation in seconds. Additionally, the command does not specify the distance to move forward nor the linear speed, so the applied parameters don't strictly conform to the command."]
Go right and continue moving forward for 1 second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "second"}}'];['3; The action "move" and parameters "is_forward" and "unit" match the natural language command. However, the values of "linear_speed" and "distance" don\'t correspond to the command, and the direction "right" from the command is not represented in the JSON structure.']
Go to the bedroom and stop.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}}}'];['3; The command "Go to the bedroom" fully matches with the first JSON structure, correctly specifying the action "go_to_goal" and parameter "location" with the value "Bedroom". However, "stop" is not represented in the JSON structures, hence, it cannot be verified.']
Head to the bedroom and come to a halt.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}}}'];['5; Exactly conform. The command \'Head to the bedroom\' corresponds perfectly with the JSON structure "go_to_goal" to location "Bedroom".']
Make your way to the bedroom and cease all movement.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}}}'];["4; The command in natural language matches with the first JSON structure where the action is to 'go_to_goal' and the location is the 'Bedroom'. However, 'cease all movement' action does not exist in the sample keys. Hence, perfect conformity cannot be attained."]
Proceed to the bedroom and pause.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}}}'];['3; Partially conform. The JSON structure correctly represents the action of moving towards a specific location (bedroom), however, there\'s no key or parameter that corresponds to the "pause" action mentioned in the natural language command.']
Go to the bedroom and stand still.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}}}'];['5; This natural language command exactly matches the JSON structure, where the action is to go to a certain location and the location specified is the "Bedroom".']
Move backward for 8 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": false, "unit": "meter"}}'];['4; Partially conform. The natural language command is correctly translated into the JSON structure, but the "linear_speed" value is not mentioned in the command and therefore should not be assumed as 1.']
Go 8 meters in reverse.,['{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform. The instruction in natural language perfectly matches the JSON information. The action "move" is accurately translated, and all parameters (linear_speed, distance, is_forward, unit) are correctly included and their values correctly set according to the instruction.']
Travel 8 meters in the opposite direction.,['{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": false, "unit": "meter"}}'];["4.5; The natural language command closely conforms to the JSON structure. All elements are mentioned but the linear_speed value isn't specified in the natural language command."]
Retreat for a distance of 8 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": false, "unit": "meter"}}'];['4.5; The command almost matches completely with the provided JSON. There is only small difference as the linear_speed in the JSON is 1 and it is not mentioned in the command.']
Reverse 8 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": false, "unit": "meter"}}'];['5; The natural language command perfectly matches the JSON structure. The action "move" is specified and also parameters such as "distance" and "is_forward" are also provided which align well with the sample JSON structure. The "linear_speed" value is not provided in the command but it has been assumed in the JSON which is acceptable as per the instructions.']
Rotate counterclockwise by 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 270, "is_clockwise": false, "unit": "degrees"}}'];["4.5; The JSON structure correctly mirrors the command to rotate in an anti-clockwise direction by 270 degrees. However, an angular velocity of 10 isn't provided in the natural language command, meaning the score cannot be perfect."]
Turn left by 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 270, "is_clockwise": false, "unit": "degrees"}}'];['5; All action and parameter fields match correctly with the natural language command.']
Rotate anti-clockwise by 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 270, "is_clockwise": false, "unit": "degrees"}}'];['4; Mostly conform. The action, angle, unit and direction of rotation match, however angular velocity value in the command is not specified, therefore any reasonable value in the JSON could be accepted. Here angular_velocity is set to 10 which is a reasonable value.']
Rotate in the opposite direction by 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 270, "is_clockwise": false, "unit": "degrees"}}'];['4; The natural language command instructs to rotate in the opposite direction by 270 degrees which corresponds with the JSON structure for rotating: the action "rotate" matches, the "angle" matches with 270 and "unit" is correctly in "degrees". However, the "angular_velocity" in the JSON structure is specified as 10, but there\'s no information about it in the natural language command, hence the point deduction. The "is_clockwise" is correctly interpreted as false, as opposite direction typically means anti-clockwise.']
Perform a 270-degree counterclockwise rotation.,['{"action": "rotate", "params": {"angular_velocity": 90, "angle": 270, "is_clockwise": false, "unit": "degrees"}}'];["5; Exactly conform. The natural language command exactly matches the JSON structure, which details a counterclockwise rotation action of 270 degrees. The angular_velocity value doesn't need to match exactly as the natural language command does not specify it."]
Turn left and move forward for 6 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "seconds"}}'];['2; The JSON structure partially matches the command. The \'rotate\' action missing from the JSON while it is present in the command, as the command denotes a "turn left" before moving forward. \'Move\' action and \'is_forward\' parameter are correctly captured, but the \'distance\' value in JSON does not match with command. Here, duration (6 seconds) is confused with distance.', '']
Go forward for 6 seconds after turning left.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "seconds"}}'];['2; The given JSON structure partially matches the natural language command. Although the action "move" and params like "is_forward" match the command of \'Go forward\', the parameters used do not correlate directly with the descriptor \'for 6 seconds\' mentioned in the command. Also, the command mentions \'turning left\' which signifies rotation but there is no JSON structure given for the rotation action.']
Take a left turn and proceed straight for 6 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "seconds"}}'];['1; The JSON structure includes movement, which is mentioned in the command, but it entirely misses the left turn action. Furthermore, the command mentions the time duration ("6 seconds") of the movement, not the distance. But the JSON incorrectly interprets this as distance. The speed is also not mentioned in the command but is included in the JSON structure.']
After turning left, continue moving forward for 6 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "second"}}'];['4; The JSON partially conforms to the natural language command. The "move" action and the "is_forward" and "unit" parameters are accurately represented. However, the command\'s mention of "turning left" is not captured in the JSON structure, and the "distance" parameter\'s value is represented as a duration (6 seconds) rather than a spatial distance. Additionally, the "linear_speed" parameter is not specified in the command and is therefore arbitrary.']
Make a left turn and move ahead for 6 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "seconds"}}'];['3; The command corresponds to the "move" action in the sample keys and includes the correct parameters such as "linear_speed", "distance", "is_forward", and "unit". However, it does not encode the instruction to "Make a left turn" which should be mapped to the "rotate" action, with "is_clockwise" set to False. Therefore, the JSON partially matches the command.']
Turn left and move forward for 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meters"}}'];['3; The "move" action is correctly identified, but the JSON structure is missing the "rotate" action to capture the "Turn left" part of the command. Also, the assumed linear_speed value of 1 doesn\'t come from the original command. In addition, the rotation direction (left) is missing from the JSON. The distance and direction of movement is well captured.']
Take a left turn and proceed ahead covering a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1.0, "distance": 5, "is_forward": true, "unit": "meter"}}'];['2; The JSON structure is for the command to move forward a certain distance. However, the natural language command also asked to take a left turn, which is not represented in the JSON at all.']
Make a left turn and continue moving straight, covering a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['1; The JSON command correctly has the action as \'move\', the \'is_forward\' param as True and the \'distance\' param as 5. However, the command to make a left turn is not present in the JSON, and "linear_speed" in JSON is 1 but not specified in the natural language command.']
Go left and advance forward, traveling a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meters"}}'];['5; The natural language command matches perfectly with the JSON structure and all parameters were provided. The action is "move" with "is_forward" as true and a "distance" of 5 meters, which aligns with the command to "advance forward, traveling a distance of 5 meters". Although the "linear_speed" is not specified in the natural language command, a reasonable value of 1 is accepted in the JSON structure.']
Execute a left turn and proceed straight, ensuring a distance of 5 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}', '', '{"action": "move", "params": {"linear_speed": 0.5, "distance": 5, "is_forward": true, "unit": "meter"}}'];['2.5; The "rotate" JSON structure corresponds partially with the given command - the direction of rotation is specified as left in the command, which translates to "is_clockwise": false in the JSON structure. However, the angular velocity and angle in JSON don\'t have corresponding information on the command. On \'move\' action, the distance parameter matches the \'ensuring a distance of 5 meters\' part of the command, but the \'proceed straight\' does not specify a \'linear_speed" or \'is_forward\'. Therefore, the score is not full.']
Rotate counterclockwise by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command correctly corresponds to the "rotate" action in the JSON structure. The parameter "is_clockwise" is set to false because the command specifies a counterclockwise rotation. The "angle" parameter is accurately set to 90 degrees, as specified in the command.']
Turn 90 degrees in the counterclockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 0, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command is about rotation and the JSON structure contains the exact action "rotate" with the parameters "angle" as 90, "is_clockwise" as false, and "unit" as "degrees". The "angular_velocity" is not specified in the command, but a reasonable value of 0 is accepted.']
Rotate anti-clockwise at a 90-degree angle.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; The natural language command and the JSON structure correspond nearly perfectly. The "rotate" action, "angle", "is_clockwise" and "unit" keys all fit the sample ontology. Any reasonable value for "angular_velocity" is acceptable so including 10 in the JSON is valid.']
Spin to the left by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];["4.5; The JSON structure mostly matches with the natural language command. The angular_velocity is not specified in the natural language command so here any reasonable value in JSON is accepted (which is 1 in the given JSON). The only minor discrepancy is the 'spin' verb in the command is not exactly 'rotate' in JSON action but they mean the same in this context."]
Rotate in the counterclockwise direction, making a 90-degree turn.,['{"action": "rotate", "params": {"angular_velocity": null, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['4.5; The natural language command is almost exactly represented in the JSON structure. However, the "angular_velocity" is null in the JSON but not specified in the command, which has a minor impact on the conformity score.']
Move backward for 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "second"}}'];['3; The natural language command roughly matches the given JSON structure. However, the "move" action in the JSON script doesn\'t specify the direction of the movement (backward/forward), so it\'s slightly diverging from the natural language command. The unit in the natural language command is in time (seconds), not distance. So, the values are not perfectly matched as well.']
Go in reverse for a duration of 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "seconds"}}'];['1; The JSON structure somewhat matches the command, as it involves a move action. However, "duration" of 3 seconds in the command does not directly correspond with "distance": 3 in the JSON structure. Also, the unit of "seconds" is not appropriate for distance.']
Take a step back and continue for a total of 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "seconds"}}'];['4.5; The JSON structure conforms with the command, but the unit of "distance" is specified as "seconds" which is incorrect because "distance" should be measured in a spatial unit, not a temporal one. The "linear_speed" value was not specified in the natural language command, but the given value in JSON is reasonable.']
Reverse your movement and maintain it for 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "seconds"}}'];["2; The natural language command is partially addressed in the JSON response - the 'is_forward' field is correctly set to 'false' to indicate reverse movement. However, the 'distance' field is incorrectly set to 3 seconds, this is an issue because the 'distance' and 'unit' fields are mismatched. The natural language command does not specify distance or linear_speed."]
Retreat for a period of 3 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "seconds"}}'];['2; The JSON structure correctly translates the command into a movement action and correctly interprets the direction as "not forward" (or backward). However, the translation of "3 seconds" into a distance parameter of "3" is incorrect as these are two different measurements - time vs distance. Therefore, the given JSON structure does not fully conform to the given command.']
Turn right and move forward for 10 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meters"}}'];['2; The JSON instruction carries out the "move forward for 10 meters" command correctly. However, it does not perform the "turn right" action from the original natural language command. Also, the "linear_speed" value is assumed, which is acceptable, but not the optimal situation. Therefore, the match between the command and the JSON structure is partial.']
Proceed forward for 10 meters after making a right turn.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}}'];["2; The JSON structure considers the command about moving forward but doesn't include the action of making a right turn before proceeding forward as mentioned in the natural language command. Therefore, it is only partially conforming to the original command."]
Take a right and continue moving ahead for a distance of 10 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}}'];["4; The command to move ahead for a certain distance is well represented in the JSON structure. However, the part of natural command stating 'Take a right' corresponds to a rotation action, which has not been represented in the JSON. Thus, it is not fully conforming."]
Make a right turn and travel straight ahead for a total of 10 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}}'];['2; The JSON structure partially matches with the natural language command. Though the command asks for a right turn, the corresponding JSON action and parameters for rotation ("action": "rotate") are not included in the JSON output. Only the "go straight for 10 meters" part of the command matches with the "action": "move" JSON structure.']
After turning right, advance forward and cover a distance of 10 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meters"}}'];['3; The JSON structure partially matches with the natural language command. However, the "rotate" action mentioned in the natural language command ("turning right") is not represented in the JSON. The "move" action and its parameters in the JSON correctly represent the "advance forward and cover a distance of 10 meters" part of the command.']
Rotate clockwise by 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Perform a 180-degree clockwise rotation.,['{"action": "rotate", "params": {"angular_velocity": 30, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The natural language command accurately describes a "rotate" action with a 180-degree clockwise rotation, which matches exactly with the JSON structure provided, including the action type, angle of rotation, rotational direction, and the unit of measurement.']
Turn in a clockwise direction by 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": undefined, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Execute a rotation of 180 degrees in a clockwise manner.,['{"action": "rotate", "params": {"angular_velocity": 30, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];["5; The natural language command exactly conforms to the provided JSON structure. The action is correctly identified as 'rotate' and the parameters - angle, is_clockwise, and unit - are correctly identified and valued. Although the angular_velocity value is not mentioned in the natural language command, its presence in the JSON structure doesn't affect the conformity score, as any reasonable value is accepted if the parameter value is not specified in the command."]
Rotate by 180 degrees, following the clockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The JSON structure matches perfectly with the provided natural language command of rotating in the clockwise direction. The parameters such as angle, unit and is_clockwise which were specified in the command are included in the corresponding JSON structure. Though the angular_velocity was not specified in the command, the value given in the JSON is accepted as it is a reasonable value.']
Move forward at a speed of 0.5 meters per second for 4 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}}'];['4; The natural language command is partially matching with the given JSON. The action "move" is correctly matched, and the parameters "linear_speed" and "unit" are correctly interpreted as 0.5 and "meter" respectively. However, the command "for 4 seconds" is not captured in the JSON structure. "distance" parameter doesn\'t match with the instruction but it could be computed from speed and time if time was in the ontology. Plus, the "is_forward" parameter is correct but not explicitly stated in the natural language command.']
Go ahead for 4 seconds at a velocity of 0.5 meters per second.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}}'];['4; The natural language command matches very well with the JSON structure, with every aspect of the command being represented in the JSON command. The only detail missing is the time of 4 seconds, which is not explicitly represented in the JSON structure. Besides, the distance calculated is reasonnable.']
Progress at a speed of 0.5 meters per second for a duration of 4 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}}'];['4; The command is specifying a linear speed which accurately matches the "linear_speed" key in the JSON structure. However, the requirement for the move action in JSON structure has "distance" parameter instead of duration. The assistant provided a reasonable estimation of the "distance" parameter by multiplying the speed and time. Although technically correct, it\'s not a perfect match with the natural language command.']
Travel forward for 4 seconds, maintaining a speed of 0.5 meters per second.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}}'];['4; The natural language command is correctly converted to the JSON structure. The values of parameters such as linear_speed and is_forward match exactly, and the calculated distance (speed*time = 0.5*4 = 2 meters) is reasonable. However, as the command does not specify units for speed or distance, these are assumed to be "meter", which does conform with the ontology. It\'s only not exactly correct because units are inferred, not explicitly stated.']
Proceed at a rate of 0.5 meters per second for a time span of 4 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}}'];["5; Exactly conform. The natural language command information precisely matches the given JSON structure. The linear speed is correctly identified as 0.5, the direction is forward by default, and the unit is meter. The distance couldn't be defined in the command but '2' (0.5 m/s * 4 s) can be assumed as it describes a 4 second move with the speed of 0.5 m/s."]
Turn left and move backward for 2 meters.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": false, "unit": "meters"}}'];['2; The given JSON structure only partially matches the command. While the command to "move" and the information related to "distance", "is_forward", and "unit" is present, the command to "rotate" or "turn left" isn\'t represented in the given JSON structure.']
Take a left turn and proceed backwards for a distance of 2 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "meter"}}'];['2; Although the JSON structure incorporates the correct action of \'move\' and includes parameters such as \'distance\':2, \'is_forward\': False, \'unit\': \'meter\', the parameter \'linear_speed\': 1 does not exist in the natural language command. Additionally, the JSON structure does not represent the command "Take a left turn" mentioned in the natural language command. Consequently, the JSON information does not entirely match the natural language command.']
Make a left turn and travel in reverse for a distance of 2 meters.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": false, "unit": "meter"}}'];['1; The natural language command mentions a "left turn" which corresponds to the "rotate" action in ontology, however, the provided JSON only interprets the "move" action and ignores the "rotate" action.']
Rotate left and proceed in reverse for a total distance of 2 meters.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "meters"}}'];['4; Mostly conform. The command is correctly translated into two JSON structures corresponding to the "rotate" and "move" actions. The values for "angular_velocity" and "linear_speed" in the JSON don\'t match with the command, but no exact values are specified in the command, so any reasonable value is accepted. The value for "angle" in the rotation action JSON is 90, which implies a right turn, not left. However, "is_clockwise" is set to false, which could compensate for this misunderstanding by implying a counter-clockwise, or left, rotation.']
Shift to the left and move backwards covering a distance of 2 meters.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": false, "unit": "meter"}}'];['4; The JSON structure matches the natural language command, including the "move" action and related parameters such as "distance" but "is_forward" is not correct, as the command suggests moving "backwards" which would indicate a false value. Also, the command \'Shift to the left\' is not represented in the provided JSON structure.']
Move forward for 7 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "seconds"}}'];['2; The natural language command mentions moving forward for a time duration (7 seconds) while JSON command describes a structured move command including speed, distance, direction, and unit. But in the JSON structure, unit refers to a spatial measurement (meter), not a time measurement (second). There is a partial match, but the specific directive (time duration) is not perfectly aligned with JSON information.']
Proceed ahead for a duration of 7 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "seconds"}}'];["2; The action in the JSON structure matches the command, but the parameters in the JSON structure do not correspond perfectly with the natural language command. the natural language is referring to time in seconds, not distance, which doesn't align with the keys in the JSON structure."]
Advance for a period of 7 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "seconds"}}'];['2; Although the command is about moving, the parameters do not match accurately. The given JSON structure requires parameters such as "distance", "linear_speed" and "is_forward" for movement. Here, the command mentions about moving for a specific time (7 seconds) which doesn\'t align correctly with "distance" or "linear_speed". Therefore, using a "unit" of "seconds" is not conforming to the \'distance\' parameter expected in the JSON structure which is usually in spatial units not temporal.']
Keep moving forward for 7 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "seconds"}}'];["3; Although the natural language command talks about moving forward for a certain time duration, and the JSON structure also describes a move action, the parameters don't completely match. In the command, the duration of movement is specified, but in the JSON, it's the distance to be covered and the unit used is distance-based (meter) not time-based (seconds). So the command partially conforms to the JSON structure."]
Continue ahead for a total of 7 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 7, "is_forward": true, "unit": "seconds"}}'];['1; The JSON structure does depict a "move" action, however, the parameters do not match the attributes mentioned in the natural language command. The command talks about moving ahead for 7 seconds, but JSON structure defines a distance rather than a time duration, and it uses incorrect unit of measurement which should be \'second\' not \'seconds\'.']
Rotate counterclockwise by 30 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 30, "is_clockwise": false, "unit": "degrees"}}'];['4; The command is correctly represented by the JSON structure although the "angular_velocity" value is not explicitly specified in the command.']
Turn left by an angle of 30 degrees.,['{"action": "rotate", "params": {"angular_velocity": 0, "angle": 30, "is_clockwise": false, "unit": "degrees"}}'];['4.5; Almost exact match. The command has been aptly understood and converted to JSON. However, the "angular_velocity" value is set to 0 in the JSON structure and should ideally have been any value given the omission in the natural language command.']
Rotate anticlockwise by 30 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 30, "is_clockwise": false, "unit": "degrees"}}'];["4; The natural language command matches with the JSON command in terms of action and all parameters. However, the angular velocity value in JSON (10) is arbitrary as the natural language command doesn't specify it. The score is not a 5 because while the JSON does have a plausible value for the parameter, it doesn't exactly conform to the command."]
Rotate in the opposite direction by 30 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 30, "is_clockwise": false, "unit": "degrees"}}'];['4; The command "Rotate in the opposite direction by 30 degrees" conforms with the JSON structure provided. The action "rotate", the angle of 30 and unit "degree" are all clearly specified. The sample indicates a precedence for boolean values in setting rotation direction and conform to this by interpreting "opposite direction" as "is_clockwise": false. However, the specific angular_velocity parameter isn\'t stated in the natural language command, hence the lower score.']
Make a 30 degree counterclockwise rotation.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 30, "is_clockwise": false, "unit": "degrees"}}'];['4.5; Almost all keys match to the sample ontology but the "angular_velocity" value makes less sense in the given command.']
Move backward at a speed of 1 meter per second for 6 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "seconds"}}'];['4; The command partially matches the JSON structure. Although the direction as "backward" is incorrectly represented as "is_forward": false (it should be -1), the action "move" matches and parameters "linear_speed" and "unit" also match. The term "seconds" as a unit isn\'t in the keys of the ontology.']
Reverse your movement, traveling at a pace of 1 meter per second for a duration of 6 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "meter"}}'];['5; The command perfectly matches with the JSON structure. The action "move" is correct, "linear_speed" is given as 1, "distance" is 6, "is_forward" is correctly identified as false and "unit" is "meter".']
Go in the opposite direction, maintaining a velocity of 1 meter per second for 6 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "seconds"}}'];['5; The natural language command is perfectly translated into the JSON structure. The action "move" aligns well and all parameters "linear_speed", "distance", "is_forward", and "unit" hold consistent values. Going in the opposite direction implies not going forward, hence "is_forward" is rightly set to false.']
Travel backwards for 6 seconds at a speed of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "seconds"}}'];["4; The JSON structure matches the natural language command partially. The 'distance' field in the JSON is set to 6, however in the context of the command this is likely referring to 'time' and not 'distance'. There also isn't a key in the sample ontology for specifying the direction of travel (backwards/forwards), since the 'is_forward' key is not in the sample set and is inferred from the natural language command. This makes the command partial conforming."]
Invert your motion, moving at a rate of 1 meter per second for a period of 6 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": false, "unit": "seconds"}}'];["4; The natural language command matches with the JSON structure but there's a mismatch in 'unit'. The command specifies the duration of movement in seconds, but 'unit' is given as 'meter' in the JSON structure. It should be 'seconds' to match the command."]
Turn right and move forward for 8 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "meters"}}'];['2; The JSON structure includes the key for the action "move" which matches the command "move forward for 8 meters" but does not include the action "rotate" which is indicated by the command "turn right". Therefore, only a part of the command is represented in the JSON structure.']
Proceed for 8 meters after taking a right turn.,['{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "meters"}}'];['2; The JSON structure partially conforms to the natural language command. The command involves both moving and rotating, the JSON structure only describes the move command, while missing the rotation (turn) command. The commands are present in the sample ontology, but are not fully represented in the provided JSON.']
Take a right and continue straight ahead for a distance of 8 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 8, "is_forward": true, "unit": "meter"}}'];['4; The action and parameters partially conform. The "move" action and distance parameters are clearly stated in the natural language command. However, the specific direction of turning right mentioned in the command is not represented in the JSON structure. The JSON also added an arbitrary "linear_speed" parameter that wasn\'t mentioned in the command.']
Make a right turn and then proceed ahead for 8 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 0.5, "distance": 8, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform.']
After turning right, cover a distance of 8 meters by moving forward.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 8, "is_forward": true, "unit": "meters"}}'];["4; The action 'move' and parameters 'distance', 'is_forward', and 'unit' from the natural language command match the JSON's keys and values. However, the command 'After turning right' is not expressed in the JSON command."]
Rotate clockwise by 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Turn 270 degrees to the right.,['{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The text command correctly specifies to perform a rotation action, with the degree of rotation and the direction matching the provided JSON structure. The angular_velocity parameter is implicitly allowed to take any value and there are no contradictory or missing key-value pairs.']
Turn three-quarters of a full rotation to the right.,['{"action": "rotate", "params": {"angular_velocity": null, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Perform a clockwise rotation of 270 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['4.75; The natural language command translates to the JSON structure accurately except the "angular_velocity". The natural language command does not specify the "angular_velocity", however, the JSON structure has a value for it which is acceptable. But the value of 10 seems a bit unreasonable for angular velocity, hence the slight deduction, otherwise it\'s a near-perfect match.']
Rotate in the clockwise direction, making a 270-degree turn.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 270, "is_clockwise": true, "unit": "degrees"}}'];['5; The JSON structure exactly conforms to the natural language command. The action "rotate" and all the parameters including "angular_velocity", "angle", "is_clockwise", and "unit" are properly mentioned and the values provided in the JSON are reasonable with respect to the command "Rotate in the clockwise direction, making a 270-degree turn".']
Move forward and then immediately stop.,['{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": true, "unit": "meter"}}'];['4; There is a matching "move" action in the natural language command and the "move" action in the JSON structure. The "is_forward" key is matching the forward command. However, the word \'immediately\' should mean that distance is very minimal and not zero, and the same for linear_speed. Therefore, it\'s mostly but not exactly conforming.']
Proceed forward and promptly come to a halt.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['4; The command is mostly conform to the given JSON structure. The action of moving forward is considered and parameters for "move" action are present. But The command does not specify how promptly should the halt be, so it is not clear how "promptly" translates into the given JSON parameters.']
Advance and instantaneously cease movement.,['{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": true}}'];['4; Although the command "Advance and instantaneously cease movement." corresponds to the action of moving with the parameters, the distance and linear_speed values in the JSON are not precisely correct as they do not translate the element of momentarily moving before ceasing. However, the action is still depicted, hence the score of 4.']
Go forward and abruptly pause.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];["4; The command 'Go forward and abruptly pause.' is partially converted into the provided JSON structure. The 'move' action and parameters 'linear_speed', 'distance', 'is_forward', and 'unit' match with the action and params given in the JSON. However, 'abruptly pause' is not represented in the structure."]
Move ahead and promptly end motion.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": true, "unit": "meter"}}'];['4; The JSON correctly represents the action "move" from the command, and it is correctly formatted with a "linear_speed", "distance", a boolean for "is_forward", and a "unit" of "meter". However, the natural language command does not specifically mention these parameters and their values, hence a perfect match can\'t be identified. "Promptly end motion" also isn\'t specifically represented in the JSON.']
Turn left and move backward for 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meter"}}'];['2; The natural language command includes instructions to turn (rotate), which are not represented in the JSON structure. Additionally, the linear_speed in the JSON does not have a corresponding value mentioned in the natural language command; however, it still conforms due to the instruction for a reasonable value.']
Make a left turn and proceed backwards for a distance of 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meter"}}'];['2; The JSON structure only includes the "move" action but does not include the "rotate" action required to make the left turn specified in the natural language command. The aspects of the "move" action are correct with the direction being backwards and the distance being 4 meters. However, the JSON structure has a "linear_speed" of 1 which is not specified in the command.']
Go in the opposite direction and turn to the left, covering a distance of 4 meters.,['{"action": "move", "params": {"linear_speed": 1.0, "distance": 4, "is_forward": false, "unit": "meters"}}'];['3; The natural language command to move in the opposite direction accurately matches the JSON structure for the "move" action, with the parameters "distance" and "is_forward" being accurately represented. However, the command to "turn to the left" isn\'t converted to a "rotate" action in JSON, which should be included for a higher conformity score. Also, the "linear_speed" parameter in JSON is an arbitrary value, it is not mentioned in the natural language command.']
Rotate to your left and travel in the reverse direction, moving 4 meters behind.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 180, "is_clockwise": false, "unit":"degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meters"}}'];["4; The natural language command is almost perfectly represented in the two JSON structures. The only detail unspecified in the command is 'angular_velocity', and any reasonable value for that is accepted. So, the conformity score is 4 as the JSON is almost exactly conforming."]
Head left and travel in reverse for a total of 4 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": false, "unit": "meter"}}'];['4; The command is perfectly matched with the \'move\' action in JSON, but the "Head left" part points to a rotation action which is missing in provided JSON structure.']
Move forward for 10 seconds at a speed of 0.3 meters per second.,['{"action": "move", "params": {"linear_speed": 0.3, "distance": 3, "is_forward": true, "unit": "meter"}}'];['1; The natural language command to "Move forward for 10 seconds at a speed of 0.3 meters per second" partially matches with the provided JSON structure. The "action": "move" and "params":"linear_speed" match, as well as the "is_forward": true (implicitly derived from \'move forward\' in command). However, there is no parameter in the JSON structure that can express the time intervals mentioned in the command and the "distance" parameter does not match with the provided JSON as its value has been arbitrarily assigned as 3, while no specific distance is mentioned in the command.']
Advance for a duration of 10 seconds, maintaining a velocity of 0.3 meters per second.,['{"action": "move", "params": {"linear_speed": 0.3, "distance": 3, "is_forward": true, "unit": "meter"}}'];['4; Most keys and values match correctly, but time duration is not translated into a distance parameter in the JSON structure, instead, a fixed value is given as distance.']
Proceed ahead at a rate of 0.3 meters per second for a period of 10 seconds.,['{"action": "move", "params": {"linear_speed": 0.3, "distance": 3, "is_forward": true, "unit": "meter"}}'];['4; The JSON structure mostly matches with the natural language command. However, the calculation for distance is not explicitly mentioned in the natural language command but has been reasonably assumed in the JSON structure as the product of speed and time (0.3m/s * 10s = 3m). Therefore, it is not an exact match but a very close one.']
Travel straight ahead for 10 seconds, moving at a speed of 0.3 meters per second.,['{"action": "move", "params": {"linear_speed": 0.3, "distance": 3,  "is_forward": true, "unit": "seconds"}}'];['2; The action "move" and "linear_speed" parameter match, but the "distance" should be equivalent to the speed multiplied by time and "unit" is mentioned as "seconds" not "meter" in JSON. Moreover, the parameter "is_forward" is true by default but not mentioned in the command.']
Go forward at a velocity of 0.3 meters per second, covering a distance for 10 seconds.,['{"action": "move", "params": {"linear_speed": 0.3, "distance": 3, "is_forward": true, "unit": "meter"}}'];["2; Although the command and the JSON structure both are about moving, the values in the JSON do not match with the command. The distance is not given as 10 seconds in the command, it's about speed and time where speed is 0.3 m/s for a duration of 10 seconds. It's not straightforward to relate it to the JSON without an explicit conversion. Moreover, the 'duration' parameter is absent in the JSON structure."]
Rotate counterclockwise by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];['4.5; The JSON matches mostly with the command - The action is correct ("rotate") as well as "angle" and "unit" parameters. However, "is_clockwise" parameter correctly represents the command as false for counterclockwise rotation. Angular velocity is 0.35 according to the sample ontology, but in JSON its 10 which isn\'t specified in the command and considered as a reasonable value. Therefore, there is a slight mismatch.']
Turn left by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform.']
Rotate in the opposite direction by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];["4; The natural language command matches the JSON structure very well. However, the 'angular_velocity' value is not specified in the natural language command, but it is specified as '10' in the JSON. This mismatch in the values for 'angular_velocity' is the cause of the missing point."]
Make a counterclockwise rotation of 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];['5; The command requires a counterclockwise rotation with an angle of 60 degrees. In the JSON message, the action is correctly mentioned as "rotate" and the "params" key correctly includes the "angle" of 60. "is_clockwise" is set as false, which is the inverse of counterclockwise. Therefore it perfectly matches with the command. Angular velocity is not specified in the sentence, so any reasonable value in the JSON like 10 is accepted.']
Rotate leftwards by 60 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}'];["5; Even though the angular_velocity value doesn't match exactly, it is not specified in the natural language command therefore any reasonable value in the JSON is accepted. The action is correctly classified as rotate, and the angle is correctly identified, as well as the direction (false represents leftward/counter-clockwise rotation)."]
Move backward and then immediately stop.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];["3; The provided JSON structure has partial conformity with the natural language command 'Move backward and then immediately stop.'. The action type 'move' and parameter 'is_forward' set to false correspond well to the 'move backward' portion of the command. However, the natural language command's 'stop' action is not represented in the JSON structure."]
Reverse and come to a sudden halt.,['{"action": "move",  "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];['3; Partially Conform. The command \'reverse\' was translated perfectly into the corresponding JSON command with "action": "move" and "is_forward": false which implies moving backwards or reversing. However, \'come to a sudden halt\' was not captured in the JSON structure, hence, it does not fully conform to the given natural language command.']
Go in reverse and abruptly cease.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}'];['3.5; The JSON structure correctly interprets the command to move in reverse, but it does not account for the command to "abruptly cease."']
Back up and instantly come to a standstill.,['{"action": "move", "params": {"linear_speed": 0, "distance": 0, "is_forward": false}}'];['2; The natural language command implies moving backwards (`"is_forward": false`) but the JSON structure includes both a stopping action (`"linear_speed": 0`) and unspecified distance (`"distance": 0`). However, the natural language command does not specify any distance to be backed up, which doesn\'t fully correspond to the JSON. Also, "instantly come to a standstill" would require an action that\'s missing from this JSON.']
Move backwards and promptly come to a stop.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": false, "unit": "meter"}}'];['3; Partial conformity. Although the natural command implies a movement, the direction "backwards" and the action "stop" are not clearly described in the JSON structure. However, the "move" action and "is_forward": false attribute is correctly understood. The distance and linear speed parameters are also not specified in the natural language command, but they are accepted as reasonable values.']
Turn right and move forward for 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "meter"}}'];['3; The JSON structure partially matches the natural language command. It correctly represents the moving forward for 6 meters part but ignores the "Turn right" command.']
Make a right turn and proceed straight ahead for a distance of 6 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 0.5, "distance": 6, "is_forward": true, "unit":"meter"}}'];['5; The natural language command perfectly corresponds with the obtained JSON structures. The action "rotate" is represented with a justified "is_clockwise" set to True indicating a right turn; "angle" doesn\'t specify the value in command so value in JSON is fine too. The action "move" is represented with "distance" as 6 and "is_forward" as True which represents the movement straight ahead for a distance. The "linear_speed" in the command isn\'t specified so the value in JSON is acceptable.']
Go to your right and continue moving forward for a total of 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "meter"}}'];['1; The command calls for both a rotation (turning to the right) and a movement (going forward for 6 meters), but the JSON structure only includes the "move" action and does not include the "rotate" action. The direction of the movement (forward) and the distance (6 meters) does matches the JSON, but the "linear_speed" parameter does not match the command, as no specific speed was requested.']
Take a right turn and advance ahead, covering a distance of 6 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 6, "is_forward": true, "unit": "meter"}}'];['2; The JSON structure captures the command to move forward, but does not include an action to take a right turn as indicated in the natural language command.']
Head towards the right and maintain a straight path for 6 meters.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 6, "is_forward": true, "unit": "meter"}}'];["4; The direction 'right' from the original command is not represented in the JSON structure, but all other details are correctly translated with acceptable values."]
Rotate clockwise by 120 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 120, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The natural language command exactly matches the JSON information and its conformity with the keys of the sample ontology since all the keys are correctly used and the parameter values in the JSON structure are reasonable.']
Turn 120 degrees in a clockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 120, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Move in a clockwise rotation by 120 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 120, "is_clockwise": true, "unit": "degrees"}}'];['4.5; The command matches the action "rotate" and parameters like "angle", "is_clockwise" and "unit". However, "angular_velocity" value isn\'t specified in the command, although its presence in the JSON with some value doesn\'t violate the rules.']
Adjust the rotation by 120 degrees in a clockwise manner.,['{"action": "rotate", "params": {"angular_velocity": 120, "angle": 120, "is_clockwise": true, "unit": "degrees"}}'];["4; The JSON is mostly conforming to the natural language command. However, the value of the angular_velocity shouldn't necessarily match with the angle's value. Other than that, values and keys fit perfectly to the command."]
Execute a 120-degree clockwise rotation.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 120, "is_clockwise": true, "unit": "degrees"}}'];["5; The natural language command and JSON structure are matching perfectly. The 'angle' and 'is_clockwise' parameters are correctly provided and since the 'angular_velocity' is unspecified in the command, it can take any reasonable value in the JSON."]
Move forward and then backward for 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": false, "unit": "meter"}}'];['4.5; The natural language command is matched with the JSON information as the JSON structures provide commands for moving forward and backward. However, the "linear_speed" parameter value is not specified in the natural language command. The value 1 has been added by assumption, which is reasonable. Hence, the conformity score is 4.5.']
Proceed ahead and then return in reverse for a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": false, "unit": "meter"}}'];['3; The natural language command indicates a forward movement first, but the JSON structure only includes the reverse movement. The distance specified and units match correctly in the command and JSON.']
Advance forward and then retract for a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meters"}}'];["2; Partially conform. The JSON structure captures the action of moving (advance forward) from the command. The distance of 5 meters is also captured correctly. However, the action of 'retract' in the command is not represented in the JSON structure. The linear_speed is also not specified in the natural language command, so the value provided in the JSON is acceptable."]
Go straight ahead and then move backward covering a span of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": false, "unit": "meter"}}'];['4; The command requires the robot to "Go straight ahead" initially which is not accounted for in the JSON structure. However, the command to "move backward covering a span of 5 meters" is accurately represented in the given JSON structure.']
Propel forward and then reverse, covering a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['2; The command corresponds to the structure of the JSON, the "action" is to move and the "params" keys match. However, the JSON structure does not include reversing or an is_forward key value set to false which is requested in the command.']
Move forward for 10 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}}'];['5; The natural language command exactly matches and conforms with the JSON structure, all values are specified and are properly reflected in the JSON.']
Proceed straight for a distance of 10 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command \'Proceed straight for a distance of 10 meters.\' is perfectly expressed in the JSON structure. The action "move" is mentioned with the parameters showing that the unit is in "meter", the distance is 10, and the direction is forward is marked as True. Even though the linear_speed value was not specified, it has a reasonable value assigned in the JSON which makes this scoring perfectly conforming.']
Advance ahead by 10 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}}'];['5; The natural language command exactly matches the JSON structure. The action "move" is correctly used and all the parameters ("linear_speed", "distance", "is_forward", "unit") are provided and their values are reasonable.']
Go straight ahead covering a distance of 10 meters.,['{"action": "move", "params": {"linear_speed": null, "distance": 10, "is_forward": true, "unit": "meter"}}'];['5; The JSON structure perfectly matches the natural language command with the "action" set as "move", "is_forward" is true implying going straight, "distance" is 10, and "unit" as "meter". The "linear_speed" is not specified in the command, but is set to null in the JSON, which is an acceptable value.']
Travel in a forward direction for 10 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}}'];['4; The values for "linear_speed" and "is_forward" keys are not specified in the natural language command, but the provided values in JSON are reasonable. The "distance" value and "action" value match perfectly with the command.']
Turn left and move forward for 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meters"}}'];["2; The movement action is partially conform but the direction of turning is not included in the JSON, which should have been included as part of a 'rotate' action."]
Make a left turn and proceed ahead for a distance of 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];["2; Justification: The natural language command involves both rotation (turning left) and linear movement (proceed ahead), but the provided JSON string only represents the 'move' action. The 'rotate' action with 'is_clockwise': False (indicating a left turn) is missing in the JSON, hence the relatively low score."]
Rotate towards the left and continue moving straight ahead covering a distance of 5 meters.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The JSON structures perfectly corresponds to the natural language command. The rotation command involves "left" rotation which is correctly represented as `is_clockwise: false` and then the "move" straight ahead for 5 meters is also accurately represented in the JSON.']
Take a leftward turn and advance for 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['2; The natural language command involves two actions, a turn and a movement, but only the movement has been represented in the provided JSON structure. Even if incomplete, the "move" action JSON is well represented with valid parameters.']
Face left and go straight for 5 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}'];['1; The JSON structure includes the expected action "move" and parameters such as "distance", "is_forward", and "unit". However, the natural language command also includes directional information ("Face left") that isn\'t represented in the JSON structure. Morever, "linear_speed" value is different than expected from the natural language command.']
Rotate counterclockwise by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command specifies an "rotate" action which matches with the JSON provided. The direction of rotation, the angle and the units ("degrees") are also consistent between the command and the JSON. Although the angular_velocity isn\'t specified in the command, as per guidelines, any reasonable value in the JSON is accepted hence 10 is acceptable. Therefore, the natural language command and the JSON structure conform exactly.']
Rotate in an anticlockwise direction by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; The natural language command perfectly matches with the JSON structure. The action ("rotate") and the parameters ("angle" = 90, "is_clockwise" = false, "unit" = "degrees") match up. There\'s no exact match for "angular_velocity" but the given value conforms to the requirements.']
Perform a 90-degree counterclockwise rotation.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command wants a 90 degrees counterclockwise rotation which matches exactly with the JSON structure\'s action of rotation with an angle of 90, and "is_clockwise" set to false (indicating a counterclockwise rotation). The "angular_velocity" value doesn\'t need to match exactly as per the guidance.']
Turn left by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];["5; Exactly conform. The natural language command exactly matches the JSON structure. The action 'rotate' and parameters 'angle' with value 90, 'is_clockwise' with value false, 'unit' with value 'degrees' match perfectly. The 'angular_velocity' doesn't have a specific value in the command, but the value provided in the JSON is reasonable."]
Anti-rotate by 90 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; The command can be interpreted as asking for a rotation action, which is exactly what is reflected in the JSON structure. The direction (anti-clockwise), angle (90 degrees) and unit (degrees) all match with the command. Although the "angular_velocity" value is different, it\'s not specified in the natural language command, so this is an acceptable value.']
Move backward for 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "meter"}}'];['4; Almost conform. Although the command "Move backward for 3 meters" was well interpreted in the JSON in terms of distance, direction and unit, the "linear_speed" was set to 1 not 0.5 (from the sample), and it is not mentioned in the natural language command, which reduces the conformity score.']
Go in reverse for a distance of 3 meters.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": false, "unit": "meter"}}'];['5; All items of the natural language command have been represented in the JSON structure. The forwarding movement being false indicates a reverse move, and 3 meters has been accounted for as well.']
Retreat by 3 meters.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": false, "unit": "meter"}}'];["4; The action and parameters mostly match the natural language command, but it is not specified in the command whether the robot is to move at a linear speed of 0.5. The robot is accurately moving backwards, as opposed to forwards, hence it is a 'retreat'. But this could be a little subjective without the natural text explicitly mentioning moving 'slowly' or using a speed reference."]
Step back 3 meters.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform. The command matches the action "move" which is present in the JSON structure. All parameters ("linear_speed", "distance", "is_forward", "unit") are provided in the command or can be reasonably inferred (as in the case of "linear_speed"). The direction specified in the command "step back" correctly corresponds to "is_forward": false in the JSON.']
Reverse direction and travel 3 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": false, "unit": "meter"}}'];["4; The natural language command nearly conforms to the JSON structure. The action of reversing and moving is correctly interpreted in the JSON output, although the exact 'linear_speed' is not specified in the command, its selection as 1 is reasonable. However, since the direction of motion is specified as reverse, the 'is_forward' parameter should ideally be set to false. The 'distance' and 'unit' parameters correctly follow the command."]
Turn right and move forward at 0.5 m/s for 20 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 10, "is_forward": true}}'];['3; The natural language command matches with the action type "move" and "linear_speed" of 0.5 in the JSON structure. However, the duration (20 seconds) mentioned in the command does not match with any parameter in the JSON. The distance value and the parameter "is_forward" was correct. The "rotate" action was not represented in the provided JSON.']
Proceed straight for 20 seconds at a speed of 0.5 m/s after turning right.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 10, "is_forward": true, "unit": "meter"}}'];['2; The natural language command includes actions for both moving and turning, however the JSON structure only represents the moving action. Additionally, the distance parameter in the JSON does not match with the command which specifies the movement in terms of time not distance.']
After making a right turn, travel forward for 20 seconds at a velocity of 0.5 m/s.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 10, "is_forward": true, "unit": "meter"}}'];['3; The natural language command includes an action ("travel forward") and parameters ("velocity of 0.5 m/s" and "for 20 seconds") that are present in the "move" JSON structure, but the parameter "distance: 10" in the JSON does not match the instruction "for 20 seconds" in the natural language command. Also, the natural language command includes "After making a right turn" but there is no corresponding "rotate" JSON.']
Make a right turn and advance for 20 seconds at a rate of 0.5 m/s.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 0.5, "distance": 10, "is_forward": true, "unit": "meters"}}'];["4; The natural language command partially matches with the JSON structures in terms of actions (rotate and move). However, the rotation parameters and moving distance do not completely match. In the command, the specific degrees of rotation isn't mentioned, a standard 90 degrees for a right turn is assumed in the JSON which is acceptable. The move action in the command specifies the duration (20 seconds) but in JSON, it is represented with distance. It is clear that the command wants the entity to move forward, and although a specific distance isn't mentioned, an estimation is used in the JSON structure which is reasonable."]
After turning right, maintain a speed of 0.5 m/s and move forward for 20 seconds.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 10, "is_forward": true, "unit": "seconds"}}'];['2; The JSON structure partially matches the natural language command. The "move" action, "linear_speed", "is_forward", and "unit" keys are correctly represented. However, the "distance" key in JSON doesn\'t match the command. Also, there is no JSON representation for the turning action mentioned in the command.']
Go to the living room and stop.,['{"action": "go_to_goal", "params": {"location": "Living Room"}}'];['5; The natural language command perfectly matches the JSON structure. The action of "go_to_goal" and the location parameter of "Living Room" align correctly with the given command to go to the Living Room. The command to stop doesn\'t have a corresponding JSON structure, but doesn\'t detract from the matching conformity.']
Please proceed to the living room and come to a halt.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living Room"}}}'];['5; The natural language command matches exactly with the JSON structure. The action "go_to_goal" and location value "Living Room" are accurately represented in the JSON ontology.']
Make your way to the living room and cease movement.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living Room"}}}'];['4; The action "go_to_goal" and the type "str" match the command structure. The value "Living Room" correctly conforms with the content of the command. However, there\'s no direct representation of "cease movement" in the provided JSON structure which may need a separate action key-value pair.']
Head over to the living room and pause.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "living room"}}}'];['2; The natural language command is somewhat consistent with the JSON structure. The action "go_to_goal" and the location "living room" matches with the provided command. However, the command also includes an additional task "pause" which is not represented in the JSON structure.']
Walk into the living room and stand still.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Living Room"}}}'];["5; Exactly conform. The natural language command specifies going to a location (into the living room) which matches perfectly with the JSON's action and parameters (going to a specific location, in this case, the living room)."]
Move forward for 2 seconds at a speed of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1.0, "distance": 2, "is_forward": true, "unit": "seconds"}}'];['4; The command mostly matches with the JSON instruction. However, the "unit" in JSON is described in "seconds", which is not suited for a "distance" parameter, it should be in meters. The linear speed has the correct value, and the move action is executed as forward, which completely fits the command.']
Proceed straight ahead for a duration of 2 seconds with a velocity of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];['4; The JSON structure matches the natural language command well with correct action and parameters. However, it doesn\'t perfectly conform to the sample ontology because the unit for distance parameter in the command is specified as "seconds" instead of "meter".']
Advance for 2 seconds with a speed of 1 meter per second in the forward direction.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];["4; The JSON structure correctly captures the action 'move' and its parameters 'linear_speed' and 'is_forward'. However, the 'distance' in the command refers to time (seconds), which does not match the unit in the JSON structure ('meter')."]
Move ahead at a rate of 1 meter per second for 2 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['5; The natural language command requires the robot to move forward and specifies the speed as well as the duration for which the motion should be sustained. These details are perfectly mirrored in the given JSON structure that specifies the action to be performed as "move", the speed of the movement, the duration for which the action should be performed, and the direction of movement as forward. The fact that the distance is calculated in the JSON by using the time duration doesn\'t affect the score because the end result is the same: the robot moves forward for a specific time at a specified speed.']
Travel straight ahead for 2 seconds, maintaining a speed of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "seconds"}}'];['4; The values and action in the JSON object match with the ones from the command, however the distance parameter in this context does not align with JSON structure as it should represent spatial length (for example meters), not time (seconds). Furthermore, the unit value should be "meter" instead of "seconds".']
Rotate clockwise by 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; The natural language command perfectly corresponds to the JSON structure. The action "rotate" is accurately indicated, the parameters such as "angle", "is_clockwise", and "unit" are also correctly specified. The "angular_velocity" value isn\'t stated in the natural language command, but the given value in the JSON structure is acceptable.']
Perform a clockwise rotation of 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The JSON structure correctly interprets the natural language command of a clockwise rotation of 180 degrees. The keys match those found in the sample ontology, and a reasonable angular velocity value is given.']
Rotate 180 degrees in the clockwise direction.,['{"action": "rotate", "params": {"angular_velocity": 15, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];["4.5; The natural language command matches well with the JSON information. It outlines a rotation action, angle and rotation direction which clearly exist in the JSON. A small discrepancy lies in the angular velocity, it's not specified in the command. However, in the JSON, a reasonable value of 15 is given which is acceptable."]
Turn in a clockwise direction and rotate by 180 degrees.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The natural language command directs the system to rotate in a clockwise direction by 180 degrees, which is accurately represented in the JSON structure. The specific values for "angular_velocity" and "is_clockwise" are correct according to the command and the "angle" parameter exactly matches the required 180 degrees. The "unit" is also correctly given as "degrees".']
Execute a 180-degree clockwise rotation.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform.']
Move forward for 4 meters and then turn left.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}} ', '{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['5; Exactly conform. The natural language command perfectly matches the actions and the parameters defined in the JSON structures. Both the "move" and "rotate" actions are used correctly with appropriate parameters. The direction of rotation is not explicitly specified in the command but turning left is generally assumed to be counter-clockwise which matches with "is_clockwise": false.']
Proceed straight ahead, covering a distance of 4 meters, and subsequently make a left turn.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}}'];['4; The command "Proceed straight ahead, covering a distance of 4 meters" matches the JSON structure well and finds accurate mapping in the "move" action. However, the second part of the command "subsequently make a left turn" does not match any of the available JSON structures and can\'t be mapped in the given ontology. Thus, it\'s partially conforming.']
Go straight for a distance of 4 meters followed by a left turn.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}} ', '{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];["4; The natural language command asks for a specific set of movements, and these are reflected in the JSON structures provided. However, it doesn't specify the speed of the move action or the angular velocity of the rotation, so those values are assigned in the JSON arbitrarily, which is why the score isn't a perfect 5."]
Advance in the forward direction, covering 4 meters, and then make a leftward turn.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meters"}}'];['4; The natural language command is partially converted into JSON. The \'move\' action and its relevant parameters (\'distance\', \'is_forward\', \'unit\') are correctly represented. However, the \'rotate\' action (implied in the command "make a leftward turn") is not captured in the given JSON. Additionally, \'linear_speed\' accepts any reasonable value and therefore 1 is accepted in this context.']
Move ahead for 4 meters and then change direction by turning left.,['{"action": "move", "params": {"linear_speed": 1, "distance": 4, "is_forward": true, "unit": "meter"}} ', '{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}}'];['4; The first JSON structure matches the "Move ahead for 4 meters" part of the command, specifying the correct action and parameters. The second JSON structure matches the "turning left" part of the command as a rotation to the left is generally considered as anti-clockwise. However, the linear_speed and angular_velocity values were not specified in the command but are included in the JSON, hence the score of 4 instead of 5.']
Rotate counterclockwise by 60 degrees and move forward for 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}},', '{"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": true, "unit": "meter"}}'];['5; The natural language command matches with the provided JSON structure. The action "rotate" with a counterclockwise ("is_clockwise": false) parameter and an angle of 60 degrees is correctly mapped to the JSON command. The second part of the command "move forward for 3 meters" is also correctly converted into the action "move" with the "is_forward": true and "distance": 3 parameters in the JSON. Furthermore, all the keys from the given commands are present in the sample ontology.']
Turn left by 60 degrees and proceed ahead for a distance of 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": true, "unit": "meters"}}'];['4.5; The structs mainly conform to the NL command, with the actions "rotate" and "move" correctly parsed, as well as the "angle", "distance", "is_forward", and "unit" parameters. However, the alignment is not perfect due to the "angular_velocity" value being set to 10 in the JSON, while the velocity is not mentioned in the command.']
Perform a 60-degree counterclockwise rotation and then move forward for 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}, {"action": "move", "params": {"linear_speed": 0.5, "distance": 3, "is_forward": true, "unit": "meters"}}'];['5; Exactly conform. The natural language command perfectly matches with the JSON structures. The \'rotate\' action specifies a counter-clockwise rotation, which is reflected in the "is_clockwise": false, along with the correct rotation unit, angle, and an arbitrary accepted value for angular_velocity. The \'move\' command correctly identifies forward movement (is_forward: true), with correct distance and unit, and an accepted value for linear_speed.']
Rotate anti-clockwise by 60 degrees and advance 3 meters in the same direction.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}} ', '{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];['5; The commands in the natural language input exactly match the JSON structures provided. The "rotate" action is correctly interpreted with "angular_velocity", "angle", "is_clockwise", and "unit" params. The expected "is_clockwise" boolean value is correctly set to "false" for anti-clockwise rotation and the angle is correct. Similarly, the "move" action is correctly defined with "linear_speed", "distance", "is_forward", and "unit" params. The "distance" of 3 meters correctly corresponds to the "advance 3 meters" instruction in the natural language command.']
Firtly, turn 60 degrees to the left in a counterclockwise direction, and subsequently, move forward for 3 meters.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 60, "is_clockwise": false, "unit": "degrees"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 3, "is_forward": true, "unit": "meter"}}'];["5; Exactly conform. The commands in natural language exactly match the corresponding JSON structures. The 'rotate' and 'move' actions align with the given ontology, as do the specified parameters like 'angle', 'is_clockwise', 'distance', and 'is_forward'."]
Go to the bedroom and stop.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}}}'];['3; The natural language command conforms to the JSON structure for the action of going to a specific goal, but it does not include the command of stopping. Hence, the score is 3 as there is a partial match.']
Proceed to the bedroom and come to a halt.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}}}'];['3; The natural language command describes an action which is partially represented by the given JSON structure. The "go_to_goal" part is indeed reflected in the JSON, but there is no key for action to come to halt or stop in the JSON structures, so it\'s not fully represented.']
Make your way to the bedroom and cease your movement.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}}}'];["4; The command is mostly conforming to the JSON structure provided. The action of going to a location (the bedroom, in this case) is correctly represented in the JSON structure, However, the 'cease your movement' part of the command is not represented in the JSON. The ontology does not have a matching action for ceasing/stopping."]
Head towards the bedroom and come to a standstill.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}}}'];['5; Exactly conform. The natural language command correctly translates into the JSON command to go to a specific location ("Bedroom"), which is in conformity with the given JSON structures.']
Move to the bedroom and pause.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "Bedroom"}}}'];['2; The action in the natural language command and JSON is move/go_to_goal which matches with each other, but the pause command does not have its corresponding JSON structure. Moreover, the room "bedroom" also matches with the JSON structure.']
Move backward for 7 meters at a speed of 0.8 meters per second.,['{"action": "move", "params": {"linear_speed": 0.8, "distance": 7, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform.']
Travel in reverse for a distance of 7 meters with a velocity of 0.8 meters per second.,['{"action": "move", "params": {"linear_speed": 0.8, "distance": 7, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform.']
Go backwards for 7 meters, maintaining a speed of 0.8 meters per second.,['{"action": "move", "params": {"linear_speed": 0.8, "distance": 7, "is_forward": false, "unit": "meter"}}'];['5; The command conform with the JSON structure perfectly, containing "action": "move" and including all the required parameters ("linear_speed", "distance", "is_forward", "unit"), even with the optional "is_forward", which is deduced to be false from the "Go backward" instruction in the command.']
Reverse direction and travel for 7 meters at a velocity of 0.8 meters per second.,['{"action": "move", "params": {"linear_speed": 0.8, "distance": 7, "is_forward": false, "unit": "meter"}}'];['5; Exactly conform.']
Retrace your steps by moving 7 meters in reverse at a speed of 0.8 meters per second.,['{"action": "move", "params": {"linear_speed": 0.8, "distance": 7, "is_forward": false, "unit": "meter"}}'];["4; The JSON structure correctly captures almost all aspects of the command. The 'move' action and distance, 'is_forward' and 'unit' values match, but the natural language command specifies receding 7 meters at a specific speed of 0.8 m/s, while the JSON structure directly converts this to a linear speed instead of specifying it is a reverse motion speed."]
Turn left and move forward for 5 meters at a speed of 2 meters per second.,['{"action": "move", "params": {"linear_speed": 2, "distance": 5, "is_forward": true, "unit": "meter"}}'];["2; The JSON structure does capture the 'move' action correctly with all its parameters and values matching the natural language command. However, the command of 'turn left', translating into a rotation action, is not represented in the provided JSON."]
Take a left turn and proceed straight ahead for a distance of 5 meters, maintaining a speed of 2 meters per second.,['{"action": "move", "params": {"linear_speed": 2, "distance": 5, "is_forward": true, "unit": "meters"}}'];['2; The JSON structure correctly interprets the portion of the command instructing to "proceed straight ahead for a distance of 5 meters, maintaining a speed of 2 meters per second.". However, it does not address or represent the instruction of "Take a left turn" from the natural language command.']
Make a left turn and advance forward for 5 meters with a velocity of 2 meters per second.,['{"action": "move", "params": {"linear_speed": 2, "distance": 5, "is_forward": true, "unit": "meters"}}'];['2; The linear movement action and its parameters are correctly represented in JSON structure. However, the left turn action mentioned in the natural language command is not reflected at all in the JSON structure, resulting in an incomplete representation.']
Execute a left turn and continue moving ahead for 5 meters, traveling at a speed of 2 meters per second.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": false, "unit": "degrees"}},', '{"action": "move", "params": {"linear_speed": 2, "distance": 5, "is_forward": true, "unit": "meter"}}'];['5; Exactly conform. The natural language command precisely matches the JSON information. It accurately dictates a rotation (left turn) and the subsequent movement, including the direction (ahead/forward), distance (5 meters), and speed (2 meters per second). All of these parameters are correctly included in the structured JSON.']
Change direction to the left and travel straight for a distance of 5 meters, keeping a constant speed of 2 meters per second.,['{"action": "move", "params": {"linear_speed": 2, "distance": 5, "is_forward": true, "unit": "meter"}}'];['3; The move action with specified parameters matches the command partially but the command to change direction which would use the rotate action is not present in the JSON structure.']
Back up for 1 meter and then execute a 90-degree turn to the right.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}, {"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": true, "unit": "degrees"}}'];['4; Almost all commands matched perfectly with the JSON structures. The "move" action was correctly translated with all parameters, including "is_forward" being set to false to signify backing up. The "rotate" action was also correctly translated. The only issue is with the "angular_velocity" parameter, the value is not specified in the natural language command and although any reasonable value is accepted, the given value of 10 might not be reasonable considering the other value was 0.35 in the previous example.']
Reverse for 1 meter and then make a right turn of 90 degrees.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": false, "unit": "meter"}}, ', '{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. The natural language command perfectly matches the provided JSON structures. The robot\'s reversing action is represented with "move" action and "is_forward": false. The right turn command is depicted with the "rotate" action and "is_clockwise": true. The values in the command (1 meter and 90 degrees) match with the values provided in the JSON structures.']
Move backwards by 1 meter and then perform a right turn at a 90-degree angle.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}', '{"action": "rotate", "params": {"angular_velocity": 1, "angle": 90, "is_clockwise": true, "unit": "degrees"}}'];["4; The JSON structures match the command in terms of action and parameters such as direction, distance, unit and angle. But the specific values for linear speed, angular velocity are not mentioned in the natural language command, so the values in the JSON (1 for both) can't be confirmed as correct. Thus, a point is deducted."]
Retreat by 1 meter and then make a right turn of 90 degrees.,['{"action": "move", "params": {"linear_speed": 1, "distance": 1, "is_forward": false, "unit": "meter"}}, {"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": true, "unit": "degrees"}}'];['5; The natural language command matches perfectly with provided JSON structures. The "retreat by 1 meter" part corresponds to the "move" action with "is_forward" as false and "distance" as 1. The "make a right turn of 90 degrees" part corresponds to the "rotate" action with "is_clockwise" as true and "angle" as 90. The units (meter, degrees) also fit well. The angular_velocity and linear_speed parameters aren\'t specified in the command, but reasonable values are in the JSON.']
Take a step back for 1 meter and then execute a 90-degree right turn.,['{"action": "move", "params": {"linear_speed": 0.5, "distance": 1, "is_forward": false, "unit": "meter"}}, ', '{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": true, "unit": "degrees"}}'];['5; Exactly conform. Both the move and rotate actions are detailed accurately in the JSON structure to match the natural language command.']
Navigate to the specified GPS coordinates and play a pre-recorded message.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "specified GPS coordinates"}}}'];['0; The action of playing a pre-recorded message is not present in the sample keys. Additionally, the type of location in the JSON structure is "str", but the command refers to a GPS location which is usually represented as coordinates, not a string.']
Please go to the given GPS coordinates and play the pre-recorded message.,['{"action": "go_to_goal", "params": {"location": {"type": "str", "value": "GPS coordinates"}}}'];['2; The JSON structure partially matches with the command. The "go_to_goal" command is correctly implemented in the JSON, but the command of playing a pre-recorded message is not represented in the JSON at all.']
Can you navigate to the provided GPS coordinates and start playing the recorded message?,['{}'];['0; The command references an action of navigating to GPS coordinates and playing a recorded message, neither of which are represented in any of the provided JSON structures.']
Follow the given GPS coordinates and play the message that has been prerecorded.,['{}'];["0; The natural language command does not match with any of the JSON structures provided as there is no 'follow GPS coordinates' or 'play message' action, neither any related parameters."]
Head to the specified GPS coordinates and initiate the playback of the pre-recorded message.,['{}'];['0; The natural language command mentioned navigating to a specific GPS coordinate and playing a pre-recorded message, neither of these actions or any related parameters can be found in the provided JSON structures.']
Move in a zigzag pattern for 10 meters, alternating between forward and backward motions.,['{"action": "move", "params": {"linear_speed": 1.0, "distance": 10, "is_forward": true, "unit": "meter"}}'];['1; Although the provided JSON structure contains the "action": "move" and is partially in line with the natural language command, it is inadequate to capture the nuances of the command. It does not include an alternating pattern between forward and backward motions, which is a key aspect of the command, and it assumes a linear speed of 1.0 which is not specified in the command.']
Alternate between moving forward and backward in a zigzag pattern for a distance of 10 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}} ', '{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": false, "unit": "meter"}}'];['3; While the JSON structure aligns with the sample ontology keys and values, it does not encapsulate the "zigzag pattern" element of the natural language command. The command suggests an alternating pattern of movement rather than two distinct forward and backward movements. This is a complex movement that might not be fully covered by the provided ontology.']
Cover a distance of 10 meters by moving in a zigzag pattern, alternating between forward and backward movements.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}}'];['1; The natural language command indicates a movement in a "zigzag pattern, alternating between forward and backward movements", however this is not reflected in the JSON structure. The JSON simply describes moving forward for a distance of 10 meters. There\'s a lack of information in the JSON to fully realize the command hence the low score.']
Perform a zigzag pattern, moving forward and then backward, spanning across a distance of 10 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}}'];['1; The natural language command mentions movement in a "zigzag pattern" and also "moving backward", which isn\'t captured in the JSON command. Furthermore, a zigzag pattern isn\'t simply moving forward, it would likely involve rotation as well. Hence, although some parameters like unit, distance, and moving forward match, the commands don\'t completely align, so they partially conform.']
Switch between forward and backward motions while moving in a zigzag pattern for a total distance of 10 meters.,['{"action": "move", "params": {"linear_speed": 1, "distance": 10, "is_forward": true, "unit": "meter"}}'];['1; The JSON command captures the elements of movement and distance in the natural language command but misses the aspect of switching between forward and backward motions and moving in a zigzag pattern. The natural language command is more complex than what the JSON command can express.']
Spin around in a circle three times and then stop abruptly.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 1080, "is_clockwise": true, "unit": "degrees"}}'];['4; The natural language command is mostly conform to the JSON. The spin is correctly interpreted as a rotation action and three times around a circle is correctly translated into 1080 degrees. However there is no direct equivalent in the JSON for the "stop abruptly" part of the command, therefore it is not perfectly conform.']
Rotate in a full circle three times before coming to an abrupt halt.,['{"action": "rotate", "params": {"angular_velocity": null, "angle": 1080, "is_clockwise": true, "unit": "degrees"}}'];['3; The natural language command is translating to the JSON structure but with some missing information. The JSON structure matches the \'rotate\' action and even the \'angle\' is correctly interpreted (360 degrees * 3 = 1080 degrees). However, \'angular_velocity\', although acceptable as null, is not inferred from the command "coming to an abrupt halt". \'is_clockwise\' isn\'t specified in the command either.']
Perform three complete rotations in a circular motion and then abruptly come to a stop.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 1080, "is_clockwise": true, "unit": "degrees"}}'];['4; The natural language command mostly matches the JSON structure. The \'rotate\' command is used correctly. The angles for three full rotations (360*3=1080 degrees) is correctly calculated. However, the "abruptly come to a stop" part is not clearly represented in the JSON and there is no key in this sample ontology to represent the abrupt stop. Also, the angular_velocity is arbitrarily given as 1, which can be accepted as a reasonable value as it\'s not mentioned in the command.']
Turn around in a complete circle three times and then suddenly cease movement.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 1080, "is_clockwise": true, "unit": "degrees"}}'];['5; The natural language command corresponds accurately to the JSON structure. The rotate action exemplified in the JSON fits well with the command of turning around in a circle three times (1080 degrees = 360 degrees * 3). The "suddenly cease movement" part can be inferred from the end of the rotation action.']
Spin in a circle three times and then bring yourself to an immediate halt.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 1080, "is_clockwise": true, "unit": "degrees"}}'];['4; The JSON structure accurately represents the "spin in a circle three times" command, even though a specific angular velocity is not mentioned in the natural language command but is given a reasonable value in the JSON. However, the command "bring yourself to an immediate halt" isn\'t represented in the JSON.']
Move forward at a constant speed of 1 meter per second for 30 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 30, "is_forward": true, "unit": "meter"}}'];["2; The natural language command and the JSON structure do have some matching elements such as the action 'move' and the parameter 'is_forward'. However, the natural language command mentioned moving for 30 seconds at a certain speed, whereas the JSON structure is describing a distance to be traveled rather than a duration of time. The 'linear_speed' value is correct, but the 'distance' value in the JSON does not correspond to the natural language command."]
Maintain a steady speed of 1 meter per second and proceed forward for a duration of 30 seconds.,['{"action": "move", "params": {"linear_speed": 1, "distance": 30, "is_forward": true, "unit": "meter"}}'];["4; Mostly conform. The 'distance' value in the JSON structure uses time (in seconds) rather than a distance metric, which does not conform perfectly with the expected values for a 'distance' key. However, the rest of the command converts neatly into the provided JSON structure, and the expected movement action and direction ('is_forward': true) are correctly identified."]
Continue moving ahead in a straight line for 30 seconds at a constant speed of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 30, "is_forward": true, "unit": "meter"}}'];['2; The JSON structure provided does not fully conform with the natural language command. The command provides a "time" (30 seconds) and a "speed" (1 meter per second), which suggests distance should be calculated as 30 meters instead of the provided 30 seconds. However, the key "time" does not exist in the sample key. The "is_forward" parameter correctly matches with the "Continue moving ahead" command. The unit of the speed ("meter") correctly matches as well.']
Advance for 30 seconds with a consistent velocity of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 30, "is_forward": true, "unit": "meter"}}'];['5; The natural language command matches perfectly with the JSON structure. All parameters including action, linear_speed, distance, is_forward, and unit are present and match correctly.']
For a period of 30 seconds, travel straight ahead with an unchanging speed of 1 meter per second.,['{"action": "move", "params": {"linear_speed": 1, "distance": 30, "is_forward": true, "unit": "meter"}}'];['5; The command perfectly matches the provided JSON structure. The action is "move", which corresponds to the command "travel straight ahead". The parameter "linear_speed" with the value 1 matches "with an unchanging speed of 1 meter per second." The parameter "distance" with the value 30 matches "for a period of 30 seconds" since the robot is moving at 1 meter per second. The parameter "is_forward" set to true matches "straight ahead". Finally, the unit is correctly specified as "meter".']
Turn right and follow a curved path for 2 meters, then stop and beep.,['{"action": "move", "params": {"linear_speed": 0.2, "distance": 2, "is_forward": true, "unit": "meter"}}'];['2; The JSON structure includes "move" action and covers distance and units, but it is missing information about turning right and does not have suitable keys to represent "follow a curved path" and "beep" action from the natural language command.']
Make a right turn and proceed along a curved path, covering a distance of 2 meters. Afterwards, come to a halt and emit a beep sound.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];['2; The "move" action matches, but the parameters mentioned in the natural language command do not match exactly to the JSON. The "emit a beep sound" command does not exist in the sample keys and the turn command is not represented in the JSON.']
Take a right turn and continue along a serpentine trail for a length of 2 meters. Next, pause and produce a beeping sound.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 90, "is_clockwise": true, "unit": "degrees"}},', '{"action": "move", "params": {"linear_speed": 0.5, "distance": 2, "is_forward": true, "unit": "meter"}}'];["2; Partial conformity. Although the commands 'rotate' and 'move' are present in the text and JSON structure, the JSON structure includes an 'angular_velocity' of 10 which is not specified in the natural language command. Moreover, the command to 'pause and produce a beeping sound' does not exist in the provided sample keys and was not converted to JSON."]
Execute a rightward turn and navigate along a curving route for a distance of 2 meters. Subsequently, cease movement and emit a beep.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meters"}}'];['1; The JSON structure describes a forward motion for specified distance and speed, adhering to the distance command in the natural language command ("navigate along a curving route for a distance of 2 meters"). However, the command to "execute a rightward turn" (rotation) is not reflected in the JSON. Additionally, the action to "cease movement and emit a beep" is not captured. The unit of distance ("meter") incorrectly stated as "meters". Therefore, the command and the JSON structure partially match.']
Alter your direction towards the right and travel along a winding pathway for 2 meters. Then, come to a stop and produce a beeping noise.,['{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": true, "unit": "meter"}}'];["0; The natural language command is not represented adequately in the given JSON structure. The statements 'Alter your direction towards the right', 'travel along a winding pathway', 'come to a stop' and 'produce a beeping noise' are completely missing in the JSON structure."]
Move forward for 5 meters and then reverse for 2 meters, repeating twice.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "meter"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "meter"}}'];["5; Exactly conform. The natural language command instructs the action to 'Move' which is correctly identified in the JSON, the distance specified for each move in the natural language command (5m forward, 2m backward) is also correctly identified in the JSON structure. The direction of the 'move' is correctly identified as 'is_forward' for forward movement and 'false' for backward movement. The repetition of the sequence is correctly represented in the JSON as the sequence is repeated twice. There is a missing key for 'repeat' in the sample keys, but in this case it is represented by the repeated JSON structures. Therefore, it is fully conform."]
Repeat the sequence of moving forward for 5 meters, then reversing for 2 meters, twice.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "meter"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}}, ', '{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "meter"}}'];['4.5; The JSON structures match the natural language command almost exactly. However, the command does not specify the "linear_speed" value, so while the JSON\'s value of 1 is reasonable, it\'s not directly mentioned in the command.']
Perform a forward movement of 5 meters, followed by a reverse movement of 2 meters, and repeat this pattern twice.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meter"}} ', '{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "meter"}}'];['0; The JSON structures provided correspond to the command of moving forward and backwards. However, there is nothing in the JSON structures that indicates the repetition of this pattern twice as stated in the command. Therefore, the conformity score is 0.']
Move ahead for 5 meters and then go in reverse for 2 meters, repeating this cycle twice.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meters"}} ', '{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "meters"}}'];['5; Exactly conform. The commands "move ahead for 5 meters" and "then go in reverse for 2 meters", correctly translate to the corresponding JSON structures that depict the action "move", distance, direction and units accordingly. The repetition part is not specified in the JSON, but as for the conformity with the sample keys, both commands given in the natural language translate accurately.']
Execute a forward motion of 5 meters, stop, go back for 2 meters, stop, and repeat this process twice.,['{"action": "move", "params": {"linear_speed": 1, "distance": 5, "is_forward": true, "unit": "meters"}} ', '{"action": "move", "params": {"linear_speed": 1, "distance": 2, "is_forward": false, "unit": "meters"}}'];["4; Although the repeat command does not exist in the sample keys, the JSON structure correctly represents the natural language command's actions to move forward and back with corresponding parameters. A point is deducted because the repeatability of the actions isn't represented in the provided JSON structures."]
Randomly select a direction and move forward for a random duration between 1 and 5 seconds.,['{"action": "move", "params": {"linear_speed": "random", "distance": "random", "is_forward": true, "unit": "seconds"}}'];["2; Although natural language command asks a random move to be performed, it does not specify where to move and what speed to use. Also unit of distance in JSON structure doesn't match with the command. Command refers to time (seconds) and JSON structure has distance (meters)."]
Choose a direction at random and proceed forward for a duration between 1 and 5 seconds, chosen randomly.,['{"action": "move", "params": {"linear_speed": "random", "distance": "random", "is_forward": true, "unit": "seconds"}}'];['2; Although the action of moving forward is correct and unit is set to second. The parameters "linear_speed" and "distance" do not match with the random choice described in the natural language command. Plus, the direction parameter is missing.']
Randomly pick a direction and move in that direction for a random period ranging from 1 to 5 seconds.,['{"action": "move", "params": {"linear_speed": "random", "distance": "random", "is_forward": true, "unit": "seconds"}}'];['1; The command asks for a random direction and a random period of time, but the JSON structure does not represent selecting a direction or a time duration. The keys \'linear_speed\' and \'distance\' are assigned "random" as a value which doesn\'t provide a proper correspondence. Additionally, the \'unit\' in the JSON structure is incorrectly labeled as \'seconds\' instead of \'meter\'.']
Select a random direction and move forward for a randomly determined time frame of 1 to 5 seconds.,['{"action": "move", "params": {"linear_speed": "random", "distance": "random", "is_forward": true, "unit": "seconds"}}'];['2; The JSON structure partly matches with the natural language command as it includes moving forward, which is mentioned in the command. However, the command also specifies selecting a random direction which can\'t be represented with the given JSON structure. Moreover, the unit in the JSON is given as "seconds" which is not a unit of distance.']
Pick a direction at random and proceed in that direction, randomly determining the duration to move forward between 1 and 5 seconds.,['{"action": "move", "params": {"linear_speed": "random", "distance": "random", "is_forward": true, "unit": "seconds"}}'];['2; The natural language command partially matches with the JSON structure. The action "move" and parameter "is_forward" are correct. However, the JSON structure\'s keys in the "params" field like "linear_speed" and "distance" have values marked as "random" which is not clearly defined in the command. Also, the unit \'seconds\' does not align well with the \'move\' action as \'seconds\' have no meaning in context. The command also includes the aspect of picking a direction which cannot be gathered from the provided JSON.']
Perform a 180-degree turn, then launch a small drone from your back.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['2; The JSON information partially matches the natural language command. The rotation command and its parameters (‘angle’, ‘unit’) are correctly represented in the JSON. However, the command to "launch a small drone from your back" isn\'t represented at all in the JSON structure, resulting in incomplete conformity. Also the \'angular_velocity\' and \'is_clockwise\' parameters weren\'t mentioned in the natural language command, but their values in the JSON structure are acceptable.']
Execute a 180-degree rotation and subsequently release a compact drone from your rear.,['{"action": "rotate", "params": {"angular_velocity": 1, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['1; The natural language command partially matches with the "rotate" JSON structure. There is no JSON structure for releasing a drone in the given sample keys.']
Initiate a 180-degree turn followed by the deployment of a diminutive drone from behind you.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['1; The JSON structure partially matches the command given. The rotation action and angle parameter aligns but "angular_velocity" and "is_clockwise" parameters were unspecified in the command. Given the context, assuming a reasonable velocity and clockwise rotation is acceptable. However, "deployment of a diminutive drone" does not exist in the sample ontology which lowers the compliance score.']
Conduct a 180-degree maneuver and proceed to launch a small aerial drone from your backside.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];["1; The JSON correctly describes the rotation action, however, the command to launch a drone does not exist in the JSON structure provided nor in the sample ontology. As a result, the conformity isn't complete."]
Carry out a 180-degree spin, then activate the release mechanism to send a small drone flying from your posterior.,['{"action": "rotate", "params": {"angular_velocity": 10, "angle": 180, "is_clockwise": true, "unit": "degrees"}}'];['1; Only the rotation portion of the command is represented in the provided JSON. The action of releasing a drone is not included in the sample ontology.']
